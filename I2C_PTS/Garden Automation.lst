

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Thu Mar 05 17:32:32 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_lcd_init
    43                           	FNCALL	_main,_adc_init
    44                           	FNCALL	_main,_i2c_init
    45                           	FNCALL	_main,_pwm1_init
    46                           	FNCALL	_main,_lcd_goto
    47                           	FNCALL	_main,_read_adc
    48                           	FNCALL	_main,___lwtoft
    49                           	FNCALL	_main,___ftmul
    50                           	FNCALL	_main,___fttol
    51                           	FNCALL	_main,_rtc_read
    52                           	FNCALL	_main,___bmul
    53                           	FNCALL	_main,___awdiv
    54                           	FNCALL	_main,_lcd_putch
    55                           	FNCALL	_main,___awmod
    56                           	FNCALL	_main,_lcd_clear
    57                           	FNCALL	_lcd_goto,_send
    58                           	FNCALL	_lcd_putch,_send
    59                           	FNCALL	_lcd_clear,_send
    60                           	FNCALL	_lcd_init,_LCD_STROBE
    61                           	FNCALL	_lcd_init,_send
    62                           	FNCALL	_rtc_read,_i2c_start
    63                           	FNCALL	_rtc_read,_i2c_write
    64                           	FNCALL	_rtc_read,_i2c_restart
    65                           	FNCALL	_rtc_read,_i2c_read
    66                           	FNCALL	_rtc_read,_i2c_nack
    67                           	FNCALL	_rtc_read,_i2c_stop
    68                           	FNCALL	_send,_LCD_STROBE
    69                           	FNCALL	___lwtoft,___ftpack
    70                           	FNCALL	___ftmul,___ftpack
    71                           	FNCALL	_i2c_read,_i2c_Wait
    72                           	FNCALL	_i2c_write,_i2c_Wait
    73                           	FNROOT	_main
    74                           	global	_chs0
    75                           	global	_chs1
    76                           	global	_chs2
    77                           	global	_mode
    78                           	global	_ADCON0
    79                           psect	text597,local,class=CODE,delta=2
    80                           global __ptext597
    81  0000                     __ptext597:
    82  001F                     _ADCON0	set	31
    83                           	global	_ADRESH
    84  001E                     _ADRESH	set	30
    85                           	global	_CCP1CON
    86  0017                     _CCP1CON	set	23
    87                           	global	_CCPR1L
    88  0015                     _CCPR1L	set	21
    89                           	global	_PORTD
    90  0008                     _PORTD	set	8
    91                           	global	_SSPBUF
    92  0013                     _SSPBUF	set	19
    93                           	global	_SSPCON
    94  0014                     _SSPCON	set	20
    95                           	global	_T2CON
    96  0012                     _T2CON	set	18
    97                           	global	_ADIF
    98  0066                     _ADIF	set	102
    99                           	global	_ADON
   100  00F8                     _ADON	set	248
   101                           	global	_CARRY
   102  0018                     _CARRY	set	24
   103                           	global	_GIE
   104  005F                     _GIE	set	95
   105                           	global	_GO
   106  00FA                     _GO	set	250
   107                           	global	_RB0
   108  0030                     _RB0	set	48
   109                           	global	_RC0
   110  0038                     _RC0	set	56
   111                           	global	_RC5
   112  003D                     _RC5	set	61
   113                           	global	_RD2
   114  0042                     _RD2	set	66
   115                           	global	_RD3
   116  0043                     _RD3	set	67
   117                           	global	_SSPIF
   118  0063                     _SSPIF	set	99
   119                           	global	_ADCON1
   120  009F                     _ADCON1	set	159
   121                           	global	_ADRESL
   122  009E                     _ADRESL	set	158
   123                           	global	_PR2
   124  0092                     _PR2	set	146
   125                           	global	_SSPADD
   126  0093                     _SSPADD	set	147
   127                           	global	_TRISB
   128  0086                     _TRISB	set	134
   129                           	global	_TRISD
   130  0088                     _TRISD	set	136
   131                           	global	_ACKDT
   132  048D                     _ACKDT	set	1165
   133                           	global	_ACKEN
   134  048C                     _ACKEN	set	1164
   135                           	global	_ACKSTAT
   136  048E                     _ACKSTAT	set	1166
   137                           	global	_PEN
   138  048A                     _PEN	set	1162
   139                           	global	_RCEN
   140  048B                     _RCEN	set	1163
   141                           	global	_RSEN
   142  0489                     _RSEN	set	1161
   143                           	global	_SEN
   144  0488                     _SEN	set	1160
   145                           	global	_TRISA0
   146  0428                     _TRISA0	set	1064
   147                           	global	_TRISA1
   148  0429                     _TRISA1	set	1065
   149                           	global	_TRISC0
   150  0438                     _TRISC0	set	1080
   151                           	global	_TRISC2
   152  043A                     _TRISC2	set	1082
   153                           	global	_TRISC3
   154  043B                     _TRISC3	set	1083
   155                           	global	_TRISC4
   156  043C                     _TRISC4	set	1084
   157                           	global	_TRISC5
   158  043D                     _TRISC5	set	1085
   159                           	global	_EEADR
   160  010D                     _EEADR	set	269
   161                           	global	_EEDATA
   162  010C                     _EEDATA	set	268
   163                           	global	_EECON1
   164  018C                     _EECON1	set	396
   165                           	global	_EECON2
   166  018D                     _EECON2	set	397
   167                           	global	_RD
   168  0C60                     _RD	set	3168
   169                           	global	_WR
   170  0C61                     _WR	set	3169
   171                           	global	_WREN
   172  0C62                     _WREN	set	3170
   173                           	file	"Garden Automation.as"
   174                           	line	#
   175                           psect cinit,class=CODE,delta=2
   176                           global start_initialization
   177  00A6                     start_initialization:
   178                           
   179                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   180                           global __pbitbssCOMMON
   181  03E8                     __pbitbssCOMMON:
   182  03E8                     _chs0:
   183  03E8                            ds      1
   184                           
   185  03E9                     _chs2:
   186  03E9                            ds      1
   187                           
   188  03EA                     _mode:
   189  03EA                            ds      1
   190                           
   191                           psect	bitbssBANK0,class=BANK0,bit,space=1
   192                           global __pbitbssBANK0
   193  02C0                     __pbitbssBANK0:
   194  02C0                     _chs1:
   195  02C0                            ds      1
   196                           
   197                           ; Clear objects allocated to BITCOMMON
   198                           psect cinit,class=CODE,delta=2
   199  00A6  01FD               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   200                           ; Clear objects allocated to BITBANK0
   201                           psect cinit,class=CODE,delta=2
   202  00A7  01D8               	clrf	((__pbitbssBANK0/8)+0)&07Fh
   203                           psect cinit,class=CODE,delta=2
   204                           global end_of_initialization
   205                           
   206                           ;End of C runtime variable initialization code
   207                           
   208  00A8                     end_of_initialization:
   209  00A8  0183               clrf status
   210  00A9  120A  118A  2DA6   ljmp _main	;jump to C main() function
   211                           psect	cstackCOMMON,class=COMMON,space=1
   212                           global __pcstackCOMMON
   213  0070                     __pcstackCOMMON:
   214                           	global	?_i2c_Wait
   215  0070                     ?_i2c_Wait:	; 0 bytes @ 0x0
   216                           	global	??_i2c_Wait
   217  0070                     ??_i2c_Wait:	; 0 bytes @ 0x0
   218                           	global	?_LCD_STROBE
   219  0070                     ?_LCD_STROBE:	; 0 bytes @ 0x0
   220                           	global	??_LCD_STROBE
   221  0070                     ??_LCD_STROBE:	; 0 bytes @ 0x0
   222                           	global	?_send
   223  0070                     ?_send:	; 0 bytes @ 0x0
   224                           	global	?_pwm1_init
   225  0070                     ?_pwm1_init:	; 0 bytes @ 0x0
   226                           	global	??_pwm1_init
   227  0070                     ??_pwm1_init:	; 0 bytes @ 0x0
   228                           	global	?_adc_init
   229  0070                     ?_adc_init:	; 0 bytes @ 0x0
   230                           	global	??_adc_init
   231  0070                     ??_adc_init:	; 0 bytes @ 0x0
   232                           	global	?_i2c_init
   233  0070                     ?_i2c_init:	; 0 bytes @ 0x0
   234                           	global	??_i2c_init
   235  0070                     ??_i2c_init:	; 0 bytes @ 0x0
   236                           	global	?_i2c_start
   237  0070                     ?_i2c_start:	; 0 bytes @ 0x0
   238                           	global	??_i2c_start
   239  0070                     ??_i2c_start:	; 0 bytes @ 0x0
   240                           	global	?_i2c_stop
   241  0070                     ?_i2c_stop:	; 0 bytes @ 0x0
   242                           	global	??_i2c_stop
   243  0070                     ??_i2c_stop:	; 0 bytes @ 0x0
   244                           	global	?_i2c_restart
   245  0070                     ?_i2c_restart:	; 0 bytes @ 0x0
   246                           	global	??_i2c_restart
   247  0070                     ??_i2c_restart:	; 0 bytes @ 0x0
   248                           	global	?_i2c_write
   249  0070                     ?_i2c_write:	; 0 bytes @ 0x0
   250                           	global	??_i2c_write
   251  0070                     ??_i2c_write:	; 0 bytes @ 0x0
   252                           	global	??_i2c_read
   253  0070                     ??_i2c_read:	; 0 bytes @ 0x0
   254                           	global	?_i2c_nack
   255  0070                     ?_i2c_nack:	; 0 bytes @ 0x0
   256                           	global	??_i2c_nack
   257  0070                     ??_i2c_nack:	; 0 bytes @ 0x0
   258                           	global	?_lcd_init
   259  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   260                           	global	?_lcd_clear
   261  0070                     ?_lcd_clear:	; 0 bytes @ 0x0
   262                           	global	?_lcd_putch
   263  0070                     ?_lcd_putch:	; 0 bytes @ 0x0
   264                           	global	?_main
   265  0070                     ?_main:	; 0 bytes @ 0x0
   266                           	global	?_rtc_read
   267  0070                     ?_rtc_read:	; 1 bytes @ 0x0
   268                           	global	?_i2c_read
   269  0070                     ?_i2c_read:	; 1 bytes @ 0x0
   270                           	global	?___bmul
   271  0070                     ?___bmul:	; 1 bytes @ 0x0
   272                           	global	?_read_adc
   273  0070                     ?_read_adc:	; 2 bytes @ 0x0
   274                           	global	?___awdiv
   275  0070                     ?___awdiv:	; 2 bytes @ 0x0
   276                           	global	?___awmod
   277  0070                     ?___awmod:	; 2 bytes @ 0x0
   278                           	global	?___ftpack
   279  0070                     ?___ftpack:	; 3 bytes @ 0x0
   280                           	global	i2c_write@data
   281  0070                     i2c_write@data:	; 1 bytes @ 0x0
   282                           	global	___bmul@multiplicand
   283  0070                     ___bmul@multiplicand:	; 1 bytes @ 0x0
   284                           	global	___awdiv@divisor
   285  0070                     ___awdiv@divisor:	; 2 bytes @ 0x0
   286                           	global	___awmod@divisor
   287  0070                     ___awmod@divisor:	; 2 bytes @ 0x0
   288                           	global	___ftpack@arg
   289  0070                     ___ftpack@arg:	; 3 bytes @ 0x0
   290  0070                     	ds	1
   291                           	global	??___bmul
   292  0071                     ??___bmul:	; 0 bytes @ 0x1
   293                           	global	i2c_read@temp
   294  0071                     i2c_read@temp:	; 1 bytes @ 0x1
   295  0071                     	ds	1
   296                           	global	??_send
   297  0072                     ??_send:	; 0 bytes @ 0x2
   298                           	global	??_rtc_read
   299  0072                     ??_rtc_read:	; 0 bytes @ 0x2
   300                           	global	??_read_adc
   301  0072                     ??_read_adc:	; 0 bytes @ 0x2
   302                           	global	___bmul@product
   303  0072                     ___bmul@product:	; 1 bytes @ 0x2
   304                           	global	___awdiv@dividend
   305  0072                     ___awdiv@dividend:	; 2 bytes @ 0x2
   306                           	global	___awmod@dividend
   307  0072                     ___awmod@dividend:	; 2 bytes @ 0x2
   308  0072                     	ds	1
   309                           	global	rtc_read@reg_address
   310  0073                     rtc_read@reg_address:	; 1 bytes @ 0x3
   311                           	global	___bmul@multiplier
   312  0073                     ___bmul@multiplier:	; 1 bytes @ 0x3
   313                           	global	___ftpack@exp
   314  0073                     ___ftpack@exp:	; 1 bytes @ 0x3
   315  0073                     	ds	1
   316                           	global	??___awdiv
   317  0074                     ??___awdiv:	; 0 bytes @ 0x4
   318                           	global	??___awmod
   319  0074                     ??___awmod:	; 0 bytes @ 0x4
   320                           	global	send@temp
   321  0074                     send@temp:	; 1 bytes @ 0x4
   322                           	global	rtc_read@data
   323  0074                     rtc_read@data:	; 1 bytes @ 0x4
   324                           	global	___ftpack@sign
   325  0074                     ___ftpack@sign:	; 1 bytes @ 0x4
   326  0074                     	ds	1
   327                           	global	??___ftpack
   328  0075                     ??___ftpack:	; 0 bytes @ 0x5
   329                           	global	send@x
   330  0075                     send@x:	; 1 bytes @ 0x5
   331                           	global	___awdiv@counter
   332  0075                     ___awdiv@counter:	; 1 bytes @ 0x5
   333                           	global	___awmod@counter
   334  0075                     ___awmod@counter:	; 1 bytes @ 0x5
   335  0075                     	ds	1
   336                           	global	??_lcd_init
   337  0076                     ??_lcd_init:	; 0 bytes @ 0x6
   338                           	global	??_lcd_clear
   339  0076                     ??_lcd_clear:	; 0 bytes @ 0x6
   340                           	global	??_lcd_putch
   341  0076                     ??_lcd_putch:	; 0 bytes @ 0x6
   342                           	global	?_lcd_goto
   343  0076                     ?_lcd_goto:	; 0 bytes @ 0x6
   344                           	global	read_adc@chnl
   345  0076                     read_adc@chnl:	; 1 bytes @ 0x6
   346                           	global	lcd_putch@c
   347  0076                     lcd_putch@c:	; 1 bytes @ 0x6
   348                           	global	lcd_goto@pos
   349  0076                     lcd_goto@pos:	; 1 bytes @ 0x6
   350                           	global	___awdiv@sign
   351  0076                     ___awdiv@sign:	; 1 bytes @ 0x6
   352                           	global	___awmod@sign
   353  0076                     ___awmod@sign:	; 1 bytes @ 0x6
   354  0076                     	ds	1
   355                           	global	??_lcd_goto
   356  0077                     ??_lcd_goto:	; 0 bytes @ 0x7
   357                           	global	lcd_goto@line
   358  0077                     lcd_goto@line:	; 1 bytes @ 0x7
   359                           	global	___awdiv@quotient
   360  0077                     ___awdiv@quotient:	; 2 bytes @ 0x7
   361  0077                     	ds	1
   362                           	global	?___fttol
   363  0078                     ?___fttol:	; 4 bytes @ 0x8
   364                           	global	___fttol@f1
   365  0078                     ___fttol@f1:	; 3 bytes @ 0x8
   366  0078                     	ds	4
   367                           	global	??___lwtoft
   368  007C                     ??___lwtoft:	; 0 bytes @ 0xC
   369  007C                     	ds	1
   370                           psect	cstackBANK0,class=BANK0,space=1
   371                           global __pcstackBANK0
   372  0020                     __pcstackBANK0:
   373                           	global	??___fttol
   374  0020                     ??___fttol:	; 0 bytes @ 0x0
   375  0020                     	ds	4
   376                           	global	___fttol@sign1
   377  0024                     ___fttol@sign1:	; 1 bytes @ 0x4
   378  0024                     	ds	1
   379                           	global	___fttol@lval
   380  0025                     ___fttol@lval:	; 4 bytes @ 0x5
   381  0025                     	ds	4
   382                           	global	___fttol@exp1
   383  0029                     ___fttol@exp1:	; 1 bytes @ 0x9
   384  0029                     	ds	1
   385                           	global	?___lwtoft
   386  002A                     ?___lwtoft:	; 3 bytes @ 0xA
   387                           	global	___lwtoft@c
   388  002A                     ___lwtoft@c:	; 2 bytes @ 0xA
   389  002A                     	ds	3
   390                           	global	?___ftmul
   391  002D                     ?___ftmul:	; 3 bytes @ 0xD
   392                           	global	___ftmul@f1
   393  002D                     ___ftmul@f1:	; 3 bytes @ 0xD
   394  002D                     	ds	3
   395                           	global	___ftmul@f2
   396  0030                     ___ftmul@f2:	; 3 bytes @ 0x10
   397  0030                     	ds	3
   398                           	global	??___ftmul
   399  0033                     ??___ftmul:	; 0 bytes @ 0x13
   400  0033                     	ds	4
   401                           	global	___ftmul@exp
   402  0037                     ___ftmul@exp:	; 1 bytes @ 0x17
   403  0037                     	ds	1
   404                           	global	___ftmul@f3_as_product
   405  0038                     ___ftmul@f3_as_product:	; 3 bytes @ 0x18
   406  0038                     	ds	3
   407                           	global	___ftmul@cntr
   408  003B                     ___ftmul@cntr:	; 1 bytes @ 0x1B
   409  003B                     	ds	1
   410                           	global	___ftmul@sign
   411  003C                     ___ftmul@sign:	; 1 bytes @ 0x1C
   412  003C                     	ds	1
   413                           	global	??_main
   414  003D                     ??_main:	; 0 bytes @ 0x1D
   415  003D                     	ds	3
   416                           	global	main@count
   417  0040                     main@count:	; 2 bytes @ 0x20
   418  0040                     	ds	2
   419                           	global	main@flag2
   420  0042                     main@flag2:	; 2 bytes @ 0x22
   421  0042                     	ds	2
   422                           	global	main@i
   423  0044                     main@i:	; 2 bytes @ 0x24
   424  0044                     	ds	2
   425                           	global	main@j
   426  0046                     main@j:	; 2 bytes @ 0x26
   427  0046                     	ds	2
   428                           	global	main@a1
   429  0048                     main@a1:	; 1 bytes @ 0x28
   430  0048                     	ds	1
   431                           	global	main@a2
   432  0049                     main@a2:	; 1 bytes @ 0x29
   433  0049                     	ds	1
   434                           	global	main@b1
   435  004A                     main@b1:	; 1 bytes @ 0x2A
   436  004A                     	ds	1
   437                           	global	main@b2
   438  004B                     main@b2:	; 1 bytes @ 0x2B
   439  004B                     	ds	1
   440                           	global	main@c1
   441  004C                     main@c1:	; 1 bytes @ 0x2C
   442  004C                     	ds	1
   443                           	global	main@c2
   444  004D                     main@c2:	; 1 bytes @ 0x2D
   445  004D                     	ds	1
   446                           	global	main@moisture
   447  004E                     main@moisture:	; 1 bytes @ 0x2E
   448  004E                     	ds	1
   449                           	global	main@a
   450  004F                     main@a:	; 1 bytes @ 0x2F
   451  004F                     	ds	1
   452                           	global	main@a3
   453  0050                     main@a3:	; 1 bytes @ 0x30
   454  0050                     	ds	1
   455                           	global	main@b
   456  0051                     main@b:	; 1 bytes @ 0x31
   457  0051                     	ds	1
   458                           	global	main@b3
   459  0052                     main@b3:	; 1 bytes @ 0x32
   460  0052                     	ds	1
   461                           	global	main@c
   462  0053                     main@c:	; 1 bytes @ 0x33
   463  0053                     	ds	1
   464                           	global	main@f1
   465  0054                     main@f1:	; 2 bytes @ 0x34
   466  0054                     	ds	2
   467                           	global	main@light_int
   468  0056                     main@light_int:	; 1 bytes @ 0x36
   469  0056                     	ds	1
   470                           	global	main@c3
   471  0057                     main@c3:	; 1 bytes @ 0x37
   472  0057                     	ds	1
   473 ;;Data sizes: Strings 0, constant 0, data 0, bss 0, persistent 0 stack 0
   474 ;;Auto spaces:   Size  Autos    Used
   475 ;; COMMON          14     13      14
   476 ;; BANK0           80     56      57
   477 ;; BANK1           80      0       0
   478 ;; BANK3           96      0       0
   479 ;; BANK2           96      0       0
   480                           
   481 ;;
   482 ;; Pointer list with targets:
   483                           
   484 ;; ?___ftpack	float  size(1) Largest target is 0
   485 ;;
   486 ;; ?___fttol	long  size(1) Largest target is 0
   487 ;;
   488 ;; ?___awmod	int  size(1) Largest target is 0
   489 ;;
   490 ;; ?___awdiv	int  size(1) Largest target is 0
   491 ;;
   492 ;; ?___ftmul	float  size(1) Largest target is 0
   493 ;;
   494 ;; ?___lwtoft	float  size(1) Largest target is 0
   495 ;;
   496 ;; ?_read_adc	unsigned int  size(1) Largest target is 0
   497 ;;
   498                           
   499                           
   500 ;;
   501 ;; Critical Paths under _main in COMMON
   502 ;;
   503 ;;   _main->___lwtoft
   504 ;;   _lcd_goto->_send
   505 ;;   _lcd_putch->_send
   506 ;;   _lcd_clear->_send
   507 ;;   _lcd_init->_send
   508 ;;   _rtc_read->_i2c_read
   509 ;;   _send->_LCD_STROBE
   510 ;;   ___lwtoft->___fttol
   511 ;;   ___ftmul->___lwtoft
   512 ;;   ___fttol->___ftpack
   513 ;;
   514 ;; Critical Paths under _main in BANK0
   515 ;;
   516 ;;   _main->___ftmul
   517 ;;   ___lwtoft->___fttol
   518 ;;   ___ftmul->___lwtoft
   519 ;;
   520 ;; Critical Paths under _main in BANK1
   521 ;;
   522 ;;   None.
   523 ;;
   524 ;; Critical Paths under _main in BANK3
   525 ;;
   526 ;;   None.
   527 ;;
   528 ;; Critical Paths under _main in BANK2
   529 ;;
   530 ;;   None.
   531                           
   532 ;;
   533 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   534 ;;
   535                           
   536 ;;
   537 ;;Call Graph Tables:
   538 ;;
   539 ;; ---------------------------------------------------------------------------------
   540 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   541 ;; ---------------------------------------------------------------------------------
   542 ;; (0) _main                                                27    27      0    3311
   543 ;;                                             29 BANK0     27    27      0
   544 ;;                           _lcd_init
   545 ;;                           _adc_init
   546 ;;                           _i2c_init
   547 ;;                          _pwm1_init
   548 ;;                           _lcd_goto
   549 ;;                           _read_adc
   550 ;;                           ___lwtoft
   551 ;;                            ___ftmul
   552 ;;                            ___fttol
   553 ;;                           _rtc_read
   554 ;;                             ___bmul
   555 ;;                            ___awdiv
   556 ;;                          _lcd_putch
   557 ;;                            ___awmod
   558 ;;                          _lcd_clear
   559 ;; ---------------------------------------------------------------------------------
   560 ;; (1) _lcd_goto                                             2     1      1     291
   561 ;;                                              6 COMMON     2     1      1
   562 ;;                               _send
   563 ;; ---------------------------------------------------------------------------------
   564 ;; (1) _lcd_putch                                            1     1      0     181
   565 ;;                                              6 COMMON     1     1      0
   566 ;;                               _send
   567 ;; ---------------------------------------------------------------------------------
   568 ;; (1) _lcd_clear                                            0     0      0     159
   569 ;;                               _send
   570 ;; ---------------------------------------------------------------------------------
   571 ;; (1) _lcd_init                                             3     3      0     159
   572 ;;                                              6 COMMON     3     3      0
   573 ;;                         _LCD_STROBE
   574 ;;                               _send
   575 ;; ---------------------------------------------------------------------------------
   576 ;; (1) _rtc_read                                             3     3      0      90
   577 ;;                                              2 COMMON     3     3      0
   578 ;;                          _i2c_start
   579 ;;                          _i2c_write
   580 ;;                        _i2c_restart
   581 ;;                           _i2c_read
   582 ;;                           _i2c_nack
   583 ;;                           _i2c_stop
   584 ;; ---------------------------------------------------------------------------------
   585 ;; (2) _send                                                 4     4      0     159
   586 ;;                                              2 COMMON     4     4      0
   587 ;;                         _LCD_STROBE
   588 ;; ---------------------------------------------------------------------------------
   589 ;; (1) ___lwtoft                                             4     1      3     231
   590 ;;                                             12 COMMON     1     1      0
   591 ;;                                             10 BANK0      3     0      3
   592 ;;                           ___ftpack
   593 ;;                            ___fttol (ARG)
   594 ;; ---------------------------------------------------------------------------------
   595 ;; (1) ___ftmul                                             16    10      6     535
   596 ;;                                             13 BANK0     16    10      6
   597 ;;                           ___ftpack
   598 ;;                           ___lwtoft (ARG)
   599 ;;                            ___fttol (ARG)
   600 ;; ---------------------------------------------------------------------------------
   601 ;; (3) _LCD_STROBE                                           2     2      0       0
   602 ;;                                              0 COMMON     2     2      0
   603 ;; ---------------------------------------------------------------------------------
   604 ;; (2) _i2c_read                                             2     2      0      23
   605 ;;                                              0 COMMON     2     2      0
   606 ;;                           _i2c_Wait
   607 ;; ---------------------------------------------------------------------------------
   608 ;; (2) _i2c_write                                            1     1      0      22
   609 ;;                                              0 COMMON     1     1      0
   610 ;;                           _i2c_Wait
   611 ;; ---------------------------------------------------------------------------------
   612 ;; (1) _read_adc                                             7     5      2      22
   613 ;;                                              0 COMMON     7     5      2
   614 ;; ---------------------------------------------------------------------------------
   615 ;; (1) ___awmod                                              7     3      4     296
   616 ;;                                              0 COMMON     7     3      4
   617 ;; ---------------------------------------------------------------------------------
   618 ;; (1) ___awdiv                                              9     5      4     300
   619 ;;                                              0 COMMON     9     5      4
   620 ;; ---------------------------------------------------------------------------------
   621 ;; (1) ___fttol                                             14    10      4     252
   622 ;;                                              8 COMMON     4     0      4
   623 ;;                                              0 BANK0     10    10      0
   624 ;;                           ___ftpack (ARG)
   625 ;; ---------------------------------------------------------------------------------
   626 ;; (2) ___ftpack                                             8     3      5     209
   627 ;;                                              0 COMMON     8     3      5
   628 ;; ---------------------------------------------------------------------------------
   629 ;; (1) ___bmul                                               4     3      1      92
   630 ;;                                              0 COMMON     4     3      1
   631 ;; ---------------------------------------------------------------------------------
   632 ;; (1) _pwm1_init                                            0     0      0       0
   633 ;; ---------------------------------------------------------------------------------
   634 ;; (2) _i2c_nack                                             0     0      0       0
   635 ;; ---------------------------------------------------------------------------------
   636 ;; (3) _i2c_Wait                                             0     0      0       0
   637 ;; ---------------------------------------------------------------------------------
   638 ;; (2) _i2c_restart                                          0     0      0       0
   639 ;; ---------------------------------------------------------------------------------
   640 ;; (2) _i2c_stop                                             0     0      0       0
   641 ;; ---------------------------------------------------------------------------------
   642 ;; (2) _i2c_start                                            0     0      0       0
   643 ;; ---------------------------------------------------------------------------------
   644 ;; (1) _i2c_init                                             0     0      0       0
   645 ;; ---------------------------------------------------------------------------------
   646 ;; (1) _adc_init                                             0     0      0       0
   647 ;; ---------------------------------------------------------------------------------
   648 ;; Estimated maximum stack depth 3
   649 ;; ---------------------------------------------------------------------------------
   650                           
   651 ;; Call Graph Graphs:
   652                           
   653 ;; _main (ROOT)
   654 ;;   _lcd_init
   655 ;;     _LCD_STROBE
   656 ;;     _send
   657 ;;       _LCD_STROBE
   658 ;;   _adc_init
   659 ;;   _i2c_init
   660 ;;   _pwm1_init
   661 ;;   _lcd_goto
   662 ;;     _send
   663 ;;       _LCD_STROBE
   664 ;;   _read_adc
   665 ;;   ___lwtoft
   666 ;;     ___ftpack
   667 ;;     ___fttol (ARG)
   668 ;;       ___ftpack (ARG)
   669 ;;   ___ftmul
   670 ;;     ___ftpack
   671 ;;     ___lwtoft (ARG)
   672 ;;       ___ftpack
   673 ;;       ___fttol (ARG)
   674 ;;         ___ftpack (ARG)
   675 ;;     ___fttol (ARG)
   676 ;;       ___ftpack (ARG)
   677 ;;   ___fttol
   678 ;;     ___ftpack (ARG)
   679 ;;   _rtc_read
   680 ;;     _i2c_start
   681 ;;     _i2c_write
   682 ;;       _i2c_Wait
   683 ;;     _i2c_restart
   684 ;;     _i2c_read
   685 ;;       _i2c_Wait
   686 ;;     _i2c_nack
   687 ;;     _i2c_stop
   688 ;;   ___bmul
   689 ;;   ___awdiv
   690 ;;   _lcd_putch
   691 ;;     _send
   692 ;;       _LCD_STROBE
   693 ;;   ___awmod
   694 ;;   _lcd_clear
   695 ;;     _send
   696 ;;       _LCD_STROBE
   697 ;;
   698                           
   699 ;; Address spaces:
   700                           
   701 ;;Name               Size   Autos  Total    Cost      Usage
   702 ;;BITCOMMON            E      0       1       0        7.1%
   703 ;;EEDATA             100      0       0       0        0.0%
   704 ;;NULL                 0      0       0       0        0.0%
   705 ;;CODE                 0      0       0       0        0.0%
   706 ;;COMMON               E      D       E       1      100.0%
   707 ;;BITSFR0              0      0       0       1        0.0%
   708 ;;SFR0                 0      0       0       1        0.0%
   709 ;;BITSFR1              0      0       0       2        0.0%
   710 ;;SFR1                 0      0       0       2        0.0%
   711 ;;STACK                0      0       3       2        0.0%
   712 ;;ABS                  0      0      47       3        0.0%
   713 ;;BITBANK0            50      0       1       4        1.3%
   714 ;;BITSFR3              0      0       0       4        0.0%
   715 ;;SFR3                 0      0       0       4        0.0%
   716 ;;BANK0               50     38      39       5       71.3%
   717 ;;BITSFR2              0      0       0       5        0.0%
   718 ;;SFR2                 0      0       0       5        0.0%
   719 ;;BITBANK1            50      0       0       6        0.0%
   720 ;;BANK1               50      0       0       7        0.0%
   721 ;;BITBANK3            60      0       0       8        0.0%
   722 ;;BANK3               60      0       0       9        0.0%
   723 ;;BITBANK2            60      0       0      10        0.0%
   724 ;;BANK2               60      0       0      11        0.0%
   725 ;;DATA                 0      0      4A      12        0.0%
   726                           
   727                           	global	_main
   728                           psect	maintext,global,class=CODE,delta=2
   729                           global __pmaintext
   730  05A6                     __pmaintext:
   731                           
   732 ;; *************** function _main *****************
   733 ;; Defined at:
   734 ;;		line 24 in file "E:\PIC\test\main.c"
   735 ;; Parameters:    Size  Location     Type
   736 ;;		None
   737 ;; Auto vars:     Size  Location     Type
   738 ;;  f1              2   52[BANK0 ] int 
   739 ;;  j               2   38[BANK0 ] unsigned int 
   740 ;;  i               2   36[BANK0 ] unsigned int 
   741 ;;  flag2           2   34[BANK0 ] int 
   742 ;;  count           2   32[BANK0 ] int 
   743 ;;  c3              1   55[BANK0 ] unsigned char 
   744 ;;  light_int       1   54[BANK0 ] unsigned char 
   745 ;;  c               1   51[BANK0 ] unsigned char 
   746 ;;  b3              1   50[BANK0 ] unsigned char 
   747 ;;  b               1   49[BANK0 ] unsigned char 
   748 ;;  a3              1   48[BANK0 ] unsigned char 
   749 ;;  a               1   47[BANK0 ] unsigned char 
   750 ;;  moisture        1   46[BANK0 ] unsigned char 
   751 ;;  c2              1   45[BANK0 ] unsigned char 
   752 ;;  c1              1   44[BANK0 ] unsigned char 
   753 ;;  b2              1   43[BANK0 ] unsigned char 
   754 ;;  b1              1   42[BANK0 ] unsigned char 
   755 ;;  a2              1   41[BANK0 ] unsigned char 
   756 ;;  a1              1   40[BANK0 ] unsigned char 
   757 ;; Return value:  Size  Location     Type
   758 ;;		None               void
   759 ;; Registers used:
   760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   761 ;; Tracked objects:
   762 ;;		On entry : 17F/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   766 ;;      Params:         0       0       0       0       0
   767 ;;      Locals:         0      24       0       0       0
   768 ;;      Temps:          0       3       0       0       0
   769 ;;      Totals:         0      27       0       0       0
   770 ;;Total ram usage:       27 bytes
   771 ;; Hardware stack levels required when called:    3
   772 ;; This function calls:
   773 ;;		_lcd_init
   774 ;;		_adc_init
   775 ;;		_i2c_init
   776 ;;		_pwm1_init
   777 ;;		_lcd_goto
   778 ;;		_read_adc
   779 ;;		___lwtoft
   780 ;;		___ftmul
   781 ;;		___fttol
   782 ;;		_rtc_read
   783 ;;		___bmul
   784 ;;		___awdiv
   785 ;;		_lcd_putch
   786 ;;		___awmod
   787 ;;		_lcd_clear
   788 ;; This function is called by:
   789 ;;		Startup code after reset
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           psect	maintext
   793                           	file	"E:\PIC\test\main.c"
   794                           	line	24
   795                           	global	__size_of_main
   796  025A                     	__size_of_main	equ	__end_of_main-_main
   797                           	
   798  05A6                     _main:	
   799                           	opt	stack 5
   800                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   801                           	line	25
   802                           	
   803  05A6                     l5952:	
   804                           ;main.c: 25: int count = 0;
   805  05A6  1283               	bcf	status, 5	;RP0=0, select bank0
   806  05A7  1303               	bcf	status, 6	;RP1=0, select bank0
   807  05A8  01C0               	clrf	(main@count)
   808  05A9  01C1               	clrf	(main@count+1)
   809                           	line	31
   810                           ;main.c: 26: unsigned int i;
   811                           ;main.c: 27: unsigned int j;
   812                           ;main.c: 28: unsigned char moisture;
   813                           ;main.c: 29: unsigned char light_int;
   814                           ;main.c: 30: unsigned char a, a1, a2, a3, b, b1, b2, b3, c, c1, c2, c3;
   815                           ;main.c: 31: int f1=0,flag2=0;
   816  05AA  01D4               	clrf	(main@f1)
   817  05AB  01D5               	clrf	(main@f1+1)
   818  05AC  01C2               	clrf	(main@flag2)
   819  05AD  01C3               	clrf	(main@flag2+1)
   820                           	line	32
   821                           ;main.c: 32: PORTD = 0X00;
   822  05AE  0188               	clrf	(8)	;volatile
   823                           	line	33
   824                           	
   825  05AF                     l5954:	
   826                           ;main.c: 33: TRISA0 = 1;
   827  05AF  1683               	bsf	status, 5	;RP0=1, select bank1
   828  05B0  1303               	bcf	status, 6	;RP1=0, select bank1
   829  05B1  1405               	bsf	(1064/8)^080h,(1064)&7
   830                           	line	34
   831                           	
   832  05B2                     l5956:	
   833                           ;main.c: 34: TRISA1 = 1;
   834  05B2  1485               	bsf	(1065/8)^080h,(1065)&7
   835                           	line	35
   836                           ;main.c: 35: TRISB = 0X00;
   837  05B3  0186               	clrf	(134)^080h	;volatile
   838                           	line	36
   839                           	
   840  05B4                     l5958:	
   841                           ;main.c: 36: TRISC0 = 0;
   842  05B4  1007               	bcf	(1080/8)^080h,(1080)&7
   843                           	line	37
   844                           	
   845  05B5                     l5960:	
   846                           ;main.c: 37: TRISC5 = 0;
   847  05B5  1287               	bcf	(1085/8)^080h,(1085)&7
   848                           	line	38
   849                           	
   850  05B6                     l5962:	
   851                           ;main.c: 38: lcd_init();
   852  05B6  120A  118A  226F   	fcall	_lcd_init
              120A  118A         
   853                           	line	39
   854                           	
   855  05BB                     l5964:	
   856                           ;main.c: 39: adc_init();
   857  05BB  120A  118A  20B4   	fcall	_adc_init
              120A  118A         
   858                           	line	40
   859                           	
   860  05C0                     l5966:	
   861                           ;main.c: 40: i2c_init();
   862  05C0  120A  118A  2104   	fcall	_i2c_init
              120A  118A         
   863                           	line	41
   864                           	
   865  05C5                     l5968:	
   866                           ;main.c: 41: pwm1_init();
   867  05C5  120A  118A  2132   	fcall	_pwm1_init
              120A  118A         
   868                           	line	42
   869                           	
   870  05CA                     l5970:	
   871                           ;main.c: 42: RC0=1;
   872  05CA  1283               	bcf	status, 5	;RP0=0, select bank0
   873  05CB  1303               	bcf	status, 6	;RP1=0, select bank0
   874  05CC  1407               	bsf	(56/8),(56)&7
   875                           	line	43
   876                           	
   877  05CD                     l5972:	
   878                           ;main.c: 43: _delay((unsigned long)((1000)*(20000000/4000.0)));
   879                           	opt asmopt_off
   880  05CD  301A               movlw  26
   881  05CE  00BF               movwf	((??_main+0)+0+2),f
   882  05CF  305E               movlw	94
   883  05D0  00BE               movwf	((??_main+0)+0+1),f
   884  05D1  3086               	movlw	134
   885  05D2  00BD               movwf	((??_main+0)+0),f
   886  05D3                     u3747:
   887  05D3  0BBD               	decfsz	((??_main+0)+0),f
   888  05D4  2DD3               	goto	u3747
   889  05D5  0BBE               	decfsz	((??_main+0)+0+1),f
   890  05D6  2DD3               	goto	u3747
   891  05D7  0BBF               	decfsz	((??_main+0)+0+2),f
   892  05D8  2DD3               	goto	u3747
   893  05D9  0064               	clrwdt
   894                           opt asmopt_on
   895                           
   896                           	line	44
   897                           	
   898  05DA                     l5974:	
   899                           ;main.c: 44: RC0=0;
   900  05DA  1283               	bcf	status, 5	;RP0=0, select bank0
   901  05DB  1303               	bcf	status, 6	;RP1=0, select bank0
   902  05DC  1007               	bcf	(56/8),(56)&7
   903                           	line	50
   904                           	
   905  05DD                     l5976:	
   906                           ;main.c: 50: lcd_goto(1,0);
   907  05DD  01F6               	clrf	(?_lcd_goto)
   908  05DE  3001               	movlw	(01h)
   909  05DF  120A  118A  21E9   	fcall	_lcd_goto
              120A  118A         
   910  05E4  2DE5               	goto	l5978
   911                           	line	51
   912                           ;main.c: 51: while (1)
   913                           	
   914  05E5                     l2893:	
   915                           	line	53
   916                           	
   917  05E5                     l5978:	
   918                           ;main.c: 52: {
   919                           ;main.c: 53: i = read_adc(0);
   920  05E5  3000               	movlw	(0)
   921  05E6  120A  118A  21AA   	fcall	_read_adc
              120A  118A         
   922  05EB  0871               	movf	(1+(?_read_adc)),w
   923  05EC  1283               	bcf	status, 5	;RP0=0, select bank0
   924  05ED  1303               	bcf	status, 6	;RP1=0, select bank0
   925  05EE  01C5               	clrf	(main@i+1)
   926  05EF  07C5               	addwf	(main@i+1)
   927  05F0  0870               	movf	(0+(?_read_adc)),w
   928  05F1  01C4               	clrf	(main@i)
   929  05F2  07C4               	addwf	(main@i)
   930                           
   931                           	line	54
   932                           	
   933  05F3                     l5980:	
   934                           ;main.c: 54: j = read_adc(1);
   935  05F3  3001               	movlw	(01h)
   936  05F4  120A  118A  21AA   	fcall	_read_adc
              120A  118A         
   937  05F9  0871               	movf	(1+(?_read_adc)),w
   938  05FA  1283               	bcf	status, 5	;RP0=0, select bank0
   939  05FB  1303               	bcf	status, 6	;RP1=0, select bank0
   940  05FC  01C7               	clrf	(main@j+1)
   941  05FD  07C7               	addwf	(main@j+1)
   942  05FE  0870               	movf	(0+(?_read_adc)),w
   943  05FF  01C6               	clrf	(main@j)
   944  0600  07C6               	addwf	(main@j)
   945                           
   946                           	line	55
   947                           	
   948  0601                     l5982:	
   949                           ;main.c: 55: moisture = (char) (i * 0.00488);
   950  0601  0845               	movf	(main@i+1),w
   951  0602  01AB               	clrf	(?___lwtoft+1)
   952  0603  07AB               	addwf	(?___lwtoft+1)
   953  0604  0844               	movf	(main@i),w
   954  0605  01AA               	clrf	(?___lwtoft)
   955  0606  07AA               	addwf	(?___lwtoft)
   956                           
   957  0607  120A  118A  215D   	fcall	___lwtoft
              120A  118A         
   958  060C  1283               	bcf	status, 5	;RP0=0, select bank0
   959  060D  1303               	bcf	status, 6	;RP1=0, select bank0
   960  060E  082A               	movf	(0+(?___lwtoft)),w
   961  060F  00B0               	movwf	0+(?___ftmul)+03h
   962  0610  082B               	movf	(1+(?___lwtoft)),w
   963  0611  00B1               	movwf	1+(?___ftmul)+03h
   964  0612  082C               	movf	(2+(?___lwtoft)),w
   965  0613  00B2               	movwf	2+(?___ftmul)+03h
   966  0614  30E8               	movlw	0xe8
   967  0615  00AD               	movwf	(?___ftmul)
   968  0616  309F               	movlw	0x9f
   969  0617  00AE               	movwf	(?___ftmul+1)
   970  0618  303B               	movlw	0x3b
   971  0619  00AF               	movwf	(?___ftmul+2)
   972  061A  120A  118A  24B8   	fcall	___ftmul
              120A  118A         
   973  061F  1283               	bcf	status, 5	;RP0=0, select bank0
   974  0620  1303               	bcf	status, 6	;RP1=0, select bank0
   975  0621  082D               	movf	(0+(?___ftmul)),w
   976  0622  00F8               	movwf	(?___fttol)
   977  0623  082E               	movf	(1+(?___ftmul)),w
   978  0624  00F9               	movwf	(?___fttol+1)
   979  0625  082F               	movf	(2+(?___ftmul)),w
   980  0626  00FA               	movwf	(?___fttol+2)
   981  0627  120A  118A  2412   	fcall	___fttol
              120A  118A         
   982  062C  0878               	movf	0+(((0+(?___fttol)))),w
   983  062D  1283               	bcf	status, 5	;RP0=0, select bank0
   984  062E  1303               	bcf	status, 6	;RP1=0, select bank0
   985  062F  00BD               	movwf	(??_main+0)+0
   986  0630  083D               	movf	(??_main+0)+0,w
   987  0631  00CE               	movwf	(main@moisture)
   988                           	line	56
   989                           	
   990  0632                     l5984:	
   991                           ;main.c: 56: light_int = (char) (j * 0.00488);
   992  0632  0847               	movf	(main@j+1),w
   993  0633  01AB               	clrf	(?___lwtoft+1)
   994  0634  07AB               	addwf	(?___lwtoft+1)
   995  0635  0846               	movf	(main@j),w
   996  0636  01AA               	clrf	(?___lwtoft)
   997  0637  07AA               	addwf	(?___lwtoft)
   998                           
   999  0638  120A  118A  215D   	fcall	___lwtoft
              120A  118A         
  1000  063D  1283               	bcf	status, 5	;RP0=0, select bank0
  1001  063E  1303               	bcf	status, 6	;RP1=0, select bank0
  1002  063F  082A               	movf	(0+(?___lwtoft)),w
  1003  0640  00B0               	movwf	0+(?___ftmul)+03h
  1004  0641  082B               	movf	(1+(?___lwtoft)),w
  1005  0642  00B1               	movwf	1+(?___ftmul)+03h
  1006  0643  082C               	movf	(2+(?___lwtoft)),w
  1007  0644  00B2               	movwf	2+(?___ftmul)+03h
  1008  0645  30E8               	movlw	0xe8
  1009  0646  00AD               	movwf	(?___ftmul)
  1010  0647  309F               	movlw	0x9f
  1011  0648  00AE               	movwf	(?___ftmul+1)
  1012  0649  303B               	movlw	0x3b
  1013  064A  00AF               	movwf	(?___ftmul+2)
  1014  064B  120A  118A  24B8   	fcall	___ftmul
              120A  118A         
  1015  0650  1283               	bcf	status, 5	;RP0=0, select bank0
  1016  0651  1303               	bcf	status, 6	;RP1=0, select bank0
  1017  0652  082D               	movf	(0+(?___ftmul)),w
  1018  0653  00F8               	movwf	(?___fttol)
  1019  0654  082E               	movf	(1+(?___ftmul)),w
  1020  0655  00F9               	movwf	(?___fttol+1)
  1021  0656  082F               	movf	(2+(?___ftmul)),w
  1022  0657  00FA               	movwf	(?___fttol+2)
  1023  0658  120A  118A  2412   	fcall	___fttol
              120A  118A         
  1024  065D  0878               	movf	0+(((0+(?___fttol)))),w
  1025  065E  1283               	bcf	status, 5	;RP0=0, select bank0
  1026  065F  1303               	bcf	status, 6	;RP1=0, select bank0
  1027  0660  00BD               	movwf	(??_main+0)+0
  1028  0661  083D               	movf	(??_main+0)+0,w
  1029  0662  00D6               	movwf	(main@light_int)
  1030                           	line	59
  1031                           	
  1032  0663                     l5986:	
  1033                           ;main.c: 59: a = rtc_read(0X02);
  1034  0663  3002               	movlw	(02h)
  1035  0664  120A  118A  2178   	fcall	_rtc_read
              120A  118A         
  1036  0669  1283               	bcf	status, 5	;RP0=0, select bank0
  1037  066A  1303               	bcf	status, 6	;RP1=0, select bank0
  1038  066B  00BD               	movwf	(??_main+0)+0
  1039  066C  083D               	movf	(??_main+0)+0,w
  1040  066D  00CF               	movwf	(main@a)
  1041                           	line	60
  1042                           	
  1043  066E                     l5988:	
  1044                           ;main.c: 60: a1 = (a >> 4)&0X0f;
  1045  066E  084F               	movf	(main@a),w
  1046  066F  00BD               	movwf	(??_main+0)+0
  1047  0670  3004               	movlw	04h
  1048  0671                     u3605:
  1049  0671  1003               	clrc
  1050  0672  0CBD               	rrf	(??_main+0)+0,f
  1051  0673  3EFF               	addlw	-1
  1052  0674  1D03               	skipz
  1053  0675  2E71               	goto	u3605
  1054  0676  083D               	movf	0+(??_main+0)+0,w
  1055  0677  390F               	andlw	0Fh
  1056  0678  00BE               	movwf	(??_main+1)+0
  1057  0679  083E               	movf	(??_main+1)+0,w
  1058  067A  00C8               	movwf	(main@a1)
  1059                           	line	61
  1060                           	
  1061  067B                     l5990:	
  1062                           ;main.c: 61: a2 = a & 0X0f;
  1063  067B  084F               	movf	(main@a),w
  1064  067C  390F               	andlw	0Fh
  1065  067D  00BD               	movwf	(??_main+0)+0
  1066  067E  083D               	movf	(??_main+0)+0,w
  1067  067F  00C9               	movwf	(main@a2)
  1068                           	line	62
  1069                           	
  1070  0680                     l5992:	
  1071                           ;main.c: 62: a3 = (a1 * 10) + a2;
  1072  0680  300A               	movlw	(0Ah)
  1073  0681  00BD               	movwf	(??_main+0)+0
  1074  0682  083D               	movf	(??_main+0)+0,w
  1075  0683  00F0               	movwf	(?___bmul)
  1076  0684  0848               	movf	(main@a1),w
  1077  0685  120A  118A  2145   	fcall	___bmul
              120A  118A         
  1078  068A  1283               	bcf	status, 5	;RP0=0, select bank0
  1079  068B  1303               	bcf	status, 6	;RP1=0, select bank0
  1080  068C  00BE               	movwf	(??_main+1)+0
  1081  068D  0849               	movf	(main@a2),w
  1082  068E  073E               	addwf	0+(??_main+1)+0,w
  1083  068F  00BF               	movwf	(??_main+2)+0
  1084  0690  083F               	movf	(??_main+2)+0,w
  1085  0691  00D0               	movwf	(main@a3)
  1086                           	line	63
  1087                           	
  1088  0692                     l5994:	
  1089                           ;main.c: 63: lcd_putch(a3 / 10 + 0x30);
  1090  0692  300A               	movlw	low(0Ah)
  1091  0693  00F0               	movwf	(?___awdiv)
  1092  0694  3000               	movlw	high(0Ah)
  1093  0695  00F1               	movwf	((?___awdiv))+1
  1094  0696  0850               	movf	(main@a3),w
  1095  0697  00BD               	movwf	(??_main+0)+0
  1096  0698  01BE               	clrf	(??_main+0)+0+1
  1097  0699  083D               	movf	0+(??_main+0)+0,w
  1098  069A  00F2               	movwf	0+(?___awdiv)+02h
  1099  069B  083E               	movf	1+(??_main+0)+0,w
  1100  069C  00F3               	movwf	1+(?___awdiv)+02h
  1101  069D  120A  118A  2323   	fcall	___awdiv
              120A  118A         
  1102  06A2  0870               	movf	(0+(?___awdiv)),w
  1103  06A3  3E30               	addlw	030h
  1104  06A4  120A  118A  20BD   	fcall	_lcd_putch
              120A  118A         
  1105                           	line	64
  1106                           	
  1107  06A9                     l5996:	
  1108                           ;main.c: 64: lcd_putch(a3 % 10 + 0x30);
  1109  06A9  300A               	movlw	low(0Ah)
  1110  06AA  00F0               	movwf	(?___awmod)
  1111  06AB  3000               	movlw	high(0Ah)
  1112  06AC  00F1               	movwf	((?___awmod))+1
  1113  06AD  1283               	bcf	status, 5	;RP0=0, select bank0
  1114  06AE  1303               	bcf	status, 6	;RP1=0, select bank0
  1115  06AF  0850               	movf	(main@a3),w
  1116  06B0  00BD               	movwf	(??_main+0)+0
  1117  06B1  01BE               	clrf	(??_main+0)+0+1
  1118  06B2  083D               	movf	0+(??_main+0)+0,w
  1119  06B3  00F2               	movwf	0+(?___awmod)+02h
  1120  06B4  083E               	movf	1+(??_main+0)+0,w
  1121  06B5  00F3               	movwf	1+(?___awmod)+02h
  1122  06B6  120A  118A  22BD   	fcall	___awmod
              120A  118A         
  1123  06BB  0870               	movf	(0+(?___awmod)),w
  1124  06BC  3E30               	addlw	030h
  1125  06BD  120A  118A  20BD   	fcall	_lcd_putch
              120A  118A         
  1126                           	line	65
  1127                           	
  1128  06C2                     l5998:	
  1129                           ;main.c: 65: lcd_putch(':');
  1130  06C2  303A               	movlw	(03Ah)
  1131  06C3  120A  118A  20BD   	fcall	_lcd_putch
              120A  118A         
  1132                           	line	68
  1133                           	
  1134  06C8                     l6000:	
  1135                           ;main.c: 68: b = rtc_read(0X01);
  1136  06C8  3001               	movlw	(01h)
  1137  06C9  120A  118A  2178   	fcall	_rtc_read
              120A  118A         
  1138  06CE  1283               	bcf	status, 5	;RP0=0, select bank0
  1139  06CF  1303               	bcf	status, 6	;RP1=0, select bank0
  1140  06D0  00BD               	movwf	(??_main+0)+0
  1141  06D1  083D               	movf	(??_main+0)+0,w
  1142  06D2  00D1               	movwf	(main@b)
  1143                           	line	69
  1144                           	
  1145  06D3                     l6002:	
  1146                           ;main.c: 69: b1 = (b >> 4)&0X0f;
  1147  06D3  0851               	movf	(main@b),w
  1148  06D4  00BD               	movwf	(??_main+0)+0
  1149  06D5  3004               	movlw	04h
  1150  06D6                     u3615:
  1151  06D6  1003               	clrc
  1152  06D7  0CBD               	rrf	(??_main+0)+0,f
  1153  06D8  3EFF               	addlw	-1
  1154  06D9  1D03               	skipz
  1155  06DA  2ED6               	goto	u3615
  1156  06DB  083D               	movf	0+(??_main+0)+0,w
  1157  06DC  390F               	andlw	0Fh
  1158  06DD  00BE               	movwf	(??_main+1)+0
  1159  06DE  083E               	movf	(??_main+1)+0,w
  1160  06DF  00CA               	movwf	(main@b1)
  1161                           	line	70
  1162                           	
  1163  06E0                     l6004:	
  1164                           ;main.c: 70: b2 = b & 0X0f;
  1165  06E0  0851               	movf	(main@b),w
  1166  06E1  390F               	andlw	0Fh
  1167  06E2  00BD               	movwf	(??_main+0)+0
  1168  06E3  083D               	movf	(??_main+0)+0,w
  1169  06E4  00CB               	movwf	(main@b2)
  1170                           	line	71
  1171                           	
  1172  06E5                     l6006:	
  1173                           ;main.c: 71: b3 = (b1 * 10) + b2;
  1174  06E5  300A               	movlw	(0Ah)
  1175  06E6  00BD               	movwf	(??_main+0)+0
  1176  06E7  083D               	movf	(??_main+0)+0,w
  1177  06E8  00F0               	movwf	(?___bmul)
  1178  06E9  084A               	movf	(main@b1),w
  1179  06EA  120A  118A  2145   	fcall	___bmul
              120A  118A         
  1180  06EF  1283               	bcf	status, 5	;RP0=0, select bank0
  1181  06F0  1303               	bcf	status, 6	;RP1=0, select bank0
  1182  06F1  00BE               	movwf	(??_main+1)+0
  1183  06F2  084B               	movf	(main@b2),w
  1184  06F3  073E               	addwf	0+(??_main+1)+0,w
  1185  06F4  00BF               	movwf	(??_main+2)+0
  1186  06F5  083F               	movf	(??_main+2)+0,w
  1187  06F6  00D2               	movwf	(main@b3)
  1188                           	line	72
  1189                           	
  1190  06F7                     l6008:	
  1191                           ;main.c: 72: lcd_putch(b3 / 10 + 0x30);
  1192  06F7  300A               	movlw	low(0Ah)
  1193  06F8  00F0               	movwf	(?___awdiv)
  1194  06F9  3000               	movlw	high(0Ah)
  1195  06FA  00F1               	movwf	((?___awdiv))+1
  1196  06FB  0852               	movf	(main@b3),w
  1197  06FC  00BD               	movwf	(??_main+0)+0
  1198  06FD  01BE               	clrf	(??_main+0)+0+1
  1199  06FE  083D               	movf	0+(??_main+0)+0,w
  1200  06FF  00F2               	movwf	0+(?___awdiv)+02h
  1201  0700  083E               	movf	1+(??_main+0)+0,w
  1202  0701  00F3               	movwf	1+(?___awdiv)+02h
  1203  0702  120A  118A  2323   	fcall	___awdiv
              120A  118A         
  1204  0707  0870               	movf	(0+(?___awdiv)),w
  1205  0708  3E30               	addlw	030h
  1206  0709  120A  118A  20BD   	fcall	_lcd_putch
              120A  118A         
  1207                           	line	73
  1208                           	
  1209  070E                     l6010:	
  1210                           ;main.c: 73: lcd_putch(b3 % 10 + 0x30);
  1211  070E  300A               	movlw	low(0Ah)
  1212  070F  00F0               	movwf	(?___awmod)
  1213  0710  3000               	movlw	high(0Ah)
  1214  0711  00F1               	movwf	((?___awmod))+1
  1215  0712  1283               	bcf	status, 5	;RP0=0, select bank0
  1216  0713  1303               	bcf	status, 6	;RP1=0, select bank0
  1217  0714  0852               	movf	(main@b3),w
  1218  0715  00BD               	movwf	(??_main+0)+0
  1219  0716  01BE               	clrf	(??_main+0)+0+1
  1220  0717  083D               	movf	0+(??_main+0)+0,w
  1221  0718  00F2               	movwf	0+(?___awmod)+02h
  1222  0719  083E               	movf	1+(??_main+0)+0,w
  1223  071A  00F3               	movwf	1+(?___awmod)+02h
  1224  071B  120A  118A  22BD   	fcall	___awmod
              120A  118A         
  1225  0720  0870               	movf	(0+(?___awmod)),w
  1226  0721  3E30               	addlw	030h
  1227  0722  120A  118A  20BD   	fcall	_lcd_putch
              120A  118A         
  1228                           	line	74
  1229                           	
  1230  0727                     l6012:	
  1231                           ;main.c: 74: lcd_putch(':');
  1232  0727  303A               	movlw	(03Ah)
  1233  0728  120A  118A  20BD   	fcall	_lcd_putch
              120A  118A         
  1234                           	line	77
  1235                           	
  1236  072D                     l6014:	
  1237                           ;main.c: 77: c = rtc_read(0x00);
  1238  072D  3000               	movlw	(0)
  1239  072E  120A  118A  2178   	fcall	_rtc_read
              120A  118A         
  1240  0733  1283               	bcf	status, 5	;RP0=0, select bank0
  1241  0734  1303               	bcf	status, 6	;RP1=0, select bank0
  1242  0735  00BD               	movwf	(??_main+0)+0
  1243  0736  083D               	movf	(??_main+0)+0,w
  1244  0737  00D3               	movwf	(main@c)
  1245                           	line	78
  1246                           	
  1247  0738                     l6016:	
  1248                           ;main.c: 78: c1 = (c >> 4)&0X0f;
  1249  0738  0853               	movf	(main@c),w
  1250  0739  00BD               	movwf	(??_main+0)+0
  1251  073A  3004               	movlw	04h
  1252  073B                     u3625:
  1253  073B  1003               	clrc
  1254  073C  0CBD               	rrf	(??_main+0)+0,f
  1255  073D  3EFF               	addlw	-1
  1256  073E  1D03               	skipz
  1257  073F  2F3B               	goto	u3625
  1258  0740  083D               	movf	0+(??_main+0)+0,w
  1259  0741  390F               	andlw	0Fh
  1260  0742  00BE               	movwf	(??_main+1)+0
  1261  0743  083E               	movf	(??_main+1)+0,w
  1262  0744  00CC               	movwf	(main@c1)
  1263                           	line	79
  1264                           	
  1265  0745                     l6018:	
  1266                           ;main.c: 79: c2 = c & 0X0f;
  1267  0745  0853               	movf	(main@c),w
  1268  0746  390F               	andlw	0Fh
  1269  0747  00BD               	movwf	(??_main+0)+0
  1270  0748  083D               	movf	(??_main+0)+0,w
  1271  0749  00CD               	movwf	(main@c2)
  1272                           	line	80
  1273                           	
  1274  074A                     l6020:	
  1275                           ;main.c: 80: c3 = (c1 * 10) + c2;
  1276  074A  300A               	movlw	(0Ah)
  1277  074B  00BD               	movwf	(??_main+0)+0
  1278  074C  083D               	movf	(??_main+0)+0,w
  1279  074D  00F0               	movwf	(?___bmul)
  1280  074E  084C               	movf	(main@c1),w
  1281  074F  120A  118A  2145   	fcall	___bmul
              120A  118A         
  1282  0754  1283               	bcf	status, 5	;RP0=0, select bank0
  1283  0755  1303               	bcf	status, 6	;RP1=0, select bank0
  1284  0756  00BE               	movwf	(??_main+1)+0
  1285  0757  084D               	movf	(main@c2),w
  1286  0758  073E               	addwf	0+(??_main+1)+0,w
  1287  0759  00BF               	movwf	(??_main+2)+0
  1288  075A  083F               	movf	(??_main+2)+0,w
  1289  075B  00D7               	movwf	(main@c3)
  1290                           	line	81
  1291                           	
  1292  075C                     l6022:	
  1293                           ;main.c: 81: lcd_putch(c3 / 10 + 0x30);
  1294  075C  300A               	movlw	low(0Ah)
  1295  075D  00F0               	movwf	(?___awdiv)
  1296  075E  3000               	movlw	high(0Ah)
  1297  075F  00F1               	movwf	((?___awdiv))+1
  1298  0760  0857               	movf	(main@c3),w
  1299  0761  00BD               	movwf	(??_main+0)+0
  1300  0762  01BE               	clrf	(??_main+0)+0+1
  1301  0763  083D               	movf	0+(??_main+0)+0,w
  1302  0764  00F2               	movwf	0+(?___awdiv)+02h
  1303  0765  083E               	movf	1+(??_main+0)+0,w
  1304  0766  00F3               	movwf	1+(?___awdiv)+02h
  1305  0767  120A  118A  2323   	fcall	___awdiv
              120A  118A         
  1306  076C  0870               	movf	(0+(?___awdiv)),w
  1307  076D  3E30               	addlw	030h
  1308  076E  120A  118A  20BD   	fcall	_lcd_putch
              120A  118A         
  1309                           	line	82
  1310                           	
  1311  0773                     l6024:	
  1312                           ;main.c: 82: lcd_putch(c3 % 10 + 0x30);
  1313  0773  300A               	movlw	low(0Ah)
  1314  0774  00F0               	movwf	(?___awmod)
  1315  0775  3000               	movlw	high(0Ah)
  1316  0776  00F1               	movwf	((?___awmod))+1
  1317  0777  1283               	bcf	status, 5	;RP0=0, select bank0
  1318  0778  1303               	bcf	status, 6	;RP1=0, select bank0
  1319  0779  0857               	movf	(main@c3),w
  1320  077A  00BD               	movwf	(??_main+0)+0
  1321  077B  01BE               	clrf	(??_main+0)+0+1
  1322  077C  083D               	movf	0+(??_main+0)+0,w
  1323  077D  00F2               	movwf	0+(?___awmod)+02h
  1324  077E  083E               	movf	1+(??_main+0)+0,w
  1325  077F  00F3               	movwf	1+(?___awmod)+02h
  1326  0780  120A  118A  22BD   	fcall	___awmod
              120A  118A         
  1327  0785  0870               	movf	(0+(?___awmod)),w
  1328  0786  3E30               	addlw	030h
  1329  0787  120A  118A  20BD   	fcall	_lcd_putch
              120A  118A         
  1330                           	line	85
  1331                           	
  1332  078C                     l6026:	
  1333                           ;main.c: 85: if(moisture>2&&f1==0)
  1334  078C  3003               	movlw	(03h)
  1335  078D  1283               	bcf	status, 5	;RP0=0, select bank0
  1336  078E  1303               	bcf	status, 6	;RP1=0, select bank0
  1337  078F  024E               	subwf	(main@moisture),w
  1338  0790  1C03               	skipc
  1339  0791  2F93               	goto	u3631
  1340  0792  2F94               	goto	u3630
  1341  0793                     u3631:
  1342  0793  2FA0               	goto	l6034
  1343  0794                     u3630:
  1344                           	
  1345  0794                     l6028:	
  1346  0794  0855               	movf	((main@f1+1)),w
  1347  0795  0454               	iorwf	((main@f1)),w
  1348  0796  1D03               	skipz
  1349  0797  2F99               	goto	u3641
  1350  0798  2F9A               	goto	u3640
  1351  0799                     u3641:
  1352  0799  2FA0               	goto	l6034
  1353  079A                     u3640:
  1354                           	line	87
  1355                           	
  1356  079A                     l6030:	
  1357                           ;main.c: 86: {
  1358                           ;main.c: 87: RB0=1;
  1359  079A  1406               	bsf	(48/8),(48)&7
  1360                           	line	88
  1361                           	
  1362  079B                     l6032:	
  1363                           ;main.c: 88: f1=1;
  1364  079B  3001               	movlw	low(01h)
  1365  079C  00D4               	movwf	(main@f1)
  1366  079D  3000               	movlw	high(01h)
  1367  079E  00D5               	movwf	((main@f1))+1
  1368                           	line	89
  1369                           ;main.c: 89: }
  1370  079F  2FB2               	goto	l6042
  1371                           	line	90
  1372                           	
  1373  07A0                     l2894:	
  1374                           	
  1375  07A0                     l6034:	
  1376                           ;main.c: 90: else if(moisture<2&&f1==1)
  1377  07A0  3002               	movlw	(02h)
  1378  07A1  024E               	subwf	(main@moisture),w
  1379  07A2  1803               	skipnc
  1380  07A3  2FA5               	goto	u3651
  1381  07A4  2FA6               	goto	u3650
  1382  07A5                     u3651:
  1383  07A5  2FB2               	goto	l6042
  1384  07A6                     u3650:
  1385                           	
  1386  07A6                     l6036:	
  1387  07A6  3001               	movlw	01h
  1388  07A7  0654               	xorwf	(main@f1),w
  1389  07A8  0455               	iorwf	(main@f1+1),w
  1390  07A9  1D03               	skipz
  1391  07AA  2FAC               	goto	u3661
  1392  07AB  2FAD               	goto	u3660
  1393  07AC                     u3661:
  1394  07AC  2FB2               	goto	l6042
  1395  07AD                     u3660:
  1396                           	line	92
  1397                           	
  1398  07AD                     l6038:	
  1399                           ;main.c: 91: {
  1400                           ;main.c: 92: RB0=0;
  1401  07AD  1006               	bcf	(48/8),(48)&7
  1402                           	line	93
  1403                           	
  1404  07AE                     l6040:	
  1405                           ;main.c: 93: f1=0;
  1406  07AE  01D4               	clrf	(main@f1)
  1407  07AF  01D5               	clrf	(main@f1+1)
  1408  07B0  2FB2               	goto	l6042
  1409                           	line	94
  1410                           	
  1411  07B1                     l2896:	
  1412  07B1  2FB2               	goto	l6042
  1413                           	line	97
  1414                           	
  1415  07B2                     l2895:	
  1416                           	
  1417  07B2                     l6042:	
  1418                           ;main.c: 94: }
  1419                           ;main.c: 97: if((c3>10)&&(c3<=20))
  1420  07B2  300B               	movlw	(0Bh)
  1421  07B3  0257               	subwf	(main@c3),w
  1422  07B4  1C03               	skipc
  1423  07B5  2FB7               	goto	u3671
  1424  07B6  2FB8               	goto	u3670
  1425  07B7                     u3671:
  1426  07B7  2FC0               	goto	l2897
  1427  07B8                     u3670:
  1428                           	
  1429  07B8                     l6044:	
  1430  07B8  3015               	movlw	(015h)
  1431  07B9  0257               	subwf	(main@c3),w
  1432  07BA  1803               	skipnc
  1433  07BB  2FBD               	goto	u3681
  1434  07BC  2FBE               	goto	u3680
  1435  07BD                     u3681:
  1436  07BD  2FC0               	goto	l2897
  1437  07BE                     u3680:
  1438                           	line	99
  1439                           	
  1440  07BE                     l6046:	
  1441                           ;main.c: 98: {
  1442                           ;main.c: 99: RC0=1;
  1443  07BE  1407               	bsf	(56/8),(56)&7
  1444                           	line	100
  1445                           ;main.c: 100: }
  1446  07BF  2FC2               	goto	l6048
  1447                           	line	101
  1448                           	
  1449  07C0                     l2897:	
  1450                           	line	103
  1451                           ;main.c: 101: else
  1452                           ;main.c: 102: {
  1453                           ;main.c: 103: RC0=0;
  1454  07C0  1007               	bcf	(56/8),(56)&7
  1455  07C1  2FC2               	goto	l6048
  1456                           	line	104
  1457                           	
  1458  07C2                     l2898:	
  1459                           	line	107
  1460                           	
  1461  07C2                     l6048:	
  1462                           ;main.c: 104: }
  1463                           ;main.c: 107: if (light_int < 2)
  1464  07C2  3002               	movlw	(02h)
  1465  07C3  0256               	subwf	(main@light_int),w
  1466  07C4  1803               	skipnc
  1467  07C5  2FC7               	goto	u3691
  1468  07C6  2FC8               	goto	u3690
  1469  07C7                     u3691:
  1470  07C7  2FCC               	goto	l6054
  1471  07C8                     u3690:
  1472                           	line	109
  1473                           	
  1474  07C8                     l6050:	
  1475                           ;main.c: 108: {
  1476                           ;main.c: 109: RC5 = 1;
  1477  07C8  1687               	bsf	(61/8),(61)&7
  1478                           	line	110
  1479                           	
  1480  07C9                     l6052:	
  1481                           ;main.c: 110: CCPR1L = 150;
  1482  07C9  3096               	movlw	(096h)
  1483  07CA  0095               	movwf	(21)	;volatile
  1484                           	line	111
  1485                           ;main.c: 111: }
  1486  07CB  2FD5               	goto	l6058
  1487                           	line	112
  1488                           	
  1489  07CC                     l2899:	
  1490                           	
  1491  07CC                     l6054:	
  1492                           ;main.c: 112: else if(light_int > 2)
  1493  07CC  3003               	movlw	(03h)
  1494  07CD  0256               	subwf	(main@light_int),w
  1495  07CE  1C03               	skipc
  1496  07CF  2FD1               	goto	u3701
  1497  07D0  2FD2               	goto	u3700
  1498  07D1                     u3701:
  1499  07D1  2FD5               	goto	l6058
  1500  07D2                     u3700:
  1501                           	line	114
  1502                           	
  1503  07D2                     l6056:	
  1504                           ;main.c: 113: {
  1505                           ;main.c: 114: CCPR1L=0;
  1506  07D2  0195               	clrf	(21)	;volatile
  1507  07D3  2FD5               	goto	l6058
  1508                           	line	115
  1509                           	
  1510  07D4                     l2901:	
  1511  07D4  2FD5               	goto	l6058
  1512                           	line	116
  1513                           	
  1514  07D5                     l2900:	
  1515                           	
  1516  07D5                     l6058:	
  1517                           ;main.c: 115: }
  1518                           ;main.c: 116: if((c3>=30)&&(c3<=35)&&(light_int < 2))
  1519  07D5  301E               	movlw	(01Eh)
  1520  07D6  0257               	subwf	(main@c3),w
  1521  07D7  1C03               	skipc
  1522  07D8  2FDA               	goto	u3711
  1523  07D9  2FDB               	goto	u3710
  1524  07DA                     u3711:
  1525  07DA  2FE9               	goto	l6066
  1526  07DB                     u3710:
  1527                           	
  1528  07DB                     l6060:	
  1529  07DB  3024               	movlw	(024h)
  1530  07DC  0257               	subwf	(main@c3),w
  1531  07DD  1803               	skipnc
  1532  07DE  2FE0               	goto	u3721
  1533  07DF  2FE1               	goto	u3720
  1534  07E0                     u3721:
  1535  07E0  2FE9               	goto	l6066
  1536  07E1                     u3720:
  1537                           	
  1538  07E1                     l6062:	
  1539  07E1  3002               	movlw	(02h)
  1540  07E2  0256               	subwf	(main@light_int),w
  1541  07E3  1803               	skipnc
  1542  07E4  2FE6               	goto	u3731
  1543  07E5  2FE7               	goto	u3730
  1544  07E6                     u3731:
  1545  07E6  2FE9               	goto	l6066
  1546  07E7                     u3730:
  1547                           	line	118
  1548                           	
  1549  07E7                     l6064:	
  1550                           ;main.c: 117: {
  1551                           ;main.c: 118: RC5 = 0;
  1552  07E7  1287               	bcf	(61/8),(61)&7
  1553  07E8  2FE9               	goto	l6066
  1554                           	line	119
  1555                           	
  1556  07E9                     l2902:	
  1557                           	line	120
  1558                           	
  1559  07E9                     l6066:	
  1560                           ;main.c: 119: }
  1561                           ;main.c: 120: _delay((unsigned long)((850)*(20000000/4000.0)));
  1562                           	opt asmopt_off
  1563  07E9  3016               movlw  22
  1564  07EA  00BF               movwf	((??_main+0)+0+2),f
  1565  07EB  3090               movlw	144
  1566  07EC  00BE               movwf	((??_main+0)+0+1),f
  1567  07ED  307E               	movlw	126
  1568  07EE  00BD               movwf	((??_main+0)+0),f
  1569  07EF                     u3757:
  1570  07EF  0BBD               	decfsz	((??_main+0)+0),f
  1571  07F0  2FEF               	goto	u3757
  1572  07F1  0BBE               	decfsz	((??_main+0)+0+1),f
  1573  07F2  2FEF               	goto	u3757
  1574  07F3  0BBF               	decfsz	((??_main+0)+0+2),f
  1575  07F4  2FEF               	goto	u3757
  1576  07F5  0064               	clrwdt
  1577                           opt asmopt_on
  1578                           
  1579                           	line	121
  1580                           	
  1581  07F6                     l6068:	
  1582                           ;main.c: 121: lcd_clear();
  1583  07F6  120A  118A  20AC   	fcall	_lcd_clear
              120A  118A         
  1584  07FB  2DE5               	goto	l5978
  1585                           	line	122
  1586                           	
  1587  07FC                     l2903:	
  1588                           	line	51
  1589  07FC  2DE5               	goto	l5978
  1590                           	
  1591  07FD                     l2904:	
  1592                           	line	123
  1593                           	
  1594  07FD                     l2905:	
  1595                           	global	start
  1596  07FD  120A  118A  2800   	ljmp	start
  1597                           	opt stack 0
  1598                           GLOBAL	__end_of_main
  1599  0800                     	__end_of_main:
  1600 ;; =============== function _main ends ============
  1601                           
  1602                           	signat	_main,88
  1603                           	global	_lcd_goto
  1604                           psect	text598,local,class=CODE,delta=2
  1605                           global __ptext598
  1606  01E9                     __ptext598:
  1607                           
  1608 ;; *************** function _lcd_goto *****************
  1609 ;; Defined at:
  1610 ;;		line 77 in file "E:\PIC\test\lcd.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;  line            1    wreg     unsigned char 
  1613 ;;  pos             1    6[COMMON] unsigned char 
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;  line            1    7[COMMON] unsigned char 
  1616 ;; Return value:  Size  Location     Type
  1617 ;;		None               void
  1618 ;; Registers used:
  1619 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1625 ;;      Params:         1       0       0       0       0
  1626 ;;      Locals:         1       0       0       0       0
  1627 ;;      Temps:          0       0       0       0       0
  1628 ;;      Totals:         2       0       0       0       0
  1629 ;;Total ram usage:        2 bytes
  1630 ;; Hardware stack levels used:    1
  1631 ;; Hardware stack levels required when called:    2
  1632 ;; This function calls:
  1633 ;;		_send
  1634 ;; This function is called by:
  1635 ;;		_main
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           psect	text598
  1639                           	file	"E:\PIC\test\lcd.c"
  1640                           	line	77
  1641                           	global	__size_of_lcd_goto
  1642  003F                     	__size_of_lcd_goto	equ	__end_of_lcd_goto-_lcd_goto
  1643                           	
  1644  01E9                     _lcd_goto:	
  1645                           	opt	stack 5
  1646                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1647                           ;lcd_goto@line stored from wreg
  1648  01E9  00F7               	movwf	(lcd_goto@line)
  1649                           	line	78
  1650                           	
  1651  01EA                     l5936:	
  1652                           ;lcd.c: 78: switch(line)
  1653  01EA  2A19               	goto	l5950
  1654                           	line	80
  1655                           ;lcd.c: 79: {
  1656                           ;lcd.c: 80: case 1:
  1657                           	
  1658  01EB                     l2156:	
  1659                           	line	81
  1660                           ;lcd.c: 81: mode=0;
  1661  01EB  117D               	bcf	(_mode/8),(_mode)&7
  1662                           	line	82
  1663                           	
  1664  01EC                     l5938:	
  1665                           ;lcd.c: 82: send(0X80+pos);
  1666  01EC  0876               	movf	(lcd_goto@pos),w
  1667  01ED  3E80               	addlw	080h
  1668  01EE  120A  118A  2228   	fcall	_send
              120A  118A         
  1669                           	line	83
  1670                           ;lcd.c: 83: break;
  1671  01F3  2A27               	goto	l2162
  1672                           	line	85
  1673                           ;lcd.c: 85: case 2:
  1674                           	
  1675  01F4                     l2158:	
  1676                           	line	86
  1677                           ;lcd.c: 86: mode=0;
  1678  01F4  117D               	bcf	(_mode/8),(_mode)&7
  1679                           	line	87
  1680                           	
  1681  01F5                     l5940:	
  1682                           ;lcd.c: 87: send(0XC0+pos);
  1683  01F5  0876               	movf	(lcd_goto@pos),w
  1684  01F6  3EC0               	addlw	0C0h
  1685  01F7  120A  118A  2228   	fcall	_send
              120A  118A         
  1686                           	line	88
  1687                           ;lcd.c: 88: break;
  1688  01FC  2A27               	goto	l2162
  1689                           	line	90
  1690                           ;lcd.c: 90: case 3:
  1691                           	
  1692  01FD                     l2159:	
  1693                           	line	91
  1694                           ;lcd.c: 91: mode=0;
  1695  01FD  117D               	bcf	(_mode/8),(_mode)&7
  1696                           	line	92
  1697                           	
  1698  01FE                     l5942:	
  1699                           ;lcd.c: 92: send(0X94+pos);
  1700  01FE  0876               	movf	(lcd_goto@pos),w
  1701  01FF  3E94               	addlw	094h
  1702  0200  120A  118A  2228   	fcall	_send
              120A  118A         
  1703                           	line	93
  1704                           ;lcd.c: 93: break;
  1705  0205  2A27               	goto	l2162
  1706                           	line	95
  1707                           ;lcd.c: 95: case 4:
  1708                           	
  1709  0206                     l2160:	
  1710                           	line	96
  1711                           ;lcd.c: 96: mode=0;
  1712  0206  117D               	bcf	(_mode/8),(_mode)&7
  1713                           	line	97
  1714                           	
  1715  0207                     l5944:	
  1716                           ;lcd.c: 97: send(0XD4+pos);
  1717  0207  0876               	movf	(lcd_goto@pos),w
  1718  0208  3ED4               	addlw	0D4h
  1719  0209  120A  118A  2228   	fcall	_send
              120A  118A         
  1720                           	line	98
  1721                           ;lcd.c: 98: break;
  1722  020E  2A27               	goto	l2162
  1723                           	line	100
  1724                           ;lcd.c: 100: default:
  1725                           	
  1726  020F                     l2161:	
  1727                           	line	101
  1728                           ;lcd.c: 101: mode=0;
  1729  020F  117D               	bcf	(_mode/8),(_mode)&7
  1730                           	line	102
  1731                           	
  1732  0210                     l5946:	
  1733                           ;lcd.c: 102: send(0XD4+pos);
  1734  0210  0876               	movf	(lcd_goto@pos),w
  1735  0211  3ED4               	addlw	0D4h
  1736  0212  120A  118A  2228   	fcall	_send
              120A  118A         
  1737                           	line	103
  1738                           ;lcd.c: 103: break;
  1739  0217  2A27               	goto	l2162
  1740                           	line	104
  1741                           	
  1742  0218                     l5948:	
  1743                           ;lcd.c: 104: }
  1744  0218  2A27               	goto	l2162
  1745                           	line	78
  1746                           	
  1747  0219                     l2155:	
  1748                           	
  1749  0219                     l5950:	
  1750  0219  0877               	movf	(lcd_goto@line),w
  1751                           	; Switch size 1, requested type "space"
  1752                           ; Number of cases is 4, Range of values is 1 to 4
  1753                           ; switch strategies available:
  1754                           ; Name         Instructions Cycles
  1755                           ; simple_byte           13     7 (average)
  1756                           ; direct_byte           23    11 (fixed)
  1757                           ; jumptable            263     9 (fixed)
  1758                           ;	Chosen strategy is simple_byte
  1759                           
  1760                           	opt asmopt_off
  1761  021A  3A01               	xorlw	1^0	; case 1
  1762  021B  1903               	skipnz
  1763  021C  29EB               	goto	l2156
  1764  021D  3A03               	xorlw	2^1	; case 2
  1765  021E  1903               	skipnz
  1766  021F  29F4               	goto	l2158
  1767  0220  3A01               	xorlw	3^2	; case 3
  1768  0221  1903               	skipnz
  1769  0222  29FD               	goto	l2159
  1770  0223  3A07               	xorlw	4^3	; case 4
  1771  0224  1903               	skipnz
  1772  0225  2A06               	goto	l2160
  1773  0226  2A0F               	goto	l2161
  1774                           	opt asmopt_on
  1775                           
  1776                           	line	104
  1777                           	
  1778  0227                     l2157:	
  1779                           	line	105
  1780                           	
  1781  0227                     l2162:	
  1782  0227  0008               	return
  1783                           	opt stack 0
  1784                           GLOBAL	__end_of_lcd_goto
  1785  0228                     	__end_of_lcd_goto:
  1786 ;; =============== function _lcd_goto ends ============
  1787                           
  1788                           	signat	_lcd_goto,8312
  1789                           	global	_lcd_putch
  1790                           psect	text599,local,class=CODE,delta=2
  1791                           global __ptext599
  1792  00BD                     __ptext599:
  1793                           
  1794 ;; *************** function _lcd_putch *****************
  1795 ;; Defined at:
  1796 ;;		line 72 in file "E:\PIC\test\lcd.c"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;  c               1    wreg     unsigned char 
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;  c               1    6[COMMON] unsigned char 
  1801 ;; Return value:  Size  Location     Type
  1802 ;;		None               void
  1803 ;; Registers used:
  1804 ;;		wreg, status,2, status,0, pclath, cstack
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1810 ;;      Params:         0       0       0       0       0
  1811 ;;      Locals:         1       0       0       0       0
  1812 ;;      Temps:          0       0       0       0       0
  1813 ;;      Totals:         1       0       0       0       0
  1814 ;;Total ram usage:        1 bytes
  1815 ;; Hardware stack levels used:    1
  1816 ;; Hardware stack levels required when called:    2
  1817 ;; This function calls:
  1818 ;;		_send
  1819 ;; This function is called by:
  1820 ;;		_main
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           psect	text599
  1824                           	file	"E:\PIC\test\lcd.c"
  1825                           	line	72
  1826                           	global	__size_of_lcd_putch
  1827  0009                     	__size_of_lcd_putch	equ	__end_of_lcd_putch-_lcd_putch
  1828                           	
  1829  00BD                     _lcd_putch:	
  1830                           	opt	stack 5
  1831                           ; Regs used in _lcd_putch: [wreg+status,2+status,0+pclath+cstack]
  1832                           ;lcd_putch@c stored from wreg
  1833  00BD  00F6               	movwf	(lcd_putch@c)
  1834                           	line	73
  1835                           	
  1836  00BE                     l5932:	
  1837                           ;lcd.c: 73: mode = 1;
  1838  00BE  157D               	bsf	(_mode/8),(_mode)&7
  1839                           	line	74
  1840                           	
  1841  00BF                     l5934:	
  1842                           ;lcd.c: 74: send( c );
  1843  00BF  0876               	movf	(lcd_putch@c),w
  1844  00C0  120A  118A  2228   	fcall	_send
              120A  118A         
  1845                           	line	75
  1846                           	
  1847  00C5                     l2152:	
  1848  00C5  0008               	return
  1849                           	opt stack 0
  1850                           GLOBAL	__end_of_lcd_putch
  1851  00C6                     	__end_of_lcd_putch:
  1852 ;; =============== function _lcd_putch ends ============
  1853                           
  1854                           	signat	_lcd_putch,4216
  1855                           	global	_lcd_clear
  1856                           psect	text600,local,class=CODE,delta=2
  1857                           global __ptext600
  1858  00AC                     __ptext600:
  1859                           
  1860 ;; *************** function _lcd_clear *****************
  1861 ;; Defined at:
  1862 ;;		line 67 in file "E:\PIC\test\lcd.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;		None
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;		None
  1867 ;; Return value:  Size  Location     Type
  1868 ;;		None               void
  1869 ;; Registers used:
  1870 ;;		wreg, status,2, status,0, pclath, cstack
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1876 ;;      Params:         0       0       0       0       0
  1877 ;;      Locals:         0       0       0       0       0
  1878 ;;      Temps:          0       0       0       0       0
  1879 ;;      Totals:         0       0       0       0       0
  1880 ;;Total ram usage:        0 bytes
  1881 ;; Hardware stack levels used:    1
  1882 ;; Hardware stack levels required when called:    2
  1883 ;; This function calls:
  1884 ;;		_send
  1885 ;; This function is called by:
  1886 ;;		_main
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           psect	text600
  1890                           	file	"E:\PIC\test\lcd.c"
  1891                           	line	67
  1892                           	global	__size_of_lcd_clear
  1893  0008                     	__size_of_lcd_clear	equ	__end_of_lcd_clear-_lcd_clear
  1894                           	
  1895  00AC                     _lcd_clear:	
  1896                           	opt	stack 5
  1897                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1898                           	line	68
  1899                           	
  1900  00AC                     l5928:	
  1901                           ;lcd.c: 68: mode = 0;
  1902  00AC  117D               	bcf	(_mode/8),(_mode)&7
  1903                           	line	69
  1904                           	
  1905  00AD                     l5930:	
  1906                           ;lcd.c: 69: send(0x01);
  1907  00AD  3001               	movlw	(01h)
  1908  00AE  120A  118A  2228   	fcall	_send
              120A  118A         
  1909                           	line	70
  1910                           	
  1911  00B3                     l2149:	
  1912  00B3  0008               	return
  1913                           	opt stack 0
  1914                           GLOBAL	__end_of_lcd_clear
  1915  00B4                     	__end_of_lcd_clear:
  1916 ;; =============== function _lcd_clear ends ============
  1917                           
  1918                           	signat	_lcd_clear,88
  1919                           	global	_lcd_init
  1920                           psect	text601,local,class=CODE,delta=2
  1921                           global __ptext601
  1922  026F                     __ptext601:
  1923                           
  1924 ;; *************** function _lcd_init *****************
  1925 ;; Defined at:
  1926 ;;		line 13 in file "E:\PIC\test\lcd.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;		None
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;		None
  1931 ;; Return value:  Size  Location     Type
  1932 ;;		None               void
  1933 ;; Registers used:
  1934 ;;		wreg, status,2, status,0, pclath, cstack
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1940 ;;      Params:         0       0       0       0       0
  1941 ;;      Locals:         0       0       0       0       0
  1942 ;;      Temps:          3       0       0       0       0
  1943 ;;      Totals:         3       0       0       0       0
  1944 ;;Total ram usage:        3 bytes
  1945 ;; Hardware stack levels used:    1
  1946 ;; Hardware stack levels required when called:    2
  1947 ;; This function calls:
  1948 ;;		_LCD_STROBE
  1949 ;;		_send
  1950 ;; This function is called by:
  1951 ;;		_main
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           psect	text601
  1955                           	file	"E:\PIC\test\lcd.c"
  1956                           	line	13
  1957                           	global	__size_of_lcd_init
  1958  004E                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  1959                           	
  1960  026F                     _lcd_init:	
  1961                           	opt	stack 5
  1962                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1963                           	line	14
  1964                           	
  1965  026F                     l5914:	
  1966                           ;lcd.c: 14: TRISD=0;
  1967  026F  1683               	bsf	status, 5	;RP0=1, select bank1
  1968  0270  1303               	bcf	status, 6	;RP1=0, select bank1
  1969  0271  0188               	clrf	(136)^080h	;volatile
  1970                           	line	15
  1971                           	
  1972  0272                     l5916:	
  1973                           ;lcd.c: 15: _delay((unsigned long)((500)*(20000000/4000.0)));
  1974                           	opt asmopt_off
  1975  0272  300D               movlw  13
  1976  0273  00F8               movwf	((??_lcd_init+0)+0+2),f
  1977  0274  30AF               movlw	175
  1978  0275  00F7               movwf	((??_lcd_init+0)+0+1),f
  1979  0276  30C1               	movlw	193
  1980  0277  00F6               movwf	((??_lcd_init+0)+0),f
  1981  0278                     u3767:
  1982  0278  0BF6               	decfsz	((??_lcd_init+0)+0),f
  1983  0279  2A78               	goto	u3767
  1984  027A  0BF7               	decfsz	((??_lcd_init+0)+0+1),f
  1985  027B  2A78               	goto	u3767
  1986  027C  0BF8               	decfsz	((??_lcd_init+0)+0+2),f
  1987  027D  2A78               	goto	u3767
  1988  027E  0064               	clrwdt
  1989                           opt asmopt_on
  1990                           
  1991                           	line	16
  1992                           	
  1993  027F                     l5918:	
  1994                           ;lcd.c: 16: RD2=0;
  1995  027F  1283               	bcf	status, 5	;RP0=0, select bank0
  1996  0280  1303               	bcf	status, 6	;RP1=0, select bank0
  1997  0281  1108               	bcf	(66/8),(66)&7
  1998                           	line	17
  1999                           	
  2000  0282                     l5920:	
  2001                           ;lcd.c: 17: mode=0;
  2002  0282  117D               	bcf	(_mode/8),(_mode)&7
  2003                           	line	18
  2004                           	
  2005  0283                     l5922:	
  2006                           ;lcd.c: 18: RD3=0;
  2007  0283  1188               	bcf	(67/8),(67)&7
  2008                           	line	20
  2009                           ;lcd.c: 20: PORTD=(PORTD&0X0F)|0x30;
  2010  0284  0808               	movf	(8),w
  2011  0285  390F               	andlw	0Fh
  2012  0286  3830               	iorlw	030h
  2013  0287  0088               	movwf	(8)	;volatile
  2014                           	line	21
  2015                           	
  2016  0288                     l5924:	
  2017                           ;lcd.c: 21: LCD_STROBE();
  2018  0288  120A  118A  2111   	fcall	_LCD_STROBE
              120A  118A         
  2019                           	line	22
  2020                           	
  2021  028D                     l5926:	
  2022                           ;lcd.c: 22: PORTD=(PORTD&0X0F)|0x20;
  2023  028D  1283               	bcf	status, 5	;RP0=0, select bank0
  2024  028E  1303               	bcf	status, 6	;RP1=0, select bank0
  2025  028F  0808               	movf	(8),w
  2026  0290  390F               	andlw	0Fh
  2027  0291  3820               	iorlw	020h
  2028  0292  0088               	movwf	(8)	;volatile
  2029                           	line	23
  2030                           ;lcd.c: 23: LCD_STROBE();
  2031  0293  120A  118A  2111   	fcall	_LCD_STROBE
              120A  118A         
  2032                           	line	24
  2033                           ;lcd.c: 24: send(0x28);
  2034  0298  3028               	movlw	(028h)
  2035  0299  120A  118A  2228   	fcall	_send
              120A  118A         
  2036                           	line	25
  2037                           ;lcd.c: 25: send(0x08);
  2038  029E  3008               	movlw	(08h)
  2039  029F  120A  118A  2228   	fcall	_send
              120A  118A         
  2040                           	line	26
  2041                           ;lcd.c: 26: send(0x01);
  2042  02A4  3001               	movlw	(01h)
  2043  02A5  120A  118A  2228   	fcall	_send
              120A  118A         
  2044                           	line	27
  2045                           ;lcd.c: 27: send(0x06);
  2046  02AA  3006               	movlw	(06h)
  2047  02AB  120A  118A  2228   	fcall	_send
              120A  118A         
  2048                           	line	28
  2049                           ;lcd.c: 28: send(0x80);
  2050  02B0  3080               	movlw	(080h)
  2051  02B1  120A  118A  2228   	fcall	_send
              120A  118A         
  2052                           	line	29
  2053                           ;lcd.c: 29: send(0x0c);
  2054  02B6  300C               	movlw	(0Ch)
  2055  02B7  120A  118A  2228   	fcall	_send
              120A  118A         
  2056                           	line	30
  2057                           	
  2058  02BC                     l2130:	
  2059  02BC  0008               	return
  2060                           	opt stack 0
  2061                           GLOBAL	__end_of_lcd_init
  2062  02BD                     	__end_of_lcd_init:
  2063 ;; =============== function _lcd_init ends ============
  2064                           
  2065                           	signat	_lcd_init,88
  2066                           	global	_rtc_read
  2067                           psect	text602,local,class=CODE,delta=2
  2068                           global __ptext602
  2069  0178                     __ptext602:
  2070                           
  2071 ;; *************** function _rtc_read *****************
  2072 ;; Defined at:
  2073 ;;		line 128 in file "E:\PIC\test\main.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;  reg_address     1    wreg     unsigned char 
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;  reg_address     1    3[COMMON] unsigned char 
  2078 ;;  data            1    4[COMMON] unsigned char 
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  1    wreg      unsigned char 
  2081 ;; Registers used:
  2082 ;;		wreg, status,2, status,0, pclath, cstack
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2088 ;;      Params:         0       0       0       0       0
  2089 ;;      Locals:         2       0       0       0       0
  2090 ;;      Temps:          1       0       0       0       0
  2091 ;;      Totals:         3       0       0       0       0
  2092 ;;Total ram usage:        3 bytes
  2093 ;; Hardware stack levels used:    1
  2094 ;; Hardware stack levels required when called:    2
  2095 ;; This function calls:
  2096 ;;		_i2c_start
  2097 ;;		_i2c_write
  2098 ;;		_i2c_restart
  2099 ;;		_i2c_read
  2100 ;;		_i2c_nack
  2101 ;;		_i2c_stop
  2102 ;; This function is called by:
  2103 ;;		_main
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           psect	text602
  2107                           	file	"E:\PIC\test\main.c"
  2108                           	line	128
  2109                           	global	__size_of_rtc_read
  2110  0032                     	__size_of_rtc_read	equ	__end_of_rtc_read-_rtc_read
  2111                           	
  2112  0178                     _rtc_read:	
  2113                           	opt	stack 5
  2114                           ; Regs used in _rtc_read: [wreg+status,2+status,0+pclath+cstack]
  2115                           ;rtc_read@reg_address stored from wreg
  2116                           	line	130
  2117  0178  00F3               	movwf	(rtc_read@reg_address)
  2118                           	
  2119  0179                     l5900:	
  2120                           ;main.c: 129: unsigned char data;
  2121                           ;main.c: 130: i2c_start();
  2122  0179  120A  118A  20C6   	fcall	_i2c_start
              120A  118A         
  2123                           	line	131
  2124                           	
  2125  017E                     l5902:	
  2126                           ;main.c: 131: i2c_write(0XD0);
  2127  017E  30D0               	movlw	(0D0h)
  2128  017F  120A  118A  20F9   	fcall	_i2c_write
              120A  118A         
  2129                           	line	132
  2130                           	
  2131  0184                     l5904:	
  2132                           ;main.c: 132: i2c_write(reg_address);
  2133  0184  0873               	movf	(rtc_read@reg_address),w
  2134  0185  120A  118A  20F9   	fcall	_i2c_write
              120A  118A         
  2135                           	line	133
  2136                           ;main.c: 133: i2c_restart();
  2137  018A  120A  118A  20DA   	fcall	_i2c_restart
              120A  118A         
  2138                           	line	134
  2139                           	
  2140  018F                     l5906:	
  2141                           ;main.c: 134: i2c_write(0XD0 + 1);
  2142  018F  30D1               	movlw	(0D1h)
  2143  0190  120A  118A  20F9   	fcall	_i2c_write
              120A  118A         
  2144                           	line	135
  2145                           	
  2146  0195                     l5908:	
  2147                           ;main.c: 135: data = i2c_read();
  2148  0195  120A  118A  2121   	fcall	_i2c_read
              120A  118A         
  2149  019A  00F2               	movwf	(??_rtc_read+0)+0
  2150  019B  0872               	movf	(??_rtc_read+0)+0,w
  2151  019C  00F4               	movwf	(rtc_read@data)
  2152                           	line	136
  2153                           ;main.c: 136: i2c_nack();
  2154  019D  120A  118A  20EE   	fcall	_i2c_nack
              120A  118A         
  2155                           	line	137
  2156                           ;main.c: 137: i2c_stop();
  2157  01A2  120A  118A  20D0   	fcall	_i2c_stop
              120A  118A         
  2158                           	line	138
  2159                           	
  2160  01A7                     l5910:	
  2161                           ;main.c: 138: return data;
  2162  01A7  0874               	movf	(rtc_read@data),w
  2163  01A8  29A9               	goto	l2908
  2164                           	
  2165  01A9                     l5912:	
  2166                           	line	139
  2167                           	
  2168  01A9                     l2908:	
  2169  01A9  0008               	return
  2170                           	opt stack 0
  2171                           GLOBAL	__end_of_rtc_read
  2172  01AA                     	__end_of_rtc_read:
  2173 ;; =============== function _rtc_read ends ============
  2174                           
  2175                           	signat	_rtc_read,4217
  2176                           	global	_send
  2177                           psect	text603,local,class=CODE,delta=2
  2178                           global __ptext603
  2179  0228                     __ptext603:
  2180                           
  2181 ;; *************** function _send *****************
  2182 ;; Defined at:
  2183 ;;		line 38 in file "E:\PIC\test\lcd.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  x               1    wreg     unsigned char 
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;  x               1    5[COMMON] unsigned char 
  2188 ;;  temp            1    4[COMMON] unsigned char 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;		None               void
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0, pclath, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2198 ;;      Params:         0       0       0       0       0
  2199 ;;      Locals:         2       0       0       0       0
  2200 ;;      Temps:          2       0       0       0       0
  2201 ;;      Totals:         4       0       0       0       0
  2202 ;;Total ram usage:        4 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; Hardware stack levels required when called:    1
  2205 ;; This function calls:
  2206 ;;		_LCD_STROBE
  2207 ;; This function is called by:
  2208 ;;		_lcd_init
  2209 ;;		_lcd_clear
  2210 ;;		_lcd_putch
  2211 ;;		_lcd_goto
  2212 ;;		_lcd_puts
  2213 ;;		_curser
  2214 ;;		_display_shift
  2215 ;;		_curser_shift_left
  2216 ;;		_curser_shift_right
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           psect	text603
  2220                           	file	"E:\PIC\test\lcd.c"
  2221                           	line	38
  2222                           	global	__size_of_send
  2223  0047                     	__size_of_send	equ	__end_of_send-_send
  2224                           	
  2225  0228                     _send:	
  2226                           	opt	stack 5
  2227                           ; Regs used in _send: [wreg+status,2+status,0+pclath+cstack]
  2228                           ;send@x stored from wreg
  2229                           	line	40
  2230  0228  00F5               	movwf	(send@x)
  2231                           	
  2232  0229                     l5874:	
  2233                           ;lcd.c: 39: char temp;
  2234                           ;lcd.c: 40: temp=x;
  2235  0229  0875               	movf	(send@x),w
  2236  022A  00F2               	movwf	(??_send+0)+0
  2237  022B  0872               	movf	(??_send+0)+0,w
  2238  022C  00F4               	movwf	(send@temp)
  2239                           	line	41
  2240                           	
  2241  022D                     l5876:	
  2242                           ;lcd.c: 41: x=x&0XF0;
  2243  022D  0875               	movf	(send@x),w
  2244  022E  39F0               	andlw	0F0h
  2245  022F  00F2               	movwf	(??_send+0)+0
  2246  0230  0872               	movf	(??_send+0)+0,w
  2247  0231  00F5               	movwf	(send@x)
  2248                           	line	42
  2249                           	
  2250  0232                     l5878:	
  2251                           ;lcd.c: 42: PORTD=(PORTD&0X0F)|x;
  2252  0232  1283               	bcf	status, 5	;RP0=0, select bank0
  2253  0233  1303               	bcf	status, 6	;RP1=0, select bank0
  2254  0234  0808               	movf	(8),w
  2255  0235  390F               	andlw	0Fh
  2256  0236  0475               	iorwf	(send@x),w
  2257  0237  0088               	movwf	(8)	;volatile
  2258                           	line	43
  2259                           	
  2260  0238                     l5880:	
  2261                           ;lcd.c: 43: if (mode==0)
  2262  0238  197D               	btfsc	(_mode/8),(_mode)&7
  2263  0239  2A3B               	goto	u3571
  2264  023A  2A3C               	goto	u3570
  2265  023B                     u3571:
  2266  023B  2A3E               	goto	l2136
  2267  023C                     u3570:
  2268                           	line	44
  2269                           	
  2270  023C                     l5882:	
  2271                           ;lcd.c: 44: RD2=0;
  2272  023C  1108               	bcf	(66/8),(66)&7
  2273  023D  2A40               	goto	l5884
  2274                           	line	45
  2275                           	
  2276  023E                     l2136:	
  2277                           	line	46
  2278                           ;lcd.c: 45: else
  2279                           ;lcd.c: 46: RD2=1;
  2280  023E  1508               	bsf	(66/8),(66)&7
  2281  023F  2A40               	goto	l5884
  2282                           	
  2283  0240                     l2137:	
  2284                           	line	47
  2285                           	
  2286  0240                     l5884:	
  2287                           ;lcd.c: 47: LCD_STROBE();
  2288  0240  120A  118A  2111   	fcall	_LCD_STROBE
              120A  118A         
  2289                           	line	48
  2290                           	
  2291  0245                     l5886:	
  2292                           ;lcd.c: 48: x=temp;
  2293  0245  0874               	movf	(send@temp),w
  2294  0246  00F2               	movwf	(??_send+0)+0
  2295  0247  0872               	movf	(??_send+0)+0,w
  2296  0248  00F5               	movwf	(send@x)
  2297                           	line	49
  2298                           	
  2299  0249                     l5888:	
  2300                           ;lcd.c: 49: x=x<<4;
  2301  0249  0875               	movf	(send@x),w
  2302  024A  00F2               	movwf	(??_send+0)+0
  2303  024B  3003               	movlw	(04h)-1
  2304  024C                     u3585:
  2305  024C  1003               	clrc
  2306  024D  0DF2               	rlf	(??_send+0)+0,f
  2307  024E  3EFF               	addlw	-1
  2308  024F  1D03               	skipz
  2309  0250  2A4C               	goto	u3585
  2310  0251  1003               	clrc
  2311  0252  0D72               	rlf	(??_send+0)+0,w
  2312  0253  00F3               	movwf	(??_send+1)+0
  2313  0254  0873               	movf	(??_send+1)+0,w
  2314  0255  00F5               	movwf	(send@x)
  2315                           	line	50
  2316                           	
  2317  0256                     l5890:	
  2318                           ;lcd.c: 50: x=x&0XF0;
  2319  0256  0875               	movf	(send@x),w
  2320  0257  39F0               	andlw	0F0h
  2321  0258  00F2               	movwf	(??_send+0)+0
  2322  0259  0872               	movf	(??_send+0)+0,w
  2323  025A  00F5               	movwf	(send@x)
  2324                           	line	51
  2325                           	
  2326  025B                     l5892:	
  2327                           ;lcd.c: 51: PORTD=(PORTD&0X0F)|x;
  2328  025B  1283               	bcf	status, 5	;RP0=0, select bank0
  2329  025C  1303               	bcf	status, 6	;RP1=0, select bank0
  2330  025D  0808               	movf	(8),w
  2331  025E  390F               	andlw	0Fh
  2332  025F  0475               	iorwf	(send@x),w
  2333  0260  0088               	movwf	(8)	;volatile
  2334                           	line	52
  2335                           	
  2336  0261                     l5894:	
  2337                           ;lcd.c: 52: if(mode==0)
  2338  0261  197D               	btfsc	(_mode/8),(_mode)&7
  2339  0262  2A64               	goto	u3591
  2340  0263  2A65               	goto	u3590
  2341  0264                     u3591:
  2342  0264  2A67               	goto	l2138
  2343  0265                     u3590:
  2344                           	line	53
  2345                           	
  2346  0265                     l5896:	
  2347                           ;lcd.c: 53: RD2=0;
  2348  0265  1108               	bcf	(66/8),(66)&7
  2349  0266  2A69               	goto	l5898
  2350                           	line	54
  2351                           	
  2352  0267                     l2138:	
  2353                           	line	55
  2354                           ;lcd.c: 54: else
  2355                           ;lcd.c: 55: RD2=1;
  2356  0267  1508               	bsf	(66/8),(66)&7
  2357  0268  2A69               	goto	l5898
  2358                           	
  2359  0269                     l2139:	
  2360                           	line	56
  2361                           	
  2362  0269                     l5898:	
  2363                           ;lcd.c: 56: LCD_STROBE();
  2364  0269  120A  118A  2111   	fcall	_LCD_STROBE
              120A  118A         
  2365                           	line	57
  2366                           	
  2367  026E                     l2140:	
  2368  026E  0008               	return
  2369                           	opt stack 0
  2370                           GLOBAL	__end_of_send
  2371  026F                     	__end_of_send:
  2372 ;; =============== function _send ends ============
  2373                           
  2374                           	signat	_send,4216
  2375                           	global	___lwtoft
  2376                           psect	text604,local,class=CODE,delta=2
  2377                           global __ptext604
  2378  015D                     __ptext604:
  2379                           
  2380 ;; *************** function ___lwtoft *****************
  2381 ;; Defined at:
  2382 ;;		line 29 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwtoft.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;  c               2   10[BANK0 ] unsigned int 
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;		None
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  3   10[BANK0 ] float 
  2389 ;; Registers used:
  2390 ;;		wreg, status,2, status,0, pclath, cstack
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2396 ;;      Params:         0       3       0       0       0
  2397 ;;      Locals:         0       0       0       0       0
  2398 ;;      Temps:          1       0       0       0       0
  2399 ;;      Totals:         1       3       0       0       0
  2400 ;;Total ram usage:        4 bytes
  2401 ;; Hardware stack levels used:    1
  2402 ;; Hardware stack levels required when called:    1
  2403 ;; This function calls:
  2404 ;;		___ftpack
  2405 ;; This function is called by:
  2406 ;;		_main
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           psect	text604
  2410                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwtoft.c"
  2411                           	line	29
  2412                           	global	__size_of___lwtoft
  2413  001B                     	__size_of___lwtoft	equ	__end_of___lwtoft-___lwtoft
  2414                           	
  2415  015D                     ___lwtoft:	
  2416                           	opt	stack 6
  2417                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  2418                           	line	30
  2419                           	
  2420  015D                     l5870:	
  2421  015D  1283               	bcf	status, 5	;RP0=0, select bank0
  2422  015E  1303               	bcf	status, 6	;RP1=0, select bank0
  2423  015F  082A               	movf	(___lwtoft@c),w
  2424  0160  00F0               	movwf	(?___ftpack)
  2425  0161  082B               	movf	(___lwtoft@c+1),w
  2426  0162  00F1               	movwf	(?___ftpack+1)
  2427  0163  01F2               	clrf	(?___ftpack+2)
  2428  0164  308E               	movlw	(08Eh)
  2429  0165  00FC               	movwf	(??___lwtoft+0)+0
  2430  0166  087C               	movf	(??___lwtoft+0)+0,w
  2431  0167  00F3               	movwf	0+(?___ftpack)+03h
  2432  0168  01F4               	clrf	0+(?___ftpack)+04h
  2433  0169  120A  118A  2397   	fcall	___ftpack
              120A  118A         
  2434  016E  0870               	movf	(0+(?___ftpack)),w
  2435  016F  1283               	bcf	status, 5	;RP0=0, select bank0
  2436  0170  1303               	bcf	status, 6	;RP1=0, select bank0
  2437  0171  00AA               	movwf	(?___lwtoft)
  2438  0172  0871               	movf	(1+(?___ftpack)),w
  2439  0173  00AB               	movwf	(?___lwtoft+1)
  2440  0174  0872               	movf	(2+(?___ftpack)),w
  2441  0175  00AC               	movwf	(?___lwtoft+2)
  2442  0176  2977               	goto	l3817
  2443                           	
  2444  0177                     l5872:	
  2445                           	line	31
  2446                           	
  2447  0177                     l3817:	
  2448  0177  0008               	return
  2449                           	opt stack 0
  2450                           GLOBAL	__end_of___lwtoft
  2451  0178                     	__end_of___lwtoft:
  2452 ;; =============== function ___lwtoft ends ============
  2453                           
  2454                           	signat	___lwtoft,4219
  2455                           	global	___ftmul
  2456                           psect	text605,local,class=CODE,delta=2
  2457                           global __ptext605
  2458  04B8                     __ptext605:
  2459                           
  2460 ;; *************** function ___ftmul *****************
  2461 ;; Defined at:
  2462 ;;		line 52 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;  f1              3   13[BANK0 ] float 
  2465 ;;  f2              3   16[BANK0 ] float 
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;  f3_as_produc    3   24[BANK0 ] unsigned um
  2468 ;;  sign            1   28[BANK0 ] unsigned char 
  2469 ;;  cntr            1   27[BANK0 ] unsigned char 
  2470 ;;  exp             1   23[BANK0 ] unsigned char 
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  3   13[BANK0 ] float 
  2473 ;; Registers used:
  2474 ;;		wreg, status,2, status,0, pclath, cstack
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2480 ;;      Params:         0       6       0       0       0
  2481 ;;      Locals:         0       6       0       0       0
  2482 ;;      Temps:          0       4       0       0       0
  2483 ;;      Totals:         0      16       0       0       0
  2484 ;;Total ram usage:       16 bytes
  2485 ;; Hardware stack levels used:    1
  2486 ;; Hardware stack levels required when called:    1
  2487 ;; This function calls:
  2488 ;;		___ftpack
  2489 ;; This function is called by:
  2490 ;;		_main
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           psect	text605
  2494                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  2495                           	line	52
  2496                           	global	__size_of___ftmul
  2497  00EE                     	__size_of___ftmul	equ	__end_of___ftmul-___ftmul
  2498                           	
  2499  04B8                     ___ftmul:	
  2500                           	opt	stack 6
  2501                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2502                           	line	56
  2503                           	
  2504  04B8                     l5820:	
  2505  04B8  1283               	bcf	status, 5	;RP0=0, select bank0
  2506  04B9  1303               	bcf	status, 6	;RP1=0, select bank0
  2507  04BA  082D               	movf	(___ftmul@f1),w
  2508  04BB  00B3               	movwf	((??___ftmul+0)+0)
  2509  04BC  082E               	movf	(___ftmul@f1+1),w
  2510  04BD  00B4               	movwf	((??___ftmul+0)+0+1)
  2511  04BE  082F               	movf	(___ftmul@f1+2),w
  2512  04BF  00B5               	movwf	((??___ftmul+0)+0+2)
  2513  04C0  1003               	clrc
  2514  04C1  0D34               	rlf	(??___ftmul+0)+1,w
  2515  04C2  0D35               	rlf	(??___ftmul+0)+2,w
  2516  04C3  00B6               	movwf	(??___ftmul+3)+0
  2517  04C4  0836               	movf	(??___ftmul+3)+0,w
  2518  04C5  00B7               	movwf	(___ftmul@exp)
  2519  04C6  08B7               	movf	((___ftmul@exp)),f
  2520  04C7  1D03               	skipz
  2521  04C8  2CCA               	goto	u3431
  2522  04C9  2CCB               	goto	u3430
  2523  04CA                     u3431:
  2524  04CA  2CD3               	goto	l5826
  2525  04CB                     u3430:
  2526                           	line	57
  2527                           	
  2528  04CB                     l5822:	
  2529  04CB  3000               	movlw	0x0
  2530  04CC  00AD               	movwf	(?___ftmul)
  2531  04CD  3000               	movlw	0x0
  2532  04CE  00AE               	movwf	(?___ftmul+1)
  2533  04CF  3000               	movlw	0x0
  2534  04D0  00AF               	movwf	(?___ftmul+2)
  2535  04D1  2DA5               	goto	l3693
  2536                           	
  2537  04D2                     l5824:	
  2538  04D2  2DA5               	goto	l3693
  2539                           	
  2540  04D3                     l3692:	
  2541                           	line	58
  2542                           	
  2543  04D3                     l5826:	
  2544  04D3  0830               	movf	(___ftmul@f2),w
  2545  04D4  00B3               	movwf	((??___ftmul+0)+0)
  2546  04D5  0831               	movf	(___ftmul@f2+1),w
  2547  04D6  00B4               	movwf	((??___ftmul+0)+0+1)
  2548  04D7  0832               	movf	(___ftmul@f2+2),w
  2549  04D8  00B5               	movwf	((??___ftmul+0)+0+2)
  2550  04D9  1003               	clrc
  2551  04DA  0D34               	rlf	(??___ftmul+0)+1,w
  2552  04DB  0D35               	rlf	(??___ftmul+0)+2,w
  2553  04DC  00B6               	movwf	(??___ftmul+3)+0
  2554  04DD  0836               	movf	(??___ftmul+3)+0,w
  2555  04DE  00BC               	movwf	(___ftmul@sign)
  2556  04DF  08BC               	movf	((___ftmul@sign)),f
  2557  04E0  1D03               	skipz
  2558  04E1  2CE3               	goto	u3441
  2559  04E2  2CE4               	goto	u3440
  2560  04E3                     u3441:
  2561  04E3  2CEC               	goto	l5832
  2562  04E4                     u3440:
  2563                           	line	59
  2564                           	
  2565  04E4                     l5828:	
  2566  04E4  3000               	movlw	0x0
  2567  04E5  00AD               	movwf	(?___ftmul)
  2568  04E6  3000               	movlw	0x0
  2569  04E7  00AE               	movwf	(?___ftmul+1)
  2570  04E8  3000               	movlw	0x0
  2571  04E9  00AF               	movwf	(?___ftmul+2)
  2572  04EA  2DA5               	goto	l3693
  2573                           	
  2574  04EB                     l5830:	
  2575  04EB  2DA5               	goto	l3693
  2576                           	
  2577  04EC                     l3694:	
  2578                           	line	60
  2579                           	
  2580  04EC                     l5832:	
  2581  04EC  083C               	movf	(___ftmul@sign),w
  2582  04ED  3E7B               	addlw	07Bh
  2583  04EE  00B3               	movwf	(??___ftmul+0)+0
  2584  04EF  0833               	movf	(??___ftmul+0)+0,w
  2585  04F0  07B7               	addwf	(___ftmul@exp),f
  2586                           	line	61
  2587  04F1  082D               	movf	(___ftmul@f1),w
  2588  04F2  00B3               	movwf	((??___ftmul+0)+0)
  2589  04F3  082E               	movf	(___ftmul@f1+1),w
  2590  04F4  00B4               	movwf	((??___ftmul+0)+0+1)
  2591  04F5  082F               	movf	(___ftmul@f1+2),w
  2592  04F6  00B5               	movwf	((??___ftmul+0)+0+2)
  2593  04F7  3010               	movlw	010h
  2594  04F8                     u3455:
  2595  04F8  1003               	clrc
  2596  04F9  0CB5               	rrf	(??___ftmul+0)+2,f
  2597  04FA  0CB4               	rrf	(??___ftmul+0)+1,f
  2598  04FB  0CB3               	rrf	(??___ftmul+0)+0,f
  2599  04FC                     u3450:
  2600  04FC  3EFF               	addlw	-1
  2601  04FD  1D03               	skipz
  2602  04FE  2CF8               	goto	u3455
  2603  04FF  0833               	movf	0+(??___ftmul+0)+0,w
  2604  0500  00B6               	movwf	(??___ftmul+3)+0
  2605  0501  0836               	movf	(??___ftmul+3)+0,w
  2606  0502  00BC               	movwf	(___ftmul@sign)
  2607                           	line	62
  2608  0503  0830               	movf	(___ftmul@f2),w
  2609  0504  00B3               	movwf	((??___ftmul+0)+0)
  2610  0505  0831               	movf	(___ftmul@f2+1),w
  2611  0506  00B4               	movwf	((??___ftmul+0)+0+1)
  2612  0507  0832               	movf	(___ftmul@f2+2),w
  2613  0508  00B5               	movwf	((??___ftmul+0)+0+2)
  2614  0509  3010               	movlw	010h
  2615  050A                     u3465:
  2616  050A  1003               	clrc
  2617  050B  0CB5               	rrf	(??___ftmul+0)+2,f
  2618  050C  0CB4               	rrf	(??___ftmul+0)+1,f
  2619  050D  0CB3               	rrf	(??___ftmul+0)+0,f
  2620  050E                     u3460:
  2621  050E  3EFF               	addlw	-1
  2622  050F  1D03               	skipz
  2623  0510  2D0A               	goto	u3465
  2624  0511  0833               	movf	0+(??___ftmul+0)+0,w
  2625  0512  00B6               	movwf	(??___ftmul+3)+0
  2626  0513  0836               	movf	(??___ftmul+3)+0,w
  2627  0514  06BC               	xorwf	(___ftmul@sign),f
  2628                           	line	63
  2629  0515  3080               	movlw	(080h)
  2630  0516  00B3               	movwf	(??___ftmul+0)+0
  2631  0517  0833               	movf	(??___ftmul+0)+0,w
  2632  0518  05BC               	andwf	(___ftmul@sign),f
  2633                           	line	64
  2634                           	
  2635  0519                     l5834:	
  2636  0519  17AE               	bsf	(___ftmul@f1)+(15/8),(15)&7
  2637                           	line	66
  2638                           	
  2639  051A                     l5836:	
  2640  051A  17B1               	bsf	(___ftmul@f2)+(15/8),(15)&7
  2641                           	line	67
  2642                           	
  2643  051B                     l5838:	
  2644  051B  30FF               	movlw	0FFh
  2645  051C  05B0               	andwf	(___ftmul@f2),f
  2646  051D  30FF               	movlw	0FFh
  2647  051E  05B1               	andwf	(___ftmul@f2+1),f
  2648  051F  3000               	movlw	0
  2649  0520  05B2               	andwf	(___ftmul@f2+2),f
  2650                           	line	68
  2651                           	
  2652  0521                     l5840:	
  2653  0521  3000               	movlw	0
  2654  0522  00B8               	movwf	(___ftmul@f3_as_product)
  2655  0523  3000               	movlw	0
  2656  0524  00B9               	movwf	(___ftmul@f3_as_product+1)
  2657  0525  3000               	movlw	0
  2658  0526  00BA               	movwf	(___ftmul@f3_as_product+2)
  2659                           	line	69
  2660                           	
  2661  0527                     l5842:	
  2662  0527  3007               	movlw	(07h)
  2663  0528  00B3               	movwf	(??___ftmul+0)+0
  2664  0529  0833               	movf	(??___ftmul+0)+0,w
  2665  052A  00BB               	movwf	(___ftmul@cntr)
  2666  052B  2D2C               	goto	l5844
  2667                           	line	70
  2668                           	
  2669  052C                     l3695:	
  2670                           	line	71
  2671                           	
  2672  052C                     l5844:	
  2673  052C  1C2D               	btfss	(___ftmul@f1),(0)&7
  2674  052D  2D2F               	goto	u3471
  2675  052E  2D30               	goto	u3470
  2676  052F                     u3471:
  2677  052F  2D41               	goto	l5848
  2678  0530                     u3470:
  2679                           	line	72
  2680                           	
  2681  0530                     l5846:	
  2682  0530  0830               	movf	(___ftmul@f2),w
  2683  0531  07B8               	addwf	(___ftmul@f3_as_product),f
  2684  0532  0831               	movf	(___ftmul@f2+1),w
  2685  0533  1103               	clrz
  2686  0534  1803               	skipnc
  2687  0535  0A31               	incf	(___ftmul@f2+1),w
  2688  0536  1903               	skipnz
  2689  0537  2D39               	goto	u3481
  2690  0538  07B9               	addwf	(___ftmul@f3_as_product+1),f
  2691  0539                     u3481:
  2692  0539  0832               	movf	(___ftmul@f2+2),w
  2693  053A  1103               	clrz
  2694  053B  1803               	skipnc
  2695  053C  0A32               	incf	(___ftmul@f2+2),w
  2696  053D  1903               	skipnz
  2697  053E  2D40               	goto	u3482
  2698  053F  07BA               	addwf	(___ftmul@f3_as_product+2),f
  2699  0540                     u3482:
  2700                           
  2701  0540  2D41               	goto	l5848
  2702                           	
  2703  0541                     l3696:	
  2704                           	line	73
  2705                           	
  2706  0541                     l5848:	
  2707  0541  3001               	movlw	01h
  2708  0542                     u3495:
  2709  0542  1003               	clrc
  2710  0543  0CAF               	rrf	(___ftmul@f1+2),f
  2711  0544  0CAE               	rrf	(___ftmul@f1+1),f
  2712  0545  0CAD               	rrf	(___ftmul@f1),f
  2713  0546  3EFF               	addlw	-1
  2714  0547  1D03               	skipz
  2715  0548  2D42               	goto	u3495
  2716                           
  2717                           	line	74
  2718                           	
  2719  0549                     l5850:	
  2720  0549  3001               	movlw	01h
  2721  054A                     u3505:
  2722  054A  1003               	clrc
  2723  054B  0DB0               	rlf	(___ftmul@f2),f
  2724  054C  0DB1               	rlf	(___ftmul@f2+1),f
  2725  054D  0DB2               	rlf	(___ftmul@f2+2),f
  2726  054E  3EFF               	addlw	-1
  2727  054F  1D03               	skipz
  2728  0550  2D4A               	goto	u3505
  2729                           	line	75
  2730                           	
  2731  0551                     l5852:	
  2732  0551  3001               	movlw	low(01h)
  2733  0552  02BB               	subwf	(___ftmul@cntr),f
  2734  0553  1D03               	btfss	status,2
  2735  0554  2D56               	goto	u3511
  2736  0555  2D57               	goto	u3510
  2737  0556                     u3511:
  2738  0556  2D2C               	goto	l5844
  2739  0557                     u3510:
  2740  0557  2D58               	goto	l5854
  2741                           	
  2742  0558                     l3697:	
  2743                           	line	76
  2744                           	
  2745  0558                     l5854:	
  2746  0558  3009               	movlw	(09h)
  2747  0559  00B3               	movwf	(??___ftmul+0)+0
  2748  055A  0833               	movf	(??___ftmul+0)+0,w
  2749  055B  00BB               	movwf	(___ftmul@cntr)
  2750  055C  2D5D               	goto	l5856
  2751                           	line	77
  2752                           	
  2753  055D                     l3698:	
  2754                           	line	78
  2755                           	
  2756  055D                     l5856:	
  2757  055D  1C2D               	btfss	(___ftmul@f1),(0)&7
  2758  055E  2D60               	goto	u3521
  2759  055F  2D61               	goto	u3520
  2760  0560                     u3521:
  2761  0560  2D72               	goto	l5860
  2762  0561                     u3520:
  2763                           	line	79
  2764                           	
  2765  0561                     l5858:	
  2766  0561  0830               	movf	(___ftmul@f2),w
  2767  0562  07B8               	addwf	(___ftmul@f3_as_product),f
  2768  0563  0831               	movf	(___ftmul@f2+1),w
  2769  0564  1103               	clrz
  2770  0565  1803               	skipnc
  2771  0566  0A31               	incf	(___ftmul@f2+1),w
  2772  0567  1903               	skipnz
  2773  0568  2D6A               	goto	u3531
  2774  0569  07B9               	addwf	(___ftmul@f3_as_product+1),f
  2775  056A                     u3531:
  2776  056A  0832               	movf	(___ftmul@f2+2),w
  2777  056B  1103               	clrz
  2778  056C  1803               	skipnc
  2779  056D  0A32               	incf	(___ftmul@f2+2),w
  2780  056E  1903               	skipnz
  2781  056F  2D71               	goto	u3532
  2782  0570  07BA               	addwf	(___ftmul@f3_as_product+2),f
  2783  0571                     u3532:
  2784                           
  2785  0571  2D72               	goto	l5860
  2786                           	
  2787  0572                     l3699:	
  2788                           	line	80
  2789                           	
  2790  0572                     l5860:	
  2791  0572  3001               	movlw	01h
  2792  0573                     u3545:
  2793  0573  1003               	clrc
  2794  0574  0CAF               	rrf	(___ftmul@f1+2),f
  2795  0575  0CAE               	rrf	(___ftmul@f1+1),f
  2796  0576  0CAD               	rrf	(___ftmul@f1),f
  2797  0577  3EFF               	addlw	-1
  2798  0578  1D03               	skipz
  2799  0579  2D73               	goto	u3545
  2800                           
  2801                           	line	81
  2802                           	
  2803  057A                     l5862:	
  2804  057A  3001               	movlw	01h
  2805  057B                     u3555:
  2806  057B  1003               	clrc
  2807  057C  0CBA               	rrf	(___ftmul@f3_as_product+2),f
  2808  057D  0CB9               	rrf	(___ftmul@f3_as_product+1),f
  2809  057E  0CB8               	rrf	(___ftmul@f3_as_product),f
  2810  057F  3EFF               	addlw	-1
  2811  0580  1D03               	skipz
  2812  0581  2D7B               	goto	u3555
  2813                           
  2814                           	line	82
  2815                           	
  2816  0582                     l5864:	
  2817  0582  3001               	movlw	low(01h)
  2818  0583  02BB               	subwf	(___ftmul@cntr),f
  2819  0584  1D03               	btfss	status,2
  2820  0585  2D87               	goto	u3561
  2821  0586  2D88               	goto	u3560
  2822  0587                     u3561:
  2823  0587  2D5D               	goto	l5856
  2824  0588                     u3560:
  2825  0588  2D89               	goto	l5866
  2826                           	
  2827  0589                     l3700:	
  2828                           	line	83
  2829                           	
  2830  0589                     l5866:	
  2831  0589  0838               	movf	(___ftmul@f3_as_product),w
  2832  058A  00F0               	movwf	(?___ftpack)
  2833  058B  0839               	movf	(___ftmul@f3_as_product+1),w
  2834  058C  00F1               	movwf	(?___ftpack+1)
  2835  058D  083A               	movf	(___ftmul@f3_as_product+2),w
  2836  058E  00F2               	movwf	(?___ftpack+2)
  2837  058F  0837               	movf	(___ftmul@exp),w
  2838  0590  00B3               	movwf	(??___ftmul+0)+0
  2839  0591  0833               	movf	(??___ftmul+0)+0,w
  2840  0592  00F3               	movwf	0+(?___ftpack)+03h
  2841  0593  083C               	movf	(___ftmul@sign),w
  2842  0594  00B4               	movwf	(??___ftmul+1)+0
  2843  0595  0834               	movf	(??___ftmul+1)+0,w
  2844  0596  00F4               	movwf	0+(?___ftpack)+04h
  2845  0597  120A  118A  2397   	fcall	___ftpack
              120A  118A         
  2846  059C  0870               	movf	(0+(?___ftpack)),w
  2847  059D  1283               	bcf	status, 5	;RP0=0, select bank0
  2848  059E  1303               	bcf	status, 6	;RP1=0, select bank0
  2849  059F  00AD               	movwf	(?___ftmul)
  2850  05A0  0871               	movf	(1+(?___ftpack)),w
  2851  05A1  00AE               	movwf	(?___ftmul+1)
  2852  05A2  0872               	movf	(2+(?___ftpack)),w
  2853  05A3  00AF               	movwf	(?___ftmul+2)
  2854  05A4  2DA5               	goto	l3693
  2855                           	
  2856  05A5                     l5868:	
  2857                           	line	84
  2858                           	
  2859  05A5                     l3693:	
  2860  05A5  0008               	return
  2861                           	opt stack 0
  2862                           GLOBAL	__end_of___ftmul
  2863  05A6                     	__end_of___ftmul:
  2864 ;; =============== function ___ftmul ends ============
  2865                           
  2866                           	signat	___ftmul,8315
  2867                           	global	_LCD_STROBE
  2868                           psect	text606,local,class=CODE,delta=2
  2869                           global __ptext606
  2870  0111                     __ptext606:
  2871                           
  2872 ;; *************** function _LCD_STROBE *****************
  2873 ;; Defined at:
  2874 ;;		line 32 in file "E:\PIC\test\lcd.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;		None
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;		None
  2879 ;; Return value:  Size  Location     Type
  2880 ;;		None               void
  2881 ;; Registers used:
  2882 ;;		wreg
  2883 ;; Tracked objects:
  2884 ;;		On entry : 0/0
  2885 ;;		On exit  : 0/0
  2886 ;;		Unchanged: 0/0
  2887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2888 ;;      Params:         0       0       0       0       0
  2889 ;;      Locals:         0       0       0       0       0
  2890 ;;      Temps:          2       0       0       0       0
  2891 ;;      Totals:         2       0       0       0       0
  2892 ;;Total ram usage:        2 bytes
  2893 ;; Hardware stack levels used:    1
  2894 ;; This function calls:
  2895 ;;		Nothing
  2896 ;; This function is called by:
  2897 ;;		_lcd_init
  2898 ;;		_send
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           psect	text606
  2902                           	file	"E:\PIC\test\lcd.c"
  2903                           	line	32
  2904                           	global	__size_of_LCD_STROBE
  2905  0010                     	__size_of_LCD_STROBE	equ	__end_of_LCD_STROBE-_LCD_STROBE
  2906                           	
  2907  0111                     _LCD_STROBE:	
  2908                           	opt	stack 5
  2909                           ; Regs used in _LCD_STROBE: [wreg]
  2910                           	line	33
  2911                           	
  2912  0111                     l5814:	
  2913                           ;lcd.c: 33: RD3=1;
  2914  0111  1283               	bcf	status, 5	;RP0=0, select bank0
  2915  0112  1303               	bcf	status, 6	;RP1=0, select bank0
  2916  0113  1588               	bsf	(67/8),(67)&7
  2917                           	line	34
  2918                           	
  2919  0114                     l5816:	
  2920                           ;lcd.c: 34: _delay((unsigned long)((5)*(20000000/4000.0)));
  2921                           	opt asmopt_off
  2922  0114  3021               movlw	33
  2923  0115  00F1               movwf	((??_LCD_STROBE+0)+0+1),f
  2924  0116  3076               	movlw	118
  2925  0117  00F0               movwf	((??_LCD_STROBE+0)+0),f
  2926  0118                     u3777:
  2927  0118  0BF0               	decfsz	((??_LCD_STROBE+0)+0),f
  2928  0119  2918               	goto	u3777
  2929  011A  0BF1               	decfsz	((??_LCD_STROBE+0)+0+1),f
  2930  011B  2918               	goto	u3777
  2931  011C  0064               	clrwdt
  2932                           opt asmopt_on
  2933                           
  2934                           	line	35
  2935                           	
  2936  011D                     l5818:	
  2937                           ;lcd.c: 35: RD3=0;
  2938  011D  1283               	bcf	status, 5	;RP0=0, select bank0
  2939  011E  1303               	bcf	status, 6	;RP1=0, select bank0
  2940  011F  1188               	bcf	(67/8),(67)&7
  2941                           	line	36
  2942                           	
  2943  0120                     l2133:	
  2944  0120  0008               	return
  2945                           	opt stack 0
  2946                           GLOBAL	__end_of_LCD_STROBE
  2947  0121                     	__end_of_LCD_STROBE:
  2948 ;; =============== function _LCD_STROBE ends ============
  2949                           
  2950                           	signat	_LCD_STROBE,88
  2951                           	global	_i2c_read
  2952                           psect	text607,local,class=CODE,delta=2
  2953                           global __ptext607
  2954  0121                     __ptext607:
  2955                           
  2956 ;; *************** function _i2c_read *****************
  2957 ;; Defined at:
  2958 ;;		line 75 in file "E:\PIC\test\i2c.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;		None
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;  temp            1    1[COMMON] unsigned char 
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  1    wreg      unsigned char 
  2965 ;; Registers used:
  2966 ;;		wreg, status,2, status,0, pclath, cstack
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2972 ;;      Params:         0       0       0       0       0
  2973 ;;      Locals:         1       0       0       0       0
  2974 ;;      Temps:          1       0       0       0       0
  2975 ;;      Totals:         2       0       0       0       0
  2976 ;;Total ram usage:        2 bytes
  2977 ;; Hardware stack levels used:    1
  2978 ;; Hardware stack levels required when called:    1
  2979 ;; This function calls:
  2980 ;;		_i2c_Wait
  2981 ;; This function is called by:
  2982 ;;		_rtc_read
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           psect	text607
  2986                           	file	"E:\PIC\test\i2c.c"
  2987                           	line	75
  2988                           	global	__size_of_i2c_read
  2989  0011                     	__size_of_i2c_read	equ	__end_of_i2c_read-_i2c_read
  2990                           	
  2991  0121                     _i2c_read:	
  2992                           	opt	stack 5
  2993                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  2994                           	line	78
  2995                           	
  2996  0121                     l5804:	
  2997                           ;i2c.c: 77: char temp;
  2998                           ;i2c.c: 78: RCEN = 1;
  2999  0121  1683               	bsf	status, 5	;RP0=1, select bank1
  3000  0122  1303               	bcf	status, 6	;RP1=0, select bank1
  3001  0123  1591               	bsf	(1163/8)^080h,(1163)&7
  3002                           	line	79
  3003                           	
  3004  0124                     l5806:	
  3005                           ;i2c.c: 79: i2c_Wait();
  3006  0124  120A  118A  20E4   	fcall	_i2c_Wait
              120A  118A         
  3007                           	line	80
  3008                           	
  3009  0129                     l5808:	
  3010                           ;i2c.c: 80: temp = SSPBUF;
  3011  0129  1283               	bcf	status, 5	;RP0=0, select bank0
  3012  012A  1303               	bcf	status, 6	;RP1=0, select bank0
  3013  012B  0813               	movf	(19),w	;volatile
  3014  012C  00F0               	movwf	(??_i2c_read+0)+0
  3015  012D  0870               	movf	(??_i2c_read+0)+0,w
  3016  012E  00F1               	movwf	(i2c_read@temp)
  3017                           	line	81
  3018                           	
  3019  012F                     l5810:	
  3020                           ;i2c.c: 81: return temp;
  3021  012F  0871               	movf	(i2c_read@temp),w
  3022  0130  2931               	goto	l1425
  3023                           	
  3024  0131                     l5812:	
  3025                           	line	83
  3026                           	
  3027  0131                     l1425:	
  3028  0131  0008               	return
  3029                           	opt stack 0
  3030                           GLOBAL	__end_of_i2c_read
  3031  0132                     	__end_of_i2c_read:
  3032 ;; =============== function _i2c_read ends ============
  3033                           
  3034                           	signat	_i2c_read,89
  3035                           	global	_i2c_write
  3036                           psect	text608,local,class=CODE,delta=2
  3037                           global __ptext608
  3038  00F9                     __ptext608:
  3039                           
  3040 ;; *************** function _i2c_write *****************
  3041 ;; Defined at:
  3042 ;;		line 35 in file "E:\PIC\test\i2c.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;  data            1    wreg     unsigned char 
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;  data            1    0[COMMON] unsigned char 
  3047 ;; Return value:  Size  Location     Type
  3048 ;;		None               void
  3049 ;; Registers used:
  3050 ;;		wreg, status,2, status,0, pclath, cstack
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3056 ;;      Params:         0       0       0       0       0
  3057 ;;      Locals:         1       0       0       0       0
  3058 ;;      Temps:          0       0       0       0       0
  3059 ;;      Totals:         1       0       0       0       0
  3060 ;;Total ram usage:        1 bytes
  3061 ;; Hardware stack levels used:    1
  3062 ;; Hardware stack levels required when called:    1
  3063 ;; This function calls:
  3064 ;;		_i2c_Wait
  3065 ;; This function is called by:
  3066 ;;		_rtc_read
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           psect	text608
  3070                           	file	"E:\PIC\test\i2c.c"
  3071                           	line	35
  3072                           	global	__size_of_i2c_write
  3073  000B                     	__size_of_i2c_write	equ	__end_of_i2c_write-_i2c_write
  3074                           	
  3075  00F9                     _i2c_write:	
  3076                           	opt	stack 5
  3077                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  3078                           ;i2c_write@data stored from wreg
  3079                           	line	37
  3080  00F9  00F0               	movwf	(i2c_write@data)
  3081                           	
  3082  00FA                     l5800:	
  3083                           ;i2c.c: 37: SSPBUF = data;
  3084  00FA  0870               	movf	(i2c_write@data),w
  3085  00FB  1283               	bcf	status, 5	;RP0=0, select bank0
  3086  00FC  1303               	bcf	status, 6	;RP1=0, select bank0
  3087  00FD  0093               	movwf	(19)	;volatile
  3088                           	line	38
  3089                           	
  3090  00FE                     l5802:	
  3091                           ;i2c.c: 38: i2c_Wait();
  3092  00FE  120A  118A  20E4   	fcall	_i2c_Wait
              120A  118A         
  3093                           	line	42
  3094                           	
  3095  0103                     l1407:	
  3096  0103  0008               	return
  3097                           	opt stack 0
  3098                           GLOBAL	__end_of_i2c_write
  3099  0104                     	__end_of_i2c_write:
  3100 ;; =============== function _i2c_write ends ============
  3101                           
  3102                           	signat	_i2c_write,4216
  3103                           	global	_read_adc
  3104                           psect	text609,local,class=CODE,delta=2
  3105                           global __ptext609
  3106  01AA                     __ptext609:
  3107                           
  3108 ;; *************** function _read_adc *****************
  3109 ;; Defined at:
  3110 ;;		line 18 in file "E:\PIC\test\adc.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;  chnl            1    wreg     unsigned char 
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;  chnl            1    6[COMMON] unsigned char 
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  2    0[COMMON] unsigned int 
  3117 ;; Registers used:
  3118 ;;		wreg, status,2, status,0, btemp+1
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3124 ;;      Params:         2       0       0       0       0
  3125 ;;      Locals:         1       0       0       0       0
  3126 ;;      Temps:          4       0       0       0       0
  3127 ;;      Totals:         7       0       0       0       0
  3128 ;;Total ram usage:        7 bytes
  3129 ;; Hardware stack levels used:    1
  3130 ;; This function calls:
  3131 ;;		Nothing
  3132 ;; This function is called by:
  3133 ;;		_main
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           psect	text609
  3137                           	file	"E:\PIC\test\adc.c"
  3138                           	line	18
  3139                           	global	__size_of_read_adc
  3140  003F                     	__size_of_read_adc	equ	__end_of_read_adc-_read_adc
  3141                           	
  3142  01AA                     _read_adc:	
  3143                           	opt	stack 7
  3144                           ; Regs used in _read_adc: [wreg+status,2+status,0+btemp+1]
  3145                           ;read_adc@chnl stored from wreg
  3146  01AA  00F6               	movwf	(read_adc@chnl)
  3147                           	line	19
  3148                           	
  3149  01AB                     l5784:	
  3150                           ;adc.c: 19: ADCON0=0B01000000|(chnl<<3);
  3151  01AB  0876               	movf	(read_adc@chnl),w
  3152  01AC  00F2               	movwf	(??_read_adc+0)+0
  3153  01AD  3002               	movlw	(03h)-1
  3154  01AE                     u3415:
  3155  01AE  1003               	clrc
  3156  01AF  0DF2               	rlf	(??_read_adc+0)+0,f
  3157  01B0  3EFF               	addlw	-1
  3158  01B1  1D03               	skipz
  3159  01B2  29AE               	goto	u3415
  3160  01B3  1003               	clrc
  3161  01B4  0D72               	rlf	(??_read_adc+0)+0,w
  3162  01B5  3840               	iorlw	040h
  3163  01B6  1283               	bcf	status, 5	;RP0=0, select bank0
  3164  01B7  1303               	bcf	status, 6	;RP1=0, select bank0
  3165  01B8  009F               	movwf	(31)	;volatile
  3166                           	line	20
  3167                           	
  3168  01B9                     l5786:	
  3169                           ;adc.c: 20: ADIF=0;
  3170  01B9  130C               	bcf	(102/8),(102)&7
  3171                           	line	21
  3172                           	
  3173  01BA                     l5788:	
  3174                           ;adc.c: 21: ADON=1;
  3175  01BA  141F               	bsf	(248/8),(248)&7
  3176                           	line	22
  3177                           	
  3178  01BB                     l5790:	
  3179                           ;adc.c: 22: _delay((unsigned long)((1)*(20000000/4000.0)));
  3180                           	opt asmopt_off
  3181  01BB  3007               movlw	7
  3182  01BC  00F3               movwf	((??_read_adc+0)+0+1),f
  3183  01BD  307D               	movlw	125
  3184  01BE  00F2               movwf	((??_read_adc+0)+0),f
  3185  01BF                     u3787:
  3186  01BF  0BF2               	decfsz	((??_read_adc+0)+0),f
  3187  01C0  29BF               	goto	u3787
  3188  01C1  0BF3               	decfsz	((??_read_adc+0)+0+1),f
  3189  01C2  29BF               	goto	u3787
  3190                           opt asmopt_on
  3191                           
  3192                           	line	23
  3193                           	
  3194  01C3                     l5792:	
  3195                           ;adc.c: 23: GO=1;
  3196  01C3  1283               	bcf	status, 5	;RP0=0, select bank0
  3197  01C4  1303               	bcf	status, 6	;RP1=0, select bank0
  3198  01C5  151F               	bsf	(250/8),(250)&7
  3199                           	line	24
  3200                           ;adc.c: 24: while(ADIF==0);
  3201  01C6  29C7               	goto	l696
  3202                           	
  3203  01C7                     l697:	
  3204                           	
  3205  01C7                     l696:	
  3206  01C7  1F0C               	btfss	(102/8),(102)&7
  3207  01C8  29CA               	goto	u3421
  3208  01C9  29CB               	goto	u3420
  3209  01CA                     u3421:
  3210  01CA  29C7               	goto	l696
  3211  01CB                     u3420:
  3212                           	
  3213  01CB                     l698:	
  3214                           	line	25
  3215                           ;adc.c: 25: GO=0;
  3216  01CB  111F               	bcf	(250/8),(250)&7
  3217                           	line	26
  3218                           	
  3219  01CC                     l5794:	
  3220                           ;adc.c: 26: _delay((unsigned long)((1)*(20000000/4000.0)));
  3221                           	opt asmopt_off
  3222  01CC  3007               movlw	7
  3223  01CD  00F3               movwf	((??_read_adc+0)+0+1),f
  3224  01CE  307D               	movlw	125
  3225  01CF  00F2               movwf	((??_read_adc+0)+0),f
  3226  01D0                     u3797:
  3227  01D0  0BF2               	decfsz	((??_read_adc+0)+0),f
  3228  01D1  29D0               	goto	u3797
  3229  01D2  0BF3               	decfsz	((??_read_adc+0)+0+1),f
  3230  01D3  29D0               	goto	u3797
  3231                           opt asmopt_on
  3232                           
  3233                           	line	27
  3234                           	
  3235  01D4                     l5796:	
  3236                           ;adc.c: 27: return((ADRESH<<8) | ADRESL);
  3237  01D4  1683               	bsf	status, 5	;RP0=1, select bank1
  3238  01D5  1303               	bcf	status, 6	;RP1=0, select bank1
  3239  01D6  081E               	movf	(158)^080h,w	;volatile
  3240  01D7  00F2               	movwf	(??_read_adc+0)+0
  3241  01D8  01F3               	clrf	(??_read_adc+0)+0+1
  3242  01D9  1283               	bcf	status, 5	;RP0=0, select bank0
  3243  01DA  1303               	bcf	status, 6	;RP1=0, select bank0
  3244  01DB  081E               	movf	(30),w	;volatile
  3245  01DC  00F4               	movwf	(??_read_adc+2)+0
  3246  01DD  01F5               	clrf	(??_read_adc+2)+0+1
  3247  01DE  0874               	movf	(??_read_adc+2)+0,w
  3248  01DF  00F5               	movwf	(??_read_adc+2)+1
  3249  01E0  01F4               	clrf	(??_read_adc+2)+0
  3250  01E1  0872               	movf	0+(??_read_adc+0)+0,w
  3251  01E2  0474               	iorwf	0+(??_read_adc+2)+0,w
  3252  01E3  00F0               	movwf	(?_read_adc)
  3253  01E4  0873               	movf	1+(??_read_adc+0)+0,w
  3254  01E5  0475               	iorwf	1+(??_read_adc+2)+0,w
  3255  01E6  00F1               	movwf	1+(?_read_adc)
  3256  01E7  29E8               	goto	l699
  3257                           	
  3258  01E8                     l5798:	
  3259                           	line	29
  3260                           	
  3261  01E8                     l699:	
  3262  01E8  0008               	return
  3263                           	opt stack 0
  3264                           GLOBAL	__end_of_read_adc
  3265  01E9                     	__end_of_read_adc:
  3266 ;; =============== function _read_adc ends ============
  3267                           
  3268                           	signat	_read_adc,4218
  3269                           	global	___awmod
  3270                           psect	text610,local,class=CODE,delta=2
  3271                           global __ptext610
  3272  02BD                     __ptext610:
  3273                           
  3274 ;; *************** function ___awmod *****************
  3275 ;; Defined at:
  3276 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;  divisor         2    0[COMMON] int 
  3279 ;;  dividend        2    2[COMMON] int 
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;  sign            1    6[COMMON] unsigned char 
  3282 ;;  counter         1    5[COMMON] unsigned char 
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  2    0[COMMON] int 
  3285 ;; Registers used:
  3286 ;;		wreg, status,2, status,0
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3292 ;;      Params:         4       0       0       0       0
  3293 ;;      Locals:         2       0       0       0       0
  3294 ;;      Temps:          1       0       0       0       0
  3295 ;;      Totals:         7       0       0       0       0
  3296 ;;Total ram usage:        7 bytes
  3297 ;; Hardware stack levels used:    1
  3298 ;; This function calls:
  3299 ;;		Nothing
  3300 ;; This function is called by:
  3301 ;;		_main
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           psect	text610
  3305                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  3306                           	line	5
  3307                           	global	__size_of___awmod
  3308  0066                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  3309                           	
  3310  02BD                     ___awmod:	
  3311                           	opt	stack 7
  3312                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3313                           	line	8
  3314                           	
  3315  02BD                     l5708:	
  3316  02BD  01F6               	clrf	(___awmod@sign)
  3317                           	line	9
  3318  02BE  1FF3               	btfss	(___awmod@dividend+1),7
  3319  02BF  2AC1               	goto	u3261
  3320  02C0  2AC2               	goto	u3260
  3321  02C1                     u3261:
  3322  02C1  2ACB               	goto	l5712
  3323  02C2                     u3260:
  3324                           	line	10
  3325                           	
  3326  02C2                     l5710:	
  3327  02C2  09F2               	comf	(___awmod@dividend),f
  3328  02C3  09F3               	comf	(___awmod@dividend+1),f
  3329  02C4  0AF2               	incf	(___awmod@dividend),f
  3330  02C5  1903               	skipnz
  3331  02C6  0AF3               	incf	(___awmod@dividend+1),f
  3332                           	line	11
  3333  02C7  01F6               	clrf	(___awmod@sign)
  3334  02C8  1403               	bsf	status,0
  3335  02C9  0DF6               	rlf	(___awmod@sign),f
  3336  02CA  2ACB               	goto	l5712
  3337                           	line	12
  3338                           	
  3339  02CB                     l3802:	
  3340                           	line	13
  3341                           	
  3342  02CB                     l5712:	
  3343  02CB  1FF1               	btfss	(___awmod@divisor+1),7
  3344  02CC  2ACE               	goto	u3271
  3345  02CD  2ACF               	goto	u3270
  3346  02CE                     u3271:
  3347  02CE  2AD5               	goto	l5716
  3348  02CF                     u3270:
  3349                           	line	14
  3350                           	
  3351  02CF                     l5714:	
  3352  02CF  09F0               	comf	(___awmod@divisor),f
  3353  02D0  09F1               	comf	(___awmod@divisor+1),f
  3354  02D1  0AF0               	incf	(___awmod@divisor),f
  3355  02D2  1903               	skipnz
  3356  02D3  0AF1               	incf	(___awmod@divisor+1),f
  3357  02D4  2AD5               	goto	l5716
  3358                           	
  3359  02D5                     l3803:	
  3360                           	line	15
  3361                           	
  3362  02D5                     l5716:	
  3363  02D5  0871               	movf	(___awmod@divisor+1),w
  3364  02D6  0470               	iorwf	(___awmod@divisor),w
  3365  02D7  1903               	skipnz
  3366  02D8  2ADA               	goto	u3281
  3367  02D9  2ADB               	goto	u3280
  3368  02DA                     u3281:
  3369  02DA  2B11               	goto	l5734
  3370  02DB                     u3280:
  3371                           	line	16
  3372                           	
  3373  02DB                     l5718:	
  3374  02DB  01F5               	clrf	(___awmod@counter)
  3375  02DC  1403               	bsf	status,0
  3376  02DD  0DF5               	rlf	(___awmod@counter),f
  3377                           	line	17
  3378  02DE  2AEB               	goto	l5724
  3379                           	
  3380  02DF                     l3806:	
  3381                           	line	18
  3382                           	
  3383  02DF                     l5720:	
  3384  02DF  3001               	movlw	01h
  3385                           	
  3386  02E0                     u3295:
  3387  02E0  1003               	clrc
  3388  02E1  0DF0               	rlf	(___awmod@divisor),f
  3389  02E2  0DF1               	rlf	(___awmod@divisor+1),f
  3390  02E3  3EFF               	addlw	-1
  3391  02E4  1D03               	skipz
  3392  02E5  2AE0               	goto	u3295
  3393                           	line	19
  3394                           	
  3395  02E6                     l5722:	
  3396  02E6  3001               	movlw	(01h)
  3397  02E7  00F4               	movwf	(??___awmod+0)+0
  3398  02E8  0874               	movf	(??___awmod+0)+0,w
  3399  02E9  07F5               	addwf	(___awmod@counter),f
  3400  02EA  2AEB               	goto	l5724
  3401                           	line	20
  3402                           	
  3403  02EB                     l3805:	
  3404                           	line	17
  3405                           	
  3406  02EB                     l5724:	
  3407  02EB  1FF1               	btfss	(___awmod@divisor+1),(15)&7
  3408  02EC  2AEE               	goto	u3301
  3409  02ED  2AEF               	goto	u3300
  3410  02EE                     u3301:
  3411  02EE  2ADF               	goto	l5720
  3412  02EF                     u3300:
  3413  02EF  2AF1               	goto	l5726
  3414                           	
  3415  02F0                     l3807:	
  3416  02F0  2AF1               	goto	l5726
  3417                           	line	21
  3418                           	
  3419  02F1                     l3808:	
  3420                           	line	22
  3421                           	
  3422  02F1                     l5726:	
  3423  02F1  0871               	movf	(___awmod@divisor+1),w
  3424  02F2  0273               	subwf	(___awmod@dividend+1),w
  3425  02F3  1D03               	skipz
  3426  02F4  2AF7               	goto	u3315
  3427  02F5  0870               	movf	(___awmod@divisor),w
  3428  02F6  0272               	subwf	(___awmod@dividend),w
  3429  02F7                     u3315:
  3430  02F7  1C03               	skipc
  3431  02F8  2AFA               	goto	u3311
  3432  02F9  2AFB               	goto	u3310
  3433  02FA                     u3311:
  3434  02FA  2B02               	goto	l5730
  3435  02FB                     u3310:
  3436                           	line	23
  3437                           	
  3438  02FB                     l5728:	
  3439  02FB  0870               	movf	(___awmod@divisor),w
  3440  02FC  02F2               	subwf	(___awmod@dividend),f
  3441  02FD  0871               	movf	(___awmod@divisor+1),w
  3442  02FE  1C03               	skipc
  3443  02FF  03F3               	decf	(___awmod@dividend+1),f
  3444  0300  02F3               	subwf	(___awmod@dividend+1),f
  3445  0301  2B02               	goto	l5730
  3446                           	
  3447  0302                     l3809:	
  3448                           	line	24
  3449                           	
  3450  0302                     l5730:	
  3451  0302  3001               	movlw	01h
  3452                           	
  3453  0303                     u3325:
  3454  0303  1003               	clrc
  3455  0304  0CF1               	rrf	(___awmod@divisor+1),f
  3456  0305  0CF0               	rrf	(___awmod@divisor),f
  3457  0306  3EFF               	addlw	-1
  3458  0307  1D03               	skipz
  3459  0308  2B03               	goto	u3325
  3460                           	line	25
  3461                           	
  3462  0309                     l5732:	
  3463  0309  3001               	movlw	low(01h)
  3464  030A  02F5               	subwf	(___awmod@counter),f
  3465  030B  1D03               	btfss	status,2
  3466  030C  2B0E               	goto	u3331
  3467  030D  2B0F               	goto	u3330
  3468  030E                     u3331:
  3469  030E  2AF1               	goto	l5726
  3470  030F                     u3330:
  3471  030F  2B11               	goto	l5734
  3472                           	
  3473  0310                     l3810:	
  3474  0310  2B11               	goto	l5734
  3475                           	line	26
  3476                           	
  3477  0311                     l3804:	
  3478                           	line	27
  3479                           	
  3480  0311                     l5734:	
  3481  0311  0876               	movf	(___awmod@sign),w
  3482  0312  1D03               	skipz
  3483  0313  2B15               	goto	u3340
  3484  0314  2B1B               	goto	l5738
  3485  0315                     u3340:
  3486                           	line	28
  3487                           	
  3488  0315                     l5736:	
  3489  0315  09F2               	comf	(___awmod@dividend),f
  3490  0316  09F3               	comf	(___awmod@dividend+1),f
  3491  0317  0AF2               	incf	(___awmod@dividend),f
  3492  0318  1903               	skipnz
  3493  0319  0AF3               	incf	(___awmod@dividend+1),f
  3494  031A  2B1B               	goto	l5738
  3495                           	
  3496  031B                     l3811:	
  3497                           	line	29
  3498                           	
  3499  031B                     l5738:	
  3500  031B  0873               	movf	(___awmod@dividend+1),w
  3501  031C  01F1               	clrf	(?___awmod+1)
  3502  031D  07F1               	addwf	(?___awmod+1)
  3503  031E  0872               	movf	(___awmod@dividend),w
  3504  031F  01F0               	clrf	(?___awmod)
  3505  0320  07F0               	addwf	(?___awmod)
  3506                           
  3507  0321  2B22               	goto	l3812
  3508                           	
  3509  0322                     l5740:	
  3510                           	line	30
  3511                           	
  3512  0322                     l3812:	
  3513  0322  0008               	return
  3514                           	opt stack 0
  3515                           GLOBAL	__end_of___awmod
  3516  0323                     	__end_of___awmod:
  3517 ;; =============== function ___awmod ends ============
  3518                           
  3519                           	signat	___awmod,8314
  3520                           	global	___awdiv
  3521                           psect	text611,local,class=CODE,delta=2
  3522                           global __ptext611
  3523  0323                     __ptext611:
  3524                           
  3525 ;; *************** function ___awdiv *****************
  3526 ;; Defined at:
  3527 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  3528 ;; Parameters:    Size  Location     Type
  3529 ;;  divisor         2    0[COMMON] int 
  3530 ;;  dividend        2    2[COMMON] int 
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;  quotient        2    7[COMMON] int 
  3533 ;;  sign            1    6[COMMON] unsigned char 
  3534 ;;  counter         1    5[COMMON] unsigned char 
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  2    0[COMMON] int 
  3537 ;; Registers used:
  3538 ;;		wreg, status,2, status,0
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3544 ;;      Params:         4       0       0       0       0
  3545 ;;      Locals:         4       0       0       0       0
  3546 ;;      Temps:          1       0       0       0       0
  3547 ;;      Totals:         9       0       0       0       0
  3548 ;;Total ram usage:        9 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; This function calls:
  3551 ;;		Nothing
  3552 ;; This function is called by:
  3553 ;;		_main
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           psect	text611
  3557                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  3558                           	line	5
  3559                           	global	__size_of___awdiv
  3560  0074                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  3561                           	
  3562  0323                     ___awdiv:	
  3563                           	opt	stack 7
  3564                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3565                           	line	9
  3566                           	
  3567  0323                     l5668:	
  3568  0323  01F6               	clrf	(___awdiv@sign)
  3569                           	line	10
  3570  0324  1FF1               	btfss	(___awdiv@divisor+1),7
  3571  0325  2B27               	goto	u3161
  3572  0326  2B28               	goto	u3160
  3573  0327                     u3161:
  3574  0327  2B31               	goto	l5672
  3575  0328                     u3160:
  3576                           	line	11
  3577                           	
  3578  0328                     l5670:	
  3579  0328  09F0               	comf	(___awdiv@divisor),f
  3580  0329  09F1               	comf	(___awdiv@divisor+1),f
  3581  032A  0AF0               	incf	(___awdiv@divisor),f
  3582  032B  1903               	skipnz
  3583  032C  0AF1               	incf	(___awdiv@divisor+1),f
  3584                           	line	12
  3585  032D  01F6               	clrf	(___awdiv@sign)
  3586  032E  1403               	bsf	status,0
  3587  032F  0DF6               	rlf	(___awdiv@sign),f
  3588  0330  2B31               	goto	l5672
  3589                           	line	13
  3590                           	
  3591  0331                     l3734:	
  3592                           	line	14
  3593                           	
  3594  0331                     l5672:	
  3595  0331  1FF3               	btfss	(___awdiv@dividend+1),7
  3596  0332  2B34               	goto	u3171
  3597  0333  2B35               	goto	u3170
  3598  0334                     u3171:
  3599  0334  2B3F               	goto	l5678
  3600  0335                     u3170:
  3601                           	line	15
  3602                           	
  3603  0335                     l5674:	
  3604  0335  09F2               	comf	(___awdiv@dividend),f
  3605  0336  09F3               	comf	(___awdiv@dividend+1),f
  3606  0337  0AF2               	incf	(___awdiv@dividend),f
  3607  0338  1903               	skipnz
  3608  0339  0AF3               	incf	(___awdiv@dividend+1),f
  3609                           	line	16
  3610                           	
  3611  033A                     l5676:	
  3612  033A  3001               	movlw	(01h)
  3613  033B  00F4               	movwf	(??___awdiv+0)+0
  3614  033C  0874               	movf	(??___awdiv+0)+0,w
  3615  033D  06F6               	xorwf	(___awdiv@sign),f
  3616  033E  2B3F               	goto	l5678
  3617                           	line	17
  3618                           	
  3619  033F                     l3735:	
  3620                           	line	18
  3621                           	
  3622  033F                     l5678:	
  3623  033F  01F7               	clrf	(___awdiv@quotient)
  3624  0340  01F8               	clrf	(___awdiv@quotient+1)
  3625                           	line	19
  3626                           	
  3627  0341                     l5680:	
  3628  0341  0871               	movf	(___awdiv@divisor+1),w
  3629  0342  0470               	iorwf	(___awdiv@divisor),w
  3630  0343  1903               	skipnz
  3631  0344  2B46               	goto	u3181
  3632  0345  2B47               	goto	u3180
  3633  0346                     u3181:
  3634  0346  2B85               	goto	l5700
  3635  0347                     u3180:
  3636                           	line	20
  3637                           	
  3638  0347                     l5682:	
  3639  0347  01F5               	clrf	(___awdiv@counter)
  3640  0348  1403               	bsf	status,0
  3641  0349  0DF5               	rlf	(___awdiv@counter),f
  3642                           	line	21
  3643  034A  2B57               	goto	l5688
  3644                           	
  3645  034B                     l3738:	
  3646                           	line	22
  3647                           	
  3648  034B                     l5684:	
  3649  034B  3001               	movlw	01h
  3650                           	
  3651  034C                     u3195:
  3652  034C  1003               	clrc
  3653  034D  0DF0               	rlf	(___awdiv@divisor),f
  3654  034E  0DF1               	rlf	(___awdiv@divisor+1),f
  3655  034F  3EFF               	addlw	-1
  3656  0350  1D03               	skipz
  3657  0351  2B4C               	goto	u3195
  3658                           	line	23
  3659                           	
  3660  0352                     l5686:	
  3661  0352  3001               	movlw	(01h)
  3662  0353  00F4               	movwf	(??___awdiv+0)+0
  3663  0354  0874               	movf	(??___awdiv+0)+0,w
  3664  0355  07F5               	addwf	(___awdiv@counter),f
  3665  0356  2B57               	goto	l5688
  3666                           	line	24
  3667                           	
  3668  0357                     l3737:	
  3669                           	line	21
  3670                           	
  3671  0357                     l5688:	
  3672  0357  1FF1               	btfss	(___awdiv@divisor+1),(15)&7
  3673  0358  2B5A               	goto	u3201
  3674  0359  2B5B               	goto	u3200
  3675  035A                     u3201:
  3676  035A  2B4B               	goto	l5684
  3677  035B                     u3200:
  3678  035B  2B5D               	goto	l5690
  3679                           	
  3680  035C                     l3739:	
  3681  035C  2B5D               	goto	l5690
  3682                           	line	25
  3683                           	
  3684  035D                     l3740:	
  3685                           	line	26
  3686                           	
  3687  035D                     l5690:	
  3688  035D  3001               	movlw	01h
  3689                           	
  3690  035E                     u3215:
  3691  035E  1003               	clrc
  3692  035F  0DF7               	rlf	(___awdiv@quotient),f
  3693  0360  0DF8               	rlf	(___awdiv@quotient+1),f
  3694  0361  3EFF               	addlw	-1
  3695  0362  1D03               	skipz
  3696  0363  2B5E               	goto	u3215
  3697                           	line	27
  3698  0364  0871               	movf	(___awdiv@divisor+1),w
  3699  0365  0273               	subwf	(___awdiv@dividend+1),w
  3700  0366  1D03               	skipz
  3701  0367  2B6A               	goto	u3225
  3702  0368  0870               	movf	(___awdiv@divisor),w
  3703  0369  0272               	subwf	(___awdiv@dividend),w
  3704  036A                     u3225:
  3705  036A  1C03               	skipc
  3706  036B  2B6D               	goto	u3221
  3707  036C  2B6E               	goto	u3220
  3708  036D                     u3221:
  3709  036D  2B76               	goto	l5696
  3710  036E                     u3220:
  3711                           	line	28
  3712                           	
  3713  036E                     l5692:	
  3714  036E  0870               	movf	(___awdiv@divisor),w
  3715  036F  02F2               	subwf	(___awdiv@dividend),f
  3716  0370  0871               	movf	(___awdiv@divisor+1),w
  3717  0371  1C03               	skipc
  3718  0372  03F3               	decf	(___awdiv@dividend+1),f
  3719  0373  02F3               	subwf	(___awdiv@dividend+1),f
  3720                           	line	29
  3721                           	
  3722  0374                     l5694:	
  3723  0374  1477               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  3724  0375  2B76               	goto	l5696
  3725                           	line	30
  3726                           	
  3727  0376                     l3741:	
  3728                           	line	31
  3729                           	
  3730  0376                     l5696:	
  3731  0376  3001               	movlw	01h
  3732                           	
  3733  0377                     u3235:
  3734  0377  1003               	clrc
  3735  0378  0CF1               	rrf	(___awdiv@divisor+1),f
  3736  0379  0CF0               	rrf	(___awdiv@divisor),f
  3737  037A  3EFF               	addlw	-1
  3738  037B  1D03               	skipz
  3739  037C  2B77               	goto	u3235
  3740                           	line	32
  3741                           	
  3742  037D                     l5698:	
  3743  037D  3001               	movlw	low(01h)
  3744  037E  02F5               	subwf	(___awdiv@counter),f
  3745  037F  1D03               	btfss	status,2
  3746  0380  2B82               	goto	u3241
  3747  0381  2B83               	goto	u3240
  3748  0382                     u3241:
  3749  0382  2B5D               	goto	l5690
  3750  0383                     u3240:
  3751  0383  2B85               	goto	l5700
  3752                           	
  3753  0384                     l3742:	
  3754  0384  2B85               	goto	l5700
  3755                           	line	33
  3756                           	
  3757  0385                     l3736:	
  3758                           	line	34
  3759                           	
  3760  0385                     l5700:	
  3761  0385  0876               	movf	(___awdiv@sign),w
  3762  0386  1D03               	skipz
  3763  0387  2B89               	goto	u3250
  3764  0388  2B8F               	goto	l5704
  3765  0389                     u3250:
  3766                           	line	35
  3767                           	
  3768  0389                     l5702:	
  3769  0389  09F7               	comf	(___awdiv@quotient),f
  3770  038A  09F8               	comf	(___awdiv@quotient+1),f
  3771  038B  0AF7               	incf	(___awdiv@quotient),f
  3772  038C  1903               	skipnz
  3773  038D  0AF8               	incf	(___awdiv@quotient+1),f
  3774  038E  2B8F               	goto	l5704
  3775                           	
  3776  038F                     l3743:	
  3777                           	line	36
  3778                           	
  3779  038F                     l5704:	
  3780  038F  0878               	movf	(___awdiv@quotient+1),w
  3781  0390  01F1               	clrf	(?___awdiv+1)
  3782  0391  07F1               	addwf	(?___awdiv+1)
  3783  0392  0877               	movf	(___awdiv@quotient),w
  3784  0393  01F0               	clrf	(?___awdiv)
  3785  0394  07F0               	addwf	(?___awdiv)
  3786                           
  3787  0395  2B96               	goto	l3744
  3788                           	
  3789  0396                     l5706:	
  3790                           	line	37
  3791                           	
  3792  0396                     l3744:	
  3793  0396  0008               	return
  3794                           	opt stack 0
  3795                           GLOBAL	__end_of___awdiv
  3796  0397                     	__end_of___awdiv:
  3797 ;; =============== function ___awdiv ends ============
  3798                           
  3799                           	signat	___awdiv,8314
  3800                           	global	___fttol
  3801                           psect	text612,local,class=CODE,delta=2
  3802                           global __ptext612
  3803  0412                     __ptext612:
  3804                           
  3805 ;; *************** function ___fttol *****************
  3806 ;; Defined at:
  3807 ;;		line 45 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\fttol.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;  f1              3    8[COMMON] float 
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;  lval            4    5[BANK0 ] unsigned long 
  3812 ;;  exp1            1    9[BANK0 ] unsigned char 
  3813 ;;  sign1           1    4[BANK0 ] unsigned char 
  3814 ;; Return value:  Size  Location     Type
  3815 ;;                  4    8[COMMON] long 
  3816 ;; Registers used:
  3817 ;;		wreg, status,2, status,0
  3818 ;; Tracked objects:
  3819 ;;		On entry : 0/0
  3820 ;;		On exit  : 0/0
  3821 ;;		Unchanged: 0/0
  3822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3823 ;;      Params:         4       0       0       0       0
  3824 ;;      Locals:         0       6       0       0       0
  3825 ;;      Temps:          0       4       0       0       0
  3826 ;;      Totals:         4      10       0       0       0
  3827 ;;Total ram usage:       14 bytes
  3828 ;; Hardware stack levels used:    1
  3829 ;; This function calls:
  3830 ;;		Nothing
  3831 ;; This function is called by:
  3832 ;;		_main
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           psect	text612
  3836                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\fttol.c"
  3837                           	line	45
  3838                           	global	__size_of___fttol
  3839  00A6                     	__size_of___fttol	equ	__end_of___fttol-___fttol
  3840                           	
  3841  0412                     ___fttol:	
  3842                           	opt	stack 7
  3843                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3844                           	line	49
  3845                           	
  3846  0412                     l5604:	
  3847  0412  0878               	movf	(___fttol@f1),w
  3848  0413  1283               	bcf	status, 5	;RP0=0, select bank0
  3849  0414  1303               	bcf	status, 6	;RP1=0, select bank0
  3850  0415  00A0               	movwf	((??___fttol+0)+0)
  3851  0416  0879               	movf	(___fttol@f1+1),w
  3852  0417  00A1               	movwf	((??___fttol+0)+0+1)
  3853  0418  087A               	movf	(___fttol@f1+2),w
  3854  0419  00A2               	movwf	((??___fttol+0)+0+2)
  3855  041A  1003               	clrc
  3856  041B  0D21               	rlf	(??___fttol+0)+1,w
  3857  041C  0D22               	rlf	(??___fttol+0)+2,w
  3858  041D  00A3               	movwf	(??___fttol+3)+0
  3859  041E  0823               	movf	(??___fttol+3)+0,w
  3860  041F  00A9               	movwf	(___fttol@exp1)
  3861  0420  08A9               	movf	((___fttol@exp1)),f
  3862  0421  1D03               	skipz
  3863  0422  2C24               	goto	u3041
  3864  0423  2C25               	goto	u3040
  3865  0424                     u3041:
  3866  0424  2C2F               	goto	l5610
  3867  0425                     u3040:
  3868                           	line	50
  3869                           	
  3870  0425                     l5606:	
  3871  0425  3000               	movlw	0
  3872  0426  00FB               	movwf	(?___fttol+3)
  3873  0427  3000               	movlw	0
  3874  0428  00FA               	movwf	(?___fttol+2)
  3875  0429  3000               	movlw	0
  3876  042A  00F9               	movwf	(?___fttol+1)
  3877  042B  3000               	movlw	0
  3878  042C  00F8               	movwf	(?___fttol)
  3879                           
  3880  042D  2CB7               	goto	l3704
  3881                           	
  3882  042E                     l5608:	
  3883  042E  2CB7               	goto	l3704
  3884                           	
  3885  042F                     l3703:	
  3886                           	line	51
  3887                           	
  3888  042F                     l5610:	
  3889  042F  0878               	movf	(___fttol@f1),w
  3890  0430  00A0               	movwf	((??___fttol+0)+0)
  3891  0431  0879               	movf	(___fttol@f1+1),w
  3892  0432  00A1               	movwf	((??___fttol+0)+0+1)
  3893  0433  087A               	movf	(___fttol@f1+2),w
  3894  0434  00A2               	movwf	((??___fttol+0)+0+2)
  3895  0435  3017               	movlw	017h
  3896  0436                     u3055:
  3897  0436  1003               	clrc
  3898  0437  0CA2               	rrf	(??___fttol+0)+2,f
  3899  0438  0CA1               	rrf	(??___fttol+0)+1,f
  3900  0439  0CA0               	rrf	(??___fttol+0)+0,f
  3901  043A                     u3050:
  3902  043A  3EFF               	addlw	-1
  3903  043B  1D03               	skipz
  3904  043C  2C36               	goto	u3055
  3905  043D  0820               	movf	0+(??___fttol+0)+0,w
  3906  043E  00A3               	movwf	(??___fttol+3)+0
  3907  043F  0823               	movf	(??___fttol+3)+0,w
  3908  0440  00A4               	movwf	(___fttol@sign1)
  3909                           	line	52
  3910                           	
  3911  0441                     l5612:	
  3912  0441  17F9               	bsf	(___fttol@f1)+(15/8),(15)&7
  3913                           	line	53
  3914                           	
  3915  0442                     l5614:	
  3916  0442  30FF               	movlw	0FFh
  3917  0443  05F8               	andwf	(___fttol@f1),f
  3918  0444  30FF               	movlw	0FFh
  3919  0445  05F9               	andwf	(___fttol@f1+1),f
  3920  0446  3000               	movlw	0
  3921  0447  05FA               	andwf	(___fttol@f1+2),f
  3922                           	line	54
  3923                           	
  3924  0448                     l5616:	
  3925  0448  0878               	movf	(___fttol@f1),w
  3926  0449  00A5               	movwf	(___fttol@lval)
  3927  044A  0879               	movf	(___fttol@f1+1),w
  3928  044B  00A6               	movwf	((___fttol@lval))+1
  3929  044C  087A               	movf	(___fttol@f1+2),w
  3930  044D  00A7               	movwf	((___fttol@lval))+2
  3931  044E  01A8               	clrf	((___fttol@lval))+3
  3932                           	line	55
  3933                           	
  3934  044F                     l5618:	
  3935  044F  308E               	movlw	low(08Eh)
  3936  0450  02A9               	subwf	(___fttol@exp1),f
  3937                           	line	56
  3938                           	
  3939  0451                     l5620:	
  3940  0451  1FA9               	btfss	(___fttol@exp1),7
  3941  0452  2C54               	goto	u3061
  3942  0453  2C55               	goto	u3060
  3943  0454                     u3061:
  3944  0454  2C7A               	goto	l5630
  3945  0455                     u3060:
  3946                           	line	57
  3947                           	
  3948  0455                     l5622:	
  3949  0455  0829               	movf	(___fttol@exp1),w
  3950  0456  3A80               	xorlw	80h
  3951  0457  3E8F               	addlw	-((-15)^80h)
  3952  0458  1803               	skipnc
  3953  0459  2C5B               	goto	u3071
  3954  045A  2C5C               	goto	u3070
  3955  045B                     u3071:
  3956  045B  2C67               	goto	l5628
  3957  045C                     u3070:
  3958                           	line	58
  3959                           	
  3960  045C                     l5624:	
  3961  045C  3000               	movlw	0
  3962  045D  00FB               	movwf	(?___fttol+3)
  3963  045E  3000               	movlw	0
  3964  045F  00FA               	movwf	(?___fttol+2)
  3965  0460  3000               	movlw	0
  3966  0461  00F9               	movwf	(?___fttol+1)
  3967  0462  3000               	movlw	0
  3968  0463  00F8               	movwf	(?___fttol)
  3969                           
  3970  0464  2CB7               	goto	l3704
  3971                           	
  3972  0465                     l5626:	
  3973  0465  2CB7               	goto	l3704
  3974                           	
  3975  0466                     l3706:	
  3976  0466  2C67               	goto	l5628
  3977                           	line	59
  3978                           	
  3979  0467                     l3707:	
  3980                           	line	60
  3981                           	
  3982  0467                     l5628:	
  3983  0467  3001               	movlw	01h
  3984  0468                     u3085:
  3985  0468  1003               	clrc
  3986  0469  0CA8               	rrf	(___fttol@lval+3),f
  3987  046A  0CA7               	rrf	(___fttol@lval+2),f
  3988  046B  0CA6               	rrf	(___fttol@lval+1),f
  3989  046C  0CA5               	rrf	(___fttol@lval),f
  3990  046D  3EFF               	addlw	-1
  3991  046E  1D03               	skipz
  3992  046F  2C68               	goto	u3085
  3993                           
  3994                           	line	61
  3995  0470  3001               	movlw	(01h)
  3996  0471  00A0               	movwf	(??___fttol+0)+0
  3997  0472  0820               	movf	(??___fttol+0)+0,w
  3998  0473  07A9               	addwf	(___fttol@exp1),f
  3999  0474  1D03               	btfss	status,2
  4000  0475  2C77               	goto	u3091
  4001  0476  2C78               	goto	u3090
  4002  0477                     u3091:
  4003  0477  2C67               	goto	l5628
  4004  0478                     u3090:
  4005  0478  2C9E               	goto	l5640
  4006                           	
  4007  0479                     l3708:	
  4008                           	line	62
  4009  0479  2C9E               	goto	l5640
  4010                           	
  4011  047A                     l3705:	
  4012                           	line	63
  4013                           	
  4014  047A                     l5630:	
  4015  047A  3018               	movlw	(018h)
  4016  047B  0229               	subwf	(___fttol@exp1),w
  4017  047C  1C03               	skipc
  4018  047D  2C7F               	goto	u3101
  4019  047E  2C80               	goto	u3100
  4020  047F                     u3101:
  4021  047F  2C97               	goto	l5638
  4022  0480                     u3100:
  4023                           	line	64
  4024                           	
  4025  0480                     l5632:	
  4026  0480  3000               	movlw	0
  4027  0481  00FB               	movwf	(?___fttol+3)
  4028  0482  3000               	movlw	0
  4029  0483  00FA               	movwf	(?___fttol+2)
  4030  0484  3000               	movlw	0
  4031  0485  00F9               	movwf	(?___fttol+1)
  4032  0486  3000               	movlw	0
  4033  0487  00F8               	movwf	(?___fttol)
  4034                           
  4035  0488  2CB7               	goto	l3704
  4036                           	
  4037  0489                     l5634:	
  4038  0489  2CB7               	goto	l3704
  4039                           	
  4040  048A                     l3710:	
  4041                           	line	65
  4042  048A  2C97               	goto	l5638
  4043                           	
  4044  048B                     l3712:	
  4045                           	line	66
  4046                           	
  4047  048B                     l5636:	
  4048  048B  3001               	movlw	01h
  4049  048C  00A0               	movwf	(??___fttol+0)+0
  4050  048D                     u3115:
  4051  048D  1003               	clrc
  4052  048E  0DA5               	rlf	(___fttol@lval),f
  4053  048F  0DA6               	rlf	(___fttol@lval+1),f
  4054  0490  0DA7               	rlf	(___fttol@lval+2),f
  4055  0491  0DA8               	rlf	(___fttol@lval+3),f
  4056  0492  0BA0               	decfsz	(??___fttol+0)+0
  4057  0493  2C8D               	goto	u3115
  4058                           	line	67
  4059  0494  3001               	movlw	low(01h)
  4060  0495  02A9               	subwf	(___fttol@exp1),f
  4061  0496  2C97               	goto	l5638
  4062                           	line	68
  4063                           	
  4064  0497                     l3711:	
  4065                           	line	65
  4066                           	
  4067  0497                     l5638:	
  4068  0497  08A9               	movf	(___fttol@exp1),f
  4069  0498  1D03               	skipz
  4070  0499  2C9B               	goto	u3121
  4071  049A  2C9C               	goto	u3120
  4072  049B                     u3121:
  4073  049B  2C8B               	goto	l5636
  4074  049C                     u3120:
  4075  049C  2C9E               	goto	l5640
  4076                           	
  4077  049D                     l3713:	
  4078  049D  2C9E               	goto	l5640
  4079                           	line	69
  4080                           	
  4081  049E                     l3709:	
  4082                           	line	70
  4083                           	
  4084  049E                     l5640:	
  4085  049E  0824               	movf	(___fttol@sign1),w
  4086  049F  1D03               	skipz
  4087  04A0  2CA2               	goto	u3130
  4088  04A1  2CAE               	goto	l5644
  4089  04A2                     u3130:
  4090                           	line	71
  4091                           	
  4092  04A2                     l5642:	
  4093  04A2  09A5               	comf	(___fttol@lval),f
  4094  04A3  09A6               	comf	(___fttol@lval+1),f
  4095  04A4  09A7               	comf	(___fttol@lval+2),f
  4096  04A5  09A8               	comf	(___fttol@lval+3),f
  4097  04A6  0AA5               	incf	(___fttol@lval),f
  4098  04A7  1903               	skipnz
  4099  04A8  0AA6               	incf	(___fttol@lval+1),f
  4100  04A9  1903               	skipnz
  4101  04AA  0AA7               	incf	(___fttol@lval+2),f
  4102  04AB  1903               	skipnz
  4103  04AC  0AA8               	incf	(___fttol@lval+3),f
  4104  04AD  2CAE               	goto	l5644
  4105                           	
  4106  04AE                     l3714:	
  4107                           	line	72
  4108                           	
  4109  04AE                     l5644:	
  4110  04AE  0828               	movf	(___fttol@lval+3),w
  4111  04AF  00FB               	movwf	(?___fttol+3)
  4112  04B0  0827               	movf	(___fttol@lval+2),w
  4113  04B1  00FA               	movwf	(?___fttol+2)
  4114  04B2  0826               	movf	(___fttol@lval+1),w
  4115  04B3  00F9               	movwf	(?___fttol+1)
  4116  04B4  0825               	movf	(___fttol@lval),w
  4117  04B5  00F8               	movwf	(?___fttol)
  4118                           
  4119  04B6  2CB7               	goto	l3704
  4120                           	
  4121  04B7                     l5646:	
  4122                           	line	73
  4123                           	
  4124  04B7                     l3704:	
  4125  04B7  0008               	return
  4126                           	opt stack 0
  4127                           GLOBAL	__end_of___fttol
  4128  04B8                     	__end_of___fttol:
  4129 ;; =============== function ___fttol ends ============
  4130                           
  4131                           	signat	___fttol,4220
  4132                           	global	___ftpack
  4133                           psect	text613,local,class=CODE,delta=2
  4134                           global __ptext613
  4135  0397                     __ptext613:
  4136                           
  4137 ;; *************** function ___ftpack *****************
  4138 ;; Defined at:
  4139 ;;		line 63 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\float.c"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;  arg             3    0[COMMON] unsigned um
  4142 ;;  exp             1    3[COMMON] unsigned char 
  4143 ;;  sign            1    4[COMMON] unsigned char 
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;		None
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  3    0[COMMON] float 
  4148 ;; Registers used:
  4149 ;;		wreg, status,2, status,0
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4155 ;;      Params:         5       0       0       0       0
  4156 ;;      Locals:         0       0       0       0       0
  4157 ;;      Temps:          3       0       0       0       0
  4158 ;;      Totals:         8       0       0       0       0
  4159 ;;Total ram usage:        8 bytes
  4160 ;; Hardware stack levels used:    1
  4161 ;; This function calls:
  4162 ;;		Nothing
  4163 ;; This function is called by:
  4164 ;;		___ftmul
  4165 ;;		___lwtoft
  4166 ;;		___ftadd
  4167 ;;		___ftdiv
  4168 ;;		___lbtoft
  4169 ;;		___abtoft
  4170 ;;		___awtoft
  4171 ;;		___altoft
  4172 ;;		___lltoft
  4173 ;;		___attoft
  4174 ;;		___lttoft
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           psect	text613
  4178                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\float.c"
  4179                           	line	63
  4180                           	global	__size_of___ftpack
  4181  007B                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
  4182                           	
  4183  0397                     ___ftpack:	
  4184                           	opt	stack 6
  4185                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4186                           	line	64
  4187                           	
  4188  0397                     l5530:	
  4189  0397  0873               	movf	(___ftpack@exp),w
  4190  0398  1D03               	skipz
  4191  0399  2B9B               	goto	u2850
  4192  039A  2BA3               	goto	l5534
  4193  039B                     u2850:
  4194                           	
  4195  039B                     l5532:	
  4196  039B  0872               	movf	(___ftpack@arg+2),w
  4197  039C  0471               	iorwf	(___ftpack@arg+1),w
  4198  039D  0470               	iorwf	(___ftpack@arg),w
  4199  039E  1D03               	skipz
  4200  039F  2BA1               	goto	u2861
  4201  03A0  2BA2               	goto	u2860
  4202  03A1                     u2861:
  4203  03A1  2BB9               	goto	l5540
  4204  03A2                     u2860:
  4205  03A2  2BA3               	goto	l5534
  4206                           	
  4207  03A3                     l3928:	
  4208                           	line	65
  4209                           	
  4210  03A3                     l5534:	
  4211  03A3  3000               	movlw	0x0
  4212  03A4  00F0               	movwf	(?___ftpack)
  4213  03A5  3000               	movlw	0x0
  4214  03A6  00F1               	movwf	(?___ftpack+1)
  4215  03A7  3000               	movlw	0x0
  4216  03A8  00F2               	movwf	(?___ftpack+2)
  4217  03A9  2C11               	goto	l3929
  4218                           	
  4219  03AA                     l5536:	
  4220  03AA  2C11               	goto	l3929
  4221                           	
  4222  03AB                     l3926:	
  4223                           	line	66
  4224  03AB  2BB9               	goto	l5540
  4225                           	
  4226  03AC                     l3931:	
  4227                           	line	67
  4228                           	
  4229  03AC                     l5538:	
  4230  03AC  3001               	movlw	(01h)
  4231  03AD  00F5               	movwf	(??___ftpack+0)+0
  4232  03AE  0875               	movf	(??___ftpack+0)+0,w
  4233  03AF  07F3               	addwf	(___ftpack@exp),f
  4234                           	line	68
  4235  03B0  3001               	movlw	01h
  4236  03B1                     u2875:
  4237  03B1  1003               	clrc
  4238  03B2  0CF2               	rrf	(___ftpack@arg+2),f
  4239  03B3  0CF1               	rrf	(___ftpack@arg+1),f
  4240  03B4  0CF0               	rrf	(___ftpack@arg),f
  4241  03B5  3EFF               	addlw	-1
  4242  03B6  1D03               	skipz
  4243  03B7  2BB1               	goto	u2875
  4244                           
  4245  03B8  2BB9               	goto	l5540
  4246                           	line	69
  4247                           	
  4248  03B9                     l3930:	
  4249                           	line	66
  4250                           	
  4251  03B9                     l5540:	
  4252  03B9  30FE               	movlw	low highword(0FE0000h)
  4253  03BA  0572               	andwf	(___ftpack@arg+2),w
  4254  03BB  1D03               	btfss	status,2
  4255  03BC  2BBE               	goto	u2881
  4256  03BD  2BBF               	goto	u2880
  4257  03BE                     u2881:
  4258  03BE  2BAC               	goto	l5538
  4259  03BF                     u2880:
  4260  03BF  2BD7               	goto	l3933
  4261                           	
  4262  03C0                     l3932:	
  4263                           	line	70
  4264  03C0  2BD7               	goto	l3933
  4265                           	
  4266  03C1                     l3934:	
  4267                           	line	71
  4268                           	
  4269  03C1                     l5542:	
  4270  03C1  3001               	movlw	(01h)
  4271  03C2  00F5               	movwf	(??___ftpack+0)+0
  4272  03C3  0875               	movf	(??___ftpack+0)+0,w
  4273  03C4  07F3               	addwf	(___ftpack@exp),f
  4274                           	line	72
  4275                           	
  4276  03C5                     l5544:	
  4277  03C5  3001               	movlw	01h
  4278  03C6  07F0               	addwf	(___ftpack@arg),f
  4279  03C7  3000               	movlw	0
  4280  03C8  1803               	skipnc
  4281  03C9  3001               movlw 1
  4282  03CA  07F1               	addwf	(___ftpack@arg+1),f
  4283  03CB  3000               	movlw	0
  4284  03CC  1803               	skipnc
  4285  03CD  3001               movlw 1
  4286  03CE  07F2               	addwf	(___ftpack@arg+2),f
  4287                           	line	73
  4288                           	
  4289  03CF                     l5546:	
  4290  03CF  3001               	movlw	01h
  4291  03D0                     u2895:
  4292  03D0  1003               	clrc
  4293  03D1  0CF2               	rrf	(___ftpack@arg+2),f
  4294  03D2  0CF1               	rrf	(___ftpack@arg+1),f
  4295  03D3  0CF0               	rrf	(___ftpack@arg),f
  4296  03D4  3EFF               	addlw	-1
  4297  03D5  1D03               	skipz
  4298  03D6  2BD0               	goto	u2895
  4299                           
  4300                           	line	74
  4301                           	
  4302  03D7                     l3933:	
  4303                           	line	70
  4304  03D7  30FF               	movlw	low highword(0FF0000h)
  4305  03D8  0572               	andwf	(___ftpack@arg+2),w
  4306  03D9  1D03               	btfss	status,2
  4307  03DA  2BDC               	goto	u2901
  4308  03DB  2BDD               	goto	u2900
  4309  03DC                     u2901:
  4310  03DC  2BC1               	goto	l5542
  4311  03DD                     u2900:
  4312  03DD  2BEA               	goto	l5550
  4313                           	
  4314  03DE                     l3935:	
  4315                           	line	75
  4316  03DE  2BEA               	goto	l5550
  4317                           	
  4318  03DF                     l3937:	
  4319                           	line	76
  4320                           	
  4321  03DF                     l5548:	
  4322  03DF  3001               	movlw	low(01h)
  4323  03E0  02F3               	subwf	(___ftpack@exp),f
  4324                           	line	77
  4325  03E1  3001               	movlw	01h
  4326  03E2                     u2915:
  4327  03E2  1003               	clrc
  4328  03E3  0DF0               	rlf	(___ftpack@arg),f
  4329  03E4  0DF1               	rlf	(___ftpack@arg+1),f
  4330  03E5  0DF2               	rlf	(___ftpack@arg+2),f
  4331  03E6  3EFF               	addlw	-1
  4332  03E7  1D03               	skipz
  4333  03E8  2BE2               	goto	u2915
  4334  03E9  2BEA               	goto	l5550
  4335                           	line	78
  4336                           	
  4337  03EA                     l3936:	
  4338                           	line	75
  4339                           	
  4340  03EA                     l5550:	
  4341  03EA  1FF1               	btfss	(___ftpack@arg+1),(15)&7
  4342  03EB  2BED               	goto	u2921
  4343  03EC  2BEE               	goto	u2920
  4344  03ED                     u2921:
  4345  03ED  2BDF               	goto	l5548
  4346  03EE                     u2920:
  4347                           	
  4348  03EE                     l3938:	
  4349                           	line	79
  4350  03EE  1873               	btfsc	(___ftpack@exp),(0)&7
  4351  03EF  2BF1               	goto	u2931
  4352  03F0  2BF2               	goto	u2930
  4353  03F1                     u2931:
  4354  03F1  2BF8               	goto	l3939
  4355  03F2                     u2930:
  4356                           	line	80
  4357                           	
  4358  03F2                     l5552:	
  4359  03F2  30FF               	movlw	0FFh
  4360  03F3  05F0               	andwf	(___ftpack@arg),f
  4361  03F4  307F               	movlw	07Fh
  4362  03F5  05F1               	andwf	(___ftpack@arg+1),f
  4363  03F6  30FF               	movlw	0FFh
  4364  03F7  05F2               	andwf	(___ftpack@arg+2),f
  4365                           	
  4366  03F8                     l3939:	
  4367                           	line	81
  4368  03F8  1003               	clrc
  4369  03F9  0CF3               	rrf	(___ftpack@exp),f
  4370                           
  4371                           	line	82
  4372                           	
  4373  03FA                     l5554:	
  4374  03FA  0873               	movf	(___ftpack@exp),w
  4375  03FB  00F5               	movwf	((??___ftpack+0)+0)
  4376  03FC  01F6               	clrf	((??___ftpack+0)+0+1)
  4377  03FD  01F7               	clrf	((??___ftpack+0)+0+2)
  4378  03FE  3010               	movlw	010h
  4379  03FF                     u2945:
  4380  03FF  1003               	clrc
  4381  0400  0DF5               	rlf	(??___ftpack+0)+0,f
  4382  0401  0DF6               	rlf	(??___ftpack+0)+1,f
  4383  0402  0DF7               	rlf	(??___ftpack+0)+2,f
  4384  0403                     u2940:
  4385  0403  3EFF               	addlw	-1
  4386  0404  1D03               	skipz
  4387  0405  2BFF               	goto	u2945
  4388  0406  0875               	movf	0+(??___ftpack+0)+0,w
  4389  0407  04F0               	iorwf	(___ftpack@arg),f
  4390  0408  0876               	movf	1+(??___ftpack+0)+0,w
  4391  0409  04F1               	iorwf	(___ftpack@arg+1),f
  4392  040A  0877               	movf	2+(??___ftpack+0)+0,w
  4393  040B  04F2               	iorwf	(___ftpack@arg+2),f
  4394                           	line	83
  4395                           	
  4396  040C                     l5556:	
  4397  040C  0874               	movf	(___ftpack@sign),w
  4398  040D  1D03               	skipz
  4399  040E  2C10               	goto	u2950
  4400  040F  2C11               	goto	l3940
  4401  0410                     u2950:
  4402                           	line	84
  4403                           	
  4404  0410                     l5558:	
  4405  0410  17F2               	bsf	(___ftpack@arg)+(23/8),(23)&7
  4406                           	
  4407  0411                     l3940:	
  4408                           	line	85
  4409                           	line	86
  4410                           	
  4411  0411                     l3929:	
  4412  0411  0008               	return
  4413                           	opt stack 0
  4414                           GLOBAL	__end_of___ftpack
  4415  0412                     	__end_of___ftpack:
  4416 ;; =============== function ___ftpack ends ============
  4417                           
  4418                           	signat	___ftpack,12411
  4419                           	global	___bmul
  4420                           psect	text614,local,class=CODE,delta=2
  4421                           global __ptext614
  4422  0145                     __ptext614:
  4423                           
  4424 ;; *************** function ___bmul *****************
  4425 ;; Defined at:
  4426 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\bmul.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;  multiplier      1    wreg     unsigned char 
  4429 ;;  multiplicand    1    0[COMMON] unsigned char 
  4430 ;; Auto vars:     Size  Location     Type
  4431 ;;  multiplier      1    3[COMMON] unsigned char 
  4432 ;;  product         1    2[COMMON] unsigned char 
  4433 ;; Return value:  Size  Location     Type
  4434 ;;                  1    wreg      unsigned char 
  4435 ;; Registers used:
  4436 ;;		wreg, status,2, status,0
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4442 ;;      Params:         1       0       0       0       0
  4443 ;;      Locals:         2       0       0       0       0
  4444 ;;      Temps:          1       0       0       0       0
  4445 ;;      Totals:         4       0       0       0       0
  4446 ;;Total ram usage:        4 bytes
  4447 ;; Hardware stack levels used:    1
  4448 ;; This function calls:
  4449 ;;		Nothing
  4450 ;; This function is called by:
  4451 ;;		_main
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           psect	text614
  4455                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\bmul.c"
  4456                           	line	3
  4457                           	global	__size_of___bmul
  4458  0018                     	__size_of___bmul	equ	__end_of___bmul-___bmul
  4459                           	
  4460  0145                     ___bmul:	
  4461                           	opt	stack 7
  4462                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4463                           ;___bmul@multiplier stored from wreg
  4464  0145  00F3               	movwf	(___bmul@multiplier)
  4465                           	line	4
  4466                           	
  4467  0146                     l5446:	
  4468  0146  01F2               	clrf	(___bmul@product)
  4469                           	line	6
  4470                           	
  4471  0147                     l3588:	
  4472                           	line	7
  4473  0147  1C73               	btfss	(___bmul@multiplier),(0)&7
  4474  0148  294A               	goto	u2591
  4475  0149  294B               	goto	u2590
  4476  014A                     u2591:
  4477  014A  2950               	goto	l5450
  4478  014B                     u2590:
  4479                           	line	8
  4480                           	
  4481  014B                     l5448:	
  4482  014B  0870               	movf	(___bmul@multiplicand),w
  4483  014C  00F1               	movwf	(??___bmul+0)+0
  4484  014D  0871               	movf	(??___bmul+0)+0,w
  4485  014E  07F2               	addwf	(___bmul@product),f
  4486  014F  2950               	goto	l5450
  4487                           	
  4488  0150                     l3589:	
  4489                           	line	9
  4490                           	
  4491  0150                     l5450:	
  4492  0150  1003               	clrc
  4493  0151  0DF0               	rlf	(___bmul@multiplicand),f
  4494                           
  4495                           	line	10
  4496                           	
  4497  0152                     l5452:	
  4498  0152  1003               	clrc
  4499  0153  0CF3               	rrf	(___bmul@multiplier),f
  4500                           
  4501                           	line	11
  4502                           	
  4503  0154                     l5454:	
  4504  0154  08F3               	movf	(___bmul@multiplier),f
  4505  0155  1D03               	skipz
  4506  0156  2958               	goto	u2601
  4507  0157  2959               	goto	u2600
  4508  0158                     u2601:
  4509  0158  2947               	goto	l3588
  4510  0159                     u2600:
  4511  0159  295A               	goto	l5456
  4512                           	
  4513  015A                     l3590:	
  4514                           	line	12
  4515                           	
  4516  015A                     l5456:	
  4517  015A  0872               	movf	(___bmul@product),w
  4518  015B  295C               	goto	l3591
  4519                           	
  4520  015C                     l5458:	
  4521                           	line	13
  4522                           	
  4523  015C                     l3591:	
  4524  015C  0008               	return
  4525                           	opt stack 0
  4526                           GLOBAL	__end_of___bmul
  4527  015D                     	__end_of___bmul:
  4528 ;; =============== function ___bmul ends ============
  4529                           
  4530                           	signat	___bmul,8313
  4531                           	global	_pwm1_init
  4532                           psect	text615,local,class=CODE,delta=2
  4533                           global __ptext615
  4534  0132                     __ptext615:
  4535                           
  4536 ;; *************** function _pwm1_init *****************
  4537 ;; Defined at:
  4538 ;;		line 141 in file "E:\PIC\test\main.c"
  4539 ;; Parameters:    Size  Location     Type
  4540 ;;		None
  4541 ;; Auto vars:     Size  Location     Type
  4542 ;;		None
  4543 ;; Return value:  Size  Location     Type
  4544 ;;		None               void
  4545 ;; Registers used:
  4546 ;;		wreg, status,2
  4547 ;; Tracked objects:
  4548 ;;		On entry : 0/0
  4549 ;;		On exit  : 0/0
  4550 ;;		Unchanged: 0/0
  4551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4552 ;;      Params:         0       0       0       0       0
  4553 ;;      Locals:         0       0       0       0       0
  4554 ;;      Temps:          0       0       0       0       0
  4555 ;;      Totals:         0       0       0       0       0
  4556 ;;Total ram usage:        0 bytes
  4557 ;; Hardware stack levels used:    1
  4558 ;; This function calls:
  4559 ;;		Nothing
  4560 ;; This function is called by:
  4561 ;;		_main
  4562 ;; This function uses a non-reentrant model
  4563 ;;
  4564                           psect	text615
  4565                           	file	"E:\PIC\test\main.c"
  4566                           	line	141
  4567                           	global	__size_of_pwm1_init
  4568  0013                     	__size_of_pwm1_init	equ	__end_of_pwm1_init-_pwm1_init
  4569                           	
  4570  0132                     _pwm1_init:	
  4571                           	opt	stack 7
  4572                           ; Regs used in _pwm1_init: [wreg+status,2]
  4573                           	line	142
  4574                           	
  4575  0132                     l5438:	
  4576                           ;main.c: 142: CCP1CON = 0B00001111;
  4577  0132  300F               	movlw	(0Fh)
  4578  0133  1283               	bcf	status, 5	;RP0=0, select bank0
  4579  0134  1303               	bcf	status, 6	;RP1=0, select bank0
  4580  0135  0097               	movwf	(23)	;volatile
  4581                           	line	143
  4582                           ;main.c: 143: PR2 = 0X3F;
  4583  0136  303F               	movlw	(03Fh)
  4584  0137  1683               	bsf	status, 5	;RP0=1, select bank1
  4585  0138  1303               	bcf	status, 6	;RP1=0, select bank1
  4586  0139  0092               	movwf	(146)^080h	;volatile
  4587                           	line	144
  4588                           	
  4589  013A                     l5440:	
  4590                           ;main.c: 144: CCPR1L = 0x00;
  4591  013A  1283               	bcf	status, 5	;RP0=0, select bank0
  4592  013B  1303               	bcf	status, 6	;RP1=0, select bank0
  4593  013C  0195               	clrf	(21)	;volatile
  4594                           	line	145
  4595                           	
  4596  013D                     l5442:	
  4597                           ;main.c: 145: TRISC2 = 0;
  4598  013D  1683               	bsf	status, 5	;RP0=1, select bank1
  4599  013E  1303               	bcf	status, 6	;RP1=0, select bank1
  4600  013F  1107               	bcf	(1082/8)^080h,(1082)&7
  4601                           	line	146
  4602                           	
  4603  0140                     l5444:	
  4604                           ;main.c: 146: T2CON = 0B00000100;
  4605  0140  3004               	movlw	(04h)
  4606  0141  1283               	bcf	status, 5	;RP0=0, select bank0
  4607  0142  1303               	bcf	status, 6	;RP1=0, select bank0
  4608  0143  0092               	movwf	(18)	;volatile
  4609                           	line	147
  4610                           	
  4611  0144                     l2911:	
  4612  0144  0008               	return
  4613                           	opt stack 0
  4614                           GLOBAL	__end_of_pwm1_init
  4615  0145                     	__end_of_pwm1_init:
  4616 ;; =============== function _pwm1_init ends ============
  4617                           
  4618                           	signat	_pwm1_init,88
  4619                           	global	_i2c_nack
  4620                           psect	text616,local,class=CODE,delta=2
  4621                           global __ptext616
  4622  00EE                     __ptext616:
  4623                           
  4624 ;; *************** function _i2c_nack *****************
  4625 ;; Defined at:
  4626 ;;		line 86 in file "E:\PIC\test\i2c.c"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;		None
  4629 ;; Auto vars:     Size  Location     Type
  4630 ;;		None
  4631 ;; Return value:  Size  Location     Type
  4632 ;;		None               void
  4633 ;; Registers used:
  4634 ;;		None
  4635 ;; Tracked objects:
  4636 ;;		On entry : 0/0
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4640 ;;      Params:         0       0       0       0       0
  4641 ;;      Locals:         0       0       0       0       0
  4642 ;;      Temps:          0       0       0       0       0
  4643 ;;      Totals:         0       0       0       0       0
  4644 ;;Total ram usage:        0 bytes
  4645 ;; Hardware stack levels used:    1
  4646 ;; This function calls:
  4647 ;;		Nothing
  4648 ;; This function is called by:
  4649 ;;		_rtc_read
  4650 ;; This function uses a non-reentrant model
  4651 ;;
  4652                           psect	text616
  4653                           	file	"E:\PIC\test\i2c.c"
  4654                           	line	86
  4655                           	global	__size_of_i2c_nack
  4656  000B                     	__size_of_i2c_nack	equ	__end_of_i2c_nack-_i2c_nack
  4657                           	
  4658  00EE                     _i2c_nack:	
  4659                           	opt	stack 6
  4660                           ; Regs used in _i2c_nack: []
  4661                           	line	87
  4662                           	
  4663  00EE                     l5406:	
  4664                           ;i2c.c: 87: ACKDT = 1;
  4665  00EE  1683               	bsf	status, 5	;RP0=1, select bank1
  4666  00EF  1303               	bcf	status, 6	;RP1=0, select bank1
  4667  00F0  1691               	bsf	(1165/8)^080h,(1165)&7
  4668                           	line	88
  4669                           ;i2c.c: 88: ACKEN = 1;
  4670  00F1  1611               	bsf	(1164/8)^080h,(1164)&7
  4671                           	line	89
  4672                           ;i2c.c: 89: while (ACKEN);
  4673  00F2  28F3               	goto	l1428
  4674                           	
  4675  00F3                     l1429:	
  4676                           	
  4677  00F3                     l1428:	
  4678  00F3  1A11               	btfsc	(1164/8)^080h,(1164)&7
  4679  00F4  28F6               	goto	u2551
  4680  00F5  28F7               	goto	u2550
  4681  00F6                     u2551:
  4682  00F6  28F3               	goto	l1428
  4683  00F7                     u2550:
  4684  00F7  28F8               	goto	l1431
  4685                           	
  4686  00F8                     l1430:	
  4687                           	line	91
  4688                           	
  4689  00F8                     l1431:	
  4690  00F8  0008               	return
  4691                           	opt stack 0
  4692                           GLOBAL	__end_of_i2c_nack
  4693  00F9                     	__end_of_i2c_nack:
  4694 ;; =============== function _i2c_nack ends ============
  4695                           
  4696                           	signat	_i2c_nack,88
  4697                           	global	_i2c_Wait
  4698                           psect	text617,local,class=CODE,delta=2
  4699                           global __ptext617
  4700  00E4                     __ptext617:
  4701                           
  4702 ;; *************** function _i2c_Wait *****************
  4703 ;; Defined at:
  4704 ;;		line 94 in file "E:\PIC\test\i2c.c"
  4705 ;; Parameters:    Size  Location     Type
  4706 ;;		None
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;		None
  4709 ;; Return value:  Size  Location     Type
  4710 ;;		None               void
  4711 ;; Registers used:
  4712 ;;		None
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4718 ;;      Params:         0       0       0       0       0
  4719 ;;      Locals:         0       0       0       0       0
  4720 ;;      Temps:          0       0       0       0       0
  4721 ;;      Totals:         0       0       0       0       0
  4722 ;;Total ram usage:        0 bytes
  4723 ;; Hardware stack levels used:    1
  4724 ;; This function calls:
  4725 ;;		Nothing
  4726 ;; This function is called by:
  4727 ;;		_i2c_write
  4728 ;;		_i2c_read
  4729 ;;		_i2c_address
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           psect	text617
  4733                           	file	"E:\PIC\test\i2c.c"
  4734                           	line	94
  4735                           	global	__size_of_i2c_Wait
  4736  000A                     	__size_of_i2c_Wait	equ	__end_of_i2c_Wait-_i2c_Wait
  4737                           	
  4738  00E4                     _i2c_Wait:	
  4739                           	opt	stack 5
  4740                           ; Regs used in _i2c_Wait: []
  4741                           	line	95
  4742                           	
  4743  00E4                     l5392:	
  4744                           ;i2c.c: 95: SSPIF = 0;
  4745  00E4  1283               	bcf	status, 5	;RP0=0, select bank0
  4746  00E5  1303               	bcf	status, 6	;RP1=0, select bank0
  4747  00E6  118C               	bcf	(99/8),(99)&7
  4748                           	line	96
  4749                           ;i2c.c: 96: while (SSPIF == 0);
  4750  00E7  28E8               	goto	l1434
  4751                           	
  4752  00E8                     l1435:	
  4753                           	
  4754  00E8                     l1434:	
  4755  00E8  1D8C               	btfss	(99/8),(99)&7
  4756  00E9  28EB               	goto	u2541
  4757  00EA  28EC               	goto	u2540
  4758  00EB                     u2541:
  4759  00EB  28E8               	goto	l1434
  4760  00EC                     u2540:
  4761  00EC  28ED               	goto	l1437
  4762                           	
  4763  00ED                     l1436:	
  4764                           	line	97
  4765                           	
  4766  00ED                     l1437:	
  4767  00ED  0008               	return
  4768                           	opt stack 0
  4769                           GLOBAL	__end_of_i2c_Wait
  4770  00EE                     	__end_of_i2c_Wait:
  4771 ;; =============== function _i2c_Wait ends ============
  4772                           
  4773                           	signat	_i2c_Wait,88
  4774                           	global	_i2c_restart
  4775                           psect	text618,local,class=CODE,delta=2
  4776                           global __ptext618
  4777  00DA                     __ptext618:
  4778                           
  4779 ;; *************** function _i2c_restart *****************
  4780 ;; Defined at:
  4781 ;;		line 27 in file "E:\PIC\test\i2c.c"
  4782 ;; Parameters:    Size  Location     Type
  4783 ;;		None
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;		None
  4786 ;; Return value:  Size  Location     Type
  4787 ;;		None               void
  4788 ;; Registers used:
  4789 ;;		None
  4790 ;; Tracked objects:
  4791 ;;		On entry : 0/0
  4792 ;;		On exit  : 0/0
  4793 ;;		Unchanged: 0/0
  4794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4795 ;;      Params:         0       0       0       0       0
  4796 ;;      Locals:         0       0       0       0       0
  4797 ;;      Temps:          0       0       0       0       0
  4798 ;;      Totals:         0       0       0       0       0
  4799 ;;Total ram usage:        0 bytes
  4800 ;; Hardware stack levels used:    1
  4801 ;; This function calls:
  4802 ;;		Nothing
  4803 ;; This function is called by:
  4804 ;;		_rtc_read
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           psect	text618
  4808                           	file	"E:\PIC\test\i2c.c"
  4809                           	line	27
  4810                           	global	__size_of_i2c_restart
  4811  000A                     	__size_of_i2c_restart	equ	__end_of_i2c_restart-_i2c_restart
  4812                           	
  4813  00DA                     _i2c_restart:	
  4814                           	opt	stack 6
  4815                           ; Regs used in _i2c_restart: []
  4816                           	line	29
  4817                           	
  4818  00DA                     l5390:	
  4819                           ;i2c.c: 29: RSEN = 1;
  4820  00DA  1683               	bsf	status, 5	;RP0=1, select bank1
  4821  00DB  1303               	bcf	status, 6	;RP1=0, select bank1
  4822  00DC  1491               	bsf	(1161/8)^080h,(1161)&7
  4823                           	line	30
  4824                           ;i2c.c: 30: while (SEN == 1);
  4825  00DD  28DE               	goto	l1401
  4826                           	
  4827  00DE                     l1402:	
  4828                           	
  4829  00DE                     l1401:	
  4830  00DE  1811               	btfsc	(1160/8)^080h,(1160)&7
  4831  00DF  28E1               	goto	u2531
  4832  00E0  28E2               	goto	u2530
  4833  00E1                     u2531:
  4834  00E1  28DE               	goto	l1401
  4835  00E2                     u2530:
  4836  00E2  28E3               	goto	l1404
  4837                           	
  4838  00E3                     l1403:	
  4839                           	line	32
  4840                           	
  4841  00E3                     l1404:	
  4842  00E3  0008               	return
  4843                           	opt stack 0
  4844                           GLOBAL	__end_of_i2c_restart
  4845  00E4                     	__end_of_i2c_restart:
  4846 ;; =============== function _i2c_restart ends ============
  4847                           
  4848                           	signat	_i2c_restart,88
  4849                           	global	_i2c_stop
  4850                           psect	text619,local,class=CODE,delta=2
  4851                           global __ptext619
  4852  00D0                     __ptext619:
  4853                           
  4854 ;; *************** function _i2c_stop *****************
  4855 ;; Defined at:
  4856 ;;		line 21 in file "E:\PIC\test\i2c.c"
  4857 ;; Parameters:    Size  Location     Type
  4858 ;;		None
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;		None
  4861 ;; Return value:  Size  Location     Type
  4862 ;;		None               void
  4863 ;; Registers used:
  4864 ;;		None
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4870 ;;      Params:         0       0       0       0       0
  4871 ;;      Locals:         0       0       0       0       0
  4872 ;;      Temps:          0       0       0       0       0
  4873 ;;      Totals:         0       0       0       0       0
  4874 ;;Total ram usage:        0 bytes
  4875 ;; Hardware stack levels used:    1
  4876 ;; This function calls:
  4877 ;;		Nothing
  4878 ;; This function is called by:
  4879 ;;		_rtc_read
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           psect	text619
  4883                           	file	"E:\PIC\test\i2c.c"
  4884                           	line	21
  4885                           	global	__size_of_i2c_stop
  4886  000A                     	__size_of_i2c_stop	equ	__end_of_i2c_stop-_i2c_stop
  4887                           	
  4888  00D0                     _i2c_stop:	
  4889                           	opt	stack 6
  4890                           ; Regs used in _i2c_stop: []
  4891                           	line	22
  4892                           	
  4893  00D0                     l5388:	
  4894                           ;i2c.c: 22: PEN = 1;
  4895  00D0  1683               	bsf	status, 5	;RP0=1, select bank1
  4896  00D1  1303               	bcf	status, 6	;RP1=0, select bank1
  4897  00D2  1511               	bsf	(1162/8)^080h,(1162)&7
  4898                           	line	23
  4899                           ;i2c.c: 23: while (PEN == 1);
  4900  00D3  28D4               	goto	l1395
  4901                           	
  4902  00D4                     l1396:	
  4903                           	
  4904  00D4                     l1395:	
  4905  00D4  1911               	btfsc	(1162/8)^080h,(1162)&7
  4906  00D5  28D7               	goto	u2521
  4907  00D6  28D8               	goto	u2520
  4908  00D7                     u2521:
  4909  00D7  28D4               	goto	l1395
  4910  00D8                     u2520:
  4911  00D8  28D9               	goto	l1398
  4912                           	
  4913  00D9                     l1397:	
  4914                           	line	24
  4915                           	
  4916  00D9                     l1398:	
  4917  00D9  0008               	return
  4918                           	opt stack 0
  4919                           GLOBAL	__end_of_i2c_stop
  4920  00DA                     	__end_of_i2c_stop:
  4921 ;; =============== function _i2c_stop ends ============
  4922                           
  4923                           	signat	_i2c_stop,88
  4924                           	global	_i2c_start
  4925                           psect	text620,local,class=CODE,delta=2
  4926                           global __ptext620
  4927  00C6                     __ptext620:
  4928                           
  4929 ;; *************** function _i2c_start *****************
  4930 ;; Defined at:
  4931 ;;		line 14 in file "E:\PIC\test\i2c.c"
  4932 ;; Parameters:    Size  Location     Type
  4933 ;;		None
  4934 ;; Auto vars:     Size  Location     Type
  4935 ;;		None
  4936 ;; Return value:  Size  Location     Type
  4937 ;;		None               void
  4938 ;; Registers used:
  4939 ;;		None
  4940 ;; Tracked objects:
  4941 ;;		On entry : 0/0
  4942 ;;		On exit  : 0/0
  4943 ;;		Unchanged: 0/0
  4944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4945 ;;      Params:         0       0       0       0       0
  4946 ;;      Locals:         0       0       0       0       0
  4947 ;;      Temps:          0       0       0       0       0
  4948 ;;      Totals:         0       0       0       0       0
  4949 ;;Total ram usage:        0 bytes
  4950 ;; Hardware stack levels used:    1
  4951 ;; This function calls:
  4952 ;;		Nothing
  4953 ;; This function is called by:
  4954 ;;		_rtc_read
  4955 ;; This function uses a non-reentrant model
  4956 ;;
  4957                           psect	text620
  4958                           	file	"E:\PIC\test\i2c.c"
  4959                           	line	14
  4960                           	global	__size_of_i2c_start
  4961  000A                     	__size_of_i2c_start	equ	__end_of_i2c_start-_i2c_start
  4962                           	
  4963  00C6                     _i2c_start:	
  4964                           	opt	stack 6
  4965                           ; Regs used in _i2c_start: []
  4966                           	line	15
  4967                           	
  4968  00C6                     l5386:	
  4969                           ;i2c.c: 15: SEN = 1;
  4970  00C6  1683               	bsf	status, 5	;RP0=1, select bank1
  4971  00C7  1303               	bcf	status, 6	;RP1=0, select bank1
  4972  00C8  1411               	bsf	(1160/8)^080h,(1160)&7
  4973                           	line	16
  4974                           ;i2c.c: 16: while (SEN == 1);
  4975  00C9  28CA               	goto	l1389
  4976                           	
  4977  00CA                     l1390:	
  4978                           	
  4979  00CA                     l1389:	
  4980  00CA  1811               	btfsc	(1160/8)^080h,(1160)&7
  4981  00CB  28CD               	goto	u2511
  4982  00CC  28CE               	goto	u2510
  4983  00CD                     u2511:
  4984  00CD  28CA               	goto	l1389
  4985  00CE                     u2510:
  4986  00CE  28CF               	goto	l1392
  4987                           	
  4988  00CF                     l1391:	
  4989                           	line	18
  4990                           	
  4991  00CF                     l1392:	
  4992  00CF  0008               	return
  4993                           	opt stack 0
  4994                           GLOBAL	__end_of_i2c_start
  4995  00D0                     	__end_of_i2c_start:
  4996 ;; =============== function _i2c_start ends ============
  4997                           
  4998                           	signat	_i2c_start,88
  4999                           	global	_i2c_init
  5000                           psect	text621,local,class=CODE,delta=2
  5001                           global __ptext621
  5002  0104                     __ptext621:
  5003                           
  5004 ;; *************** function _i2c_init *****************
  5005 ;; Defined at:
  5006 ;;		line 4 in file "E:\PIC\test\i2c.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;		None
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;		None
  5011 ;; Return value:  Size  Location     Type
  5012 ;;		None               void
  5013 ;; Registers used:
  5014 ;;		wreg
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5020 ;;      Params:         0       0       0       0       0
  5021 ;;      Locals:         0       0       0       0       0
  5022 ;;      Temps:          0       0       0       0       0
  5023 ;;      Totals:         0       0       0       0       0
  5024 ;;Total ram usage:        0 bytes
  5025 ;; Hardware stack levels used:    1
  5026 ;; This function calls:
  5027 ;;		Nothing
  5028 ;; This function is called by:
  5029 ;;		_main
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           psect	text621
  5033                           	file	"E:\PIC\test\i2c.c"
  5034                           	line	4
  5035                           	global	__size_of_i2c_init
  5036  000D                     	__size_of_i2c_init	equ	__end_of_i2c_init-_i2c_init
  5037                           	
  5038  0104                     _i2c_init:	
  5039                           	opt	stack 7
  5040                           ; Regs used in _i2c_init: [wreg]
  5041                           	line	6
  5042                           	
  5043  0104                     l5382:	
  5044                           ;i2c.c: 6: TRISC3 = 1;
  5045  0104  1683               	bsf	status, 5	;RP0=1, select bank1
  5046  0105  1303               	bcf	status, 6	;RP1=0, select bank1
  5047  0106  1587               	bsf	(1083/8)^080h,(1083)&7
  5048                           	line	7
  5049                           ;i2c.c: 7: TRISC4 = 1;
  5050  0107  1607               	bsf	(1084/8)^080h,(1084)&7
  5051                           	line	9
  5052                           	
  5053  0108                     l5384:	
  5054                           ;i2c.c: 9: SSPCON = 0X28;
  5055  0108  3028               	movlw	(028h)
  5056  0109  1283               	bcf	status, 5	;RP0=0, select bank0
  5057  010A  1303               	bcf	status, 6	;RP1=0, select bank0
  5058  010B  0094               	movwf	(20)	;volatile
  5059                           	line	11
  5060                           ;i2c.c: 11: SSPADD = 9;
  5061  010C  3009               	movlw	(09h)
  5062  010D  1683               	bsf	status, 5	;RP0=1, select bank1
  5063  010E  1303               	bcf	status, 6	;RP1=0, select bank1
  5064  010F  0093               	movwf	(147)^080h	;volatile
  5065                           	line	12
  5066                           	
  5067  0110                     l1386:	
  5068  0110  0008               	return
  5069                           	opt stack 0
  5070                           GLOBAL	__end_of_i2c_init
  5071  0111                     	__end_of_i2c_init:
  5072 ;; =============== function _i2c_init ends ============
  5073                           
  5074                           	signat	_i2c_init,88
  5075                           	global	_adc_init
  5076                           psect	text622,local,class=CODE,delta=2
  5077                           global __ptext622
  5078  00B4                     __ptext622:
  5079                           
  5080 ;; *************** function _adc_init *****************
  5081 ;; Defined at:
  5082 ;;		line 12 in file "E:\PIC\test\adc.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;		None
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;		None
  5087 ;; Return value:  Size  Location     Type
  5088 ;;		None               void
  5089 ;; Registers used:
  5090 ;;		wreg
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5096 ;;      Params:         0       0       0       0       0
  5097 ;;      Locals:         0       0       0       0       0
  5098 ;;      Temps:          0       0       0       0       0
  5099 ;;      Totals:         0       0       0       0       0
  5100 ;;Total ram usage:        0 bytes
  5101 ;; Hardware stack levels used:    1
  5102 ;; This function calls:
  5103 ;;		Nothing
  5104 ;; This function is called by:
  5105 ;;		_main
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           psect	text622
  5109                           	file	"E:\PIC\test\adc.c"
  5110                           	global	__size_of_adc_init
  5111  0009                     	__size_of_adc_init	equ	__end_of_adc_init-_adc_init
  5112                           	
  5113  00B4                     _adc_init:	
  5114                           	opt	stack 7
  5115                           ; Regs used in _adc_init: [wreg]
  5116                           	line	13
  5117                           	
  5118  00B4                     l5380:	
  5119                           ;adc.c: 13: ADCON0=0B01000000;
  5120  00B4  3040               	movlw	(040h)
  5121  00B5  1283               	bcf	status, 5	;RP0=0, select bank0
  5122  00B6  1303               	bcf	status, 6	;RP1=0, select bank0
  5123  00B7  009F               	movwf	(31)	;volatile
  5124                           	line	14
  5125                           ;adc.c: 14: ADCON1=(0B00000000|(1<<7))|0B1001;
  5126  00B8  3089               	movlw	(089h)
  5127  00B9  1683               	bsf	status, 5	;RP0=1, select bank1
  5128  00BA  1303               	bcf	status, 6	;RP1=0, select bank1
  5129  00BB  009F               	movwf	(159)^080h	;volatile
  5130                           	line	15
  5131                           	
  5132  00BC                     l693:	
  5133  00BC  0008               	return
  5134                           	opt stack 0
  5135                           GLOBAL	__end_of_adc_init
  5136  00BD                     	__end_of_adc_init:
  5137 ;; =============== function _adc_init ends ============
  5138                           
  5139                           	signat	_adc_init,88
  5140                           psect	text623,local,class=CODE,delta=2
  5141                           global __ptext623
  5142  0000                     __ptext623:
  5143                           	global	btemp
  5144  007E                     	btemp set 07Eh
  5145                           
  5146                           	DABS	1,126,2	;btemp
  5147                           	global	wtemp0
  5148  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu Mar 05 17:32:32 2015

       ___bmul@product 0072                     _GO 00FA                     _RD 0C60                     _WR 0C61  
         ___awdiv@sign 0076           rtc_read@data 0074                    l693 00BC                    l696 01C7  
                  l697 01C7                    l698 01CB                    l699 01E8                    _GIE 005F  
                  _RB0 0030                    _RC0 0038                    _RD2 0042                    _RD3 0043  
                  _RC5 003D                    _PR2 0092                    _PEN 048A                    _SEN 0488  
         ___awmod@sign 0076            lcd_goto@pos 0076                   l1401 00DE                   l1402 00DE  
                 l2130 02BC                   l1403 00E3                   l1404 00E3                   l2140 026E  
                 l2133 0120                   l1430 00F8                   l1431 00F8                   l1407 0103  
                 l2136 023E                   l2152 00C5                   l2160 0206                   l1425 0131  
                 l2137 0240                   l2161 020F                   l1434 00E8                   l2138 0267  
                 l2162 0227                   l1435 00E8                   l2139 0269                   l2155 0219  
                 l1436 00ED                   l1428 00F3                   l2156 01EB                   l1437 00ED  
                 l1429 00F3                   l2149 00B3                   l2157 0227                   l1390 00CA  
                 l2158 01F4                   l1391 00CF                   l2159 01FD                   l1392 00CF  
                 l1386 0110                   l1395 00D4                   l1396 00D4                   l1389 00CA  
                 l1397 00D9                   l1398 00D9                   l6000 06C8                   l6010 070E  
                 l6002 06D3                   l3700 0589                   l2900 07D5                   l6020 074A  
                 l6012 0727                   l6004 06E0                   l2901 07D4                   l3710 048A  
                 l2902 07E9                   l6030 079A                   l6022 075C                   l6014 072D  
                 l6006 06E5                   l2911 0144                   l3711 0497                   l3703 042F  
                 l2903 07FC                   l3712 048B                   l3704 04B7                   l2904 07FD  
                 l6040 07AE                   l6032 079B                   l6024 0773                   l6016 0738  
                 l6008 06F7                   l3713 049D                   l3705 047A                   l2905 07FD  
                 l3714 04AE                   l3706 0466                   l3810 0310                   l3802 02CB  
                 l6050 07C8                   l6042 07B2                   l6034 07A0                   l6026 078C  
                 l6018 0745                   l3707 0467                   l3811 031B                   l3803 02D5  
                 l3708 0479                   l3740 035D                   l3812 0322                   l3804 0311  
                 l2908 01A9                   l6060 07DB                   l6052 07C9                   l6044 07B8  
                 l6036 07A6                   l6028 0794                   l3709 049E                   l3741 0376  
                 l3805 02EB                   l5406 00EE                   l3590 015A                   l3742 0384  
                 l3734 0331                   l3806 02DF                   l6062 07E1                   l6054 07CC  
                 l6046 07BE                   l6038 07AD                   l3591 015C                   l3743 038F  
                 l3735 033F                   l3807 02F0                   l5440 013A                   l3744 0396  
                 l3736 0385                   l3808 02F1                   l6064 07E7                   l6056 07D2  
                 l6048 07C2                   l3737 0357                   l3809 0302                   l3817 0177  
                 l5442 013D                   l5450 0150                   l3930 03B9                   l5530 0397  
                 l5610 042F                   l3738 034B                   l6066 07E9                   l6058 07D5  
                 l3931 03AC                   l3739 035C                   l5380 00B4                   l5444 0140  
                 l5452 0152                   l3588 0147                   l3940 0411                   l3932 03C0  
                 l5540 03B9                   l5532 039B                   l5620 0451                   l5612 0441  
                 l5604 0412                   l5700 0385                   l3692 04D3                   l6068 07F6  
                 l3589 0150                   l3933 03D7                   l3693 05A5                   l2893 05E5  
                 l5382 0104                   l5390 00DA                   l5438 0132                   l5454 0154  
                 l5446 0146                   l5550 03EA                   l5542 03C1                   l3934 03C1  
                 l3926 03AB                   l5534 03A3                   l5622 0455                   l5630 047A  
                 l5614 0442                   l5606 0425                   l5702 0389                   l5710 02C2  
                 l3694 04EC                   l2894 07A0                   l3935 03DE                   l3695 052C  
                 l2895 07B2                   l5384 0108                   l5392 00E4                   l5456 015A  
                 l5448 014B                   l5552 03F2                   l3936 03EA                   l5544 03C5  
                 l5536 03AA                   l3928 03A3                   l5632 0480                   l5640 049E  
                 l5624 045C                   l5616 0448                   l5608 042E                   l5704 038F  
                 l5720 02DF                   l5712 02CB                   l5800 00FA                   l3696 0541  
                 l2896 07B1                   l3937 03DF                   l3929 0411                   l3697 0558  
                 l2897 07C0                   l5386 00C6                   l5458 015C                   l5554 03FA  
                 l3938 03EE                   l5546 03CF                   l5538 03AC                   l5642 04A2  
                 l5634 0489                   l5626 0465                   l5618 044F                   l5706 0396  
                 l5730 0302                   l5722 02E6                   l5714 02CF                   l5802 00FE  
                 l5810 012F                   l3698 055D                   l2898 07C2                   l3939 03F8  
                 l3699 0572                   l2899 07CC                   l5388 00D0                   l5556 040C  
                 l5548 03DF                   l5644 04AE                   l5636 048B                   l5628 0467  
                 l5740 0322                   l5732 0309                   l5724 02EB                   l5716 02D5  
                 l5708 02BD                   l5812 0131                   l5804 0121                   l5820 04B8  
                 l5900 0179                   l5558 0410                   l5646 04B7                   l5638 0497  
                 l5670 0328                   l5726 02F1                   l5718 02DB                   l5734 0311  
                 l5806 0124                   l5814 0111                   l5830 04EB                   l5822 04CB  
                 l5910 01A7                   l5902 017E                   l5680 0341                   l5672 0331  
                 l5736 0315                   l5728 02FB                   l5808 0129                   l5816 0114  
                 l5840 0521                   l5832 04EC                   l5824 04D2                   l5912 01A9  
                 l5904 0184                   l5920 0282                   _ADIF 0066                   l5690 035D  
                 l5682 0347                   l5674 0335                   l5738 031B                   l5818 011D  
                 l5850 0549                   l5842 0527                   l5834 0519                   l5826 04D3  
                 l5906 018F                   l5922 0283                   l5914 026F                   l5930 00AD  
                 l5692 036E                   l5684 034B                   l5676 033A                   l5668 0323  
                 l5860 0572                   l5852 0551                   l5844 052C                   l5836 051A  
                 l5828 04E4                   l5908 0195                   l5924 0288                   l5916 0272  
                 l5932 00BE                   l5940 01F5                   l5694 0374                   l5686 0352  
                 l5678 033F                   l5790 01BB                   l5862 057A                   l5854 0558  
                 l5846 0530                   l5838 051B                   l5870 015D                   l5926 028D  
                 l5918 027F                   l5934 00BF                   l5942 01FE                   l5950 0219  
                 l5696 0376                   l5688 0357                   l5792 01C3                   l5784 01AB  
                 l5864 0582                   l5856 055D                   l5848 0541                   l5872 0177  
                 l5880 0238                   l5928 00AC                   l5944 0207                   l5936 01EA  
                 l5960 05B5                   l5952 05A6                   l5698 037D                   l5794 01CC  
                 l5786 01B9                   l5866 0589                   l5858 0561                   l5890 0256  
                 l5882 023C                   l5874 0229                   l5946 0210                   l5938 01EC  
                 l5970 05CA                   l5962 05B6                   l5954 05AF                   l5796 01D4  
                 l5788 01BA                   l5868 05A5                   l5892 025B                   l5884 0240  
                 l5876 022D                   l5948 0218                   l5980 05F3                   l5972 05CD  
                 l5964 05BB                   l5956 05B2                   l5798 01E8                   l5894 0261  
                 l5886 0245                   l5878 0232                   l5990 067B                   l5982 0601  
                 l5974 05DA                   l5966 05C0                   l5958 05B4                   l5896 0265  
                 l5888 0249                   l5992 0680                   l5984 0632                   l5976 05DD  
                 l5968 05C5                   l5898 0269                   l5994 0692                   l5986 0663  
                 l5978 05E5                   l5996 06A9                   l5988 066E                   _ADON 00F8  
                 l5998 06C2                   u3100 0480                   u3101 047F                   u3120 049C  
                 u3040 0425                   u3200 035B                   u3121 049B                   u3041 0424  
                 u3201 035A                   u3130 04A2                   u3050 043A                   u3115 048D  
                 u3060 0455                   u3220 036E                   u3300 02EF                   u3061 0454  
                 u3221 036D                   u3301 02EE                   u2510 00CE                   u3070 045C  
                 u3310 02FB                   u2511 00CD                   u3071 045B                   u3055 0436  
                 u3215 035E                   u3311 02FA                   u2520 00D8                   u2600 0159  
                 u3240 0383                   u3160 0328                   u2521 00D7                   u2601 0158  
                 u3241 0382                   u3225 036A                   u3161 0327                   u2530 00E2  
                 u3090 0478                   u3250 0389                   u3170 0335                   u3330 030F  
                 u2531 00E1                   u3091 0477                   u3235 0377                   u3171 0334  
                 u3331 030E                   u3315 02F7                   u2540 00EC                   u3180 0347  
                 u3340 0315                   u3260 02C2                   u3420 01CB                   u2541 00EB  
                 u3085 0468                   u3181 0346                   u3325 0303                   u3261 02C1  
                 u3421 01CA                   u2550 00F7                   u3270 02CF                   u3510 0557  
                 u3430 04CB                   u2551 00F6                   u3271 02CE                   u3415 01AE  
                 u3511 0556                   u3431 04CA                   u3280 02DB                   u3520 0561  
                 u3440 04E4                   u3281 02DA                   u3521 0560                   u3505 054A  
                 u3441 04E3                   u3450 04FC                   u3195 034C                   u3531 056A  
                 u2900 03DD                   u3532 0571                   u3460 050E                   u3700 07D2  
                 u2901 03DC                   u3701 07D1                   u3605 0671                   u2590 014B  
                 u3470 0530                   u3710 07DB                   u3630 0794                   u2591 014A  
                 u3295 02E0                   u3471 052F                   u3455 04F8                   u3711 07DA  
                 u3631 0793                   u3615 06D6                   u2920 03EE                   u3560 0588  
                 u3720 07E1                   u3640 079A                   u2921 03ED                   u3561 0587  
                 u3545 0573                   u3481 0539                   u3465 050A                   u3721 07E0  
                 u3641 0799                   u3625 073B                   u2930 03F2                   u2850 039B  
                 u3482 0540                   u3570 023C                   u3730 07E7                   u3650 07A6  
                 u2931 03F1                   u2915 03E2                   u3555 057B                   u3571 023B  
                 u3731 07E6                   u3651 07A5                   u2940 0403                   u2860 03A2  
                 u3660 07AD                   u2861 03A1                   u3661 07AC                   u2950 0410  
                 u3590 0265                   u3670 07B8                   u3495 0542                   u3591 0264  
                 u3671 07B7                   u2880 03BF                   u3680 07BE                   u2945 03FF  
                 u2881 03BE                   u3585 024C                   u3681 07BD                   u3690 07C8  
                 u2875 03B1                   u3691 07C7                   u3747 05D3                   _RCEN 048B  
                 u3757 07EF                   u2895 03D0                   u3767 0278                   u3777 0118  
                 u3787 01BF                   u3797 01D0                   _RSEN 0489                   _WREN 0C62  
                 _chs0 03E8                   _chs1 02C0                   _chs2 03E9                   _main 05A6  
         ___ftpack@arg 0070                   _mode 03EA           ___ftpack@exp 0073                   _send 0228  
                 btemp 007E           lcd_goto@line 0077                   start 0000      ___bmul@multiplier 0073  
         ___ftmul@cntr 003B          ??_i2c_restart 0070           ___ftmul@sign 003C           ___fttol@exp1 0029  
         ___fttol@lval 0025                  ?_main 0070                  _ACKEN 048C                  _ACKDT 048D  
      __end_of___awdiv 0397                  _EEADR 010D                  ?_send 0070        __end_of___awmod 0323  
                _CARRY 0018        __end_of___ftmul 05A6        ___awdiv@divisor 0070        __end_of___fttol 04B8  
                _T2CON 0012        ___awdiv@counter 0075                  _PORTD 0008                  _TRISB 0086  
                _TRISD 0088                  _SSPIF 0063    __size_of_LCD_STROBE 0010           main@moisture 004E  
        ___ftpack@sign 0074                  main@a 004F                  main@b 0051                  main@c 0053  
                main@i 0044                  main@j 0046         __pbitbssCOMMON 03E8                  send@x 0075  
                status 0003                  wtemp0 007E           __end_of_main 0800           __end_of_send 026F  
     __end_of_i2c_Wait 00EE       __end_of_i2c_nack 00F9       __end_of_i2c_init 0111       __end_of_i2c_read 0132  
     __end_of_i2c_stop 00DA    __end_of_i2c_restart 00E4                 ??_main 003D          ___fttol@sign1 0024  
               ??_send 0072                 _ADCON0 001F                 _ADCON1 009F                 _ADRESH 001E  
               _ADRESL 009E                 _EEDATA 010C                 _CCPR1L 0015                 _EECON1 018C  
               _EECON2 018D       ___awdiv@dividend 0072       __end_of___ftpack 0412       __end_of_adc_init 00BD  
         i2c_read@temp 0071       __end_of___lwtoft 0178                 _SSPADD 0093                 _TRISA0 0428  
               _TRISA1 0429                 _TRISC0 0438                 _TRISC2 043A                 _TRISC3 043B  
               _TRISC4 043C                 _TRISC5 043D                 _SSPCON 0014                 _SSPBUF 0013  
   __size_of_i2c_start 000A          main@light_int 0056     __size_of_i2c_write 000B       __end_of_lcd_init 02BD  
     __end_of_lcd_goto 0228                 ___bmul 0145              ??___awdiv 0074              ??___awmod 0074  
            ??___ftmul 0033              ??___fttol 0020       __end_of_read_adc 01E9       ___awdiv@quotient 0077  
      ___awmod@divisor 0070        ___awmod@counter 0075                 main@a1 0048                 main@a2 0049  
               main@a3 0050                 main@b1 004A                 main@b2 004B                 main@b3 0052  
               main@c1 004C                 main@c2 004D                 main@c3 0057                 main@f1 0054  
___ftmul@f3_as_product 0038       __end_of_rtc_read 01AA    ___bmul@multiplicand 0070           ??_LCD_STROBE 0070  
           ___ftmul@f1 002D             ___ftmul@f2 0030             ___fttol@f1 0078         __pcstackCOMMON 0070  
          _i2c_restart 00DA             ___lwtoft@c 002A      __end_of_i2c_start 00D0      __end_of_i2c_write 0104  
   __size_of_lcd_clear 0008     __size_of_lcd_putch 0009     __end_of_LCD_STROBE 0121              ?_i2c_Wait 0070  
            ?_i2c_nack 0070              ?_i2c_init 0070              ?_i2c_read 0070              ?_i2c_stop 0070  
           __pmaintext 05A6                ?___bmul 0070     __size_of_pwm1_init 0013                _CCP1CON 0017  
              _ACKSTAT 048E              ?___ftpack 0070              ?_adc_init 0070              ?___lwtoft 002A  
            ?_lcd_init 0070              ?_lcd_goto 0076             ??_i2c_Wait 0070             ??_i2c_nack 0070  
           ??_i2c_init 0070             ??_i2c_read 0070             ??_i2c_stop 0070              ?_read_adc 0070  
    __end_of_lcd_clear 00B4              ?_rtc_read 0070        __size_of___bmul 0018      __end_of_lcd_putch 00C6  
              ___awdiv 0323                ___awmod 02BD                ___ftmul 04B8                ___fttol 0412  
           ??___ftpack 0075             ??_adc_init 0070             ??___lwtoft 007C       ___awmod@dividend 0072  
         read_adc@chnl 0076             ??_lcd_init 0076             ??_lcd_goto 0077   end_of_initialization 00A8  
    __end_of_pwm1_init 0145             ??_read_adc 0072             ??_rtc_read 0072          i2c_write@data 0070  
           lcd_putch@c 0076            ___ftmul@exp 0037           ?_i2c_restart 0070         __end_of___bmul 015D  
        __pbitbssBANK0 02C0    start_initialization 00A6              _i2c_start 00C6              _i2c_write 00F9  
    __size_of_i2c_Wait 000A      __size_of_i2c_nack 000B      __size_of_i2c_init 000D      __size_of_i2c_read 0011  
    __size_of_i2c_stop 000A               ??___bmul 0071      __size_of___ftpack 007B      __size_of_adc_init 0009  
    __size_of___lwtoft 001B          __pcstackBANK0 0020             ?_i2c_start 0070             ?_i2c_write 0070  
    __size_of_lcd_init 004E      __size_of_lcd_goto 003F      __size_of_read_adc 003F               ?___awdiv 0070  
            __ptext600 00AC              __ptext601 026F              __ptext610 02BD              __ptext602 0178  
            __ptext611 0323              __ptext603 0228               ?___awmod 0070              __ptext620 00C6  
            __ptext612 0412              __ptext604 015D              __ptext621 0104              __ptext613 0397  
            __ptext605 04B8              __ptext622 00B4              __ptext614 0145              __ptext606 0111  
            __ptext623 0000              __ptext615 0132              __ptext607 0121              __ptext616 00EE  
            __ptext608 00F9              __ptext617 00E4              __ptext609 01AA              __ptext618 00DA  
            __ptext619 00D0              __ptext597 0000              __ptext598 01E9              __ptext599 00BD  
             ?___ftmul 002D               ?___fttol 0078              _lcd_clear 00AC      __size_of_rtc_read 0032  
            _lcd_putch 00BD              _pwm1_init 0132   __size_of_i2c_restart 000A             ?_lcd_clear 0070  
           ?_lcd_putch 0070              main@flag2 0042              main@count 0040            ??_i2c_start 0070  
          ??_i2c_write 0070               _i2c_Wait 00E4               _i2c_nack 00EE               _i2c_init 0104  
             _i2c_read 0121               _i2c_stop 00D0             ?_pwm1_init 0070       __size_of___awdiv 0074  
     __size_of___awmod 0066       __size_of___ftmul 00EE       __size_of___fttol 00A6               ___ftpack 0397  
             _adc_init 00B4               ___lwtoft 015D               _lcd_init 026F               _lcd_goto 01E9  
             _read_adc 01AA          __size_of_main 025A          __size_of_send 0047             _LCD_STROBE 0111  
             _rtc_read 0178            ??_lcd_clear 0076            ??_lcd_putch 0076               send@temp 0074  
          ??_pwm1_init 0070    rtc_read@reg_address 0073            ?_LCD_STROBE 0070  
