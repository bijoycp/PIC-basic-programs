

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Tue Aug 30 16:00:38 2016

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNROOT	_main
    43                           	global	_PORTB
    44                           psect	maintext,global,class=CODE,delta=2
    45                           global __pmaintext
    46  07D5                     __pmaintext:
    47  0006                     _PORTB	set	6
    48                           	global	_PORTD
    49  0008                     _PORTD	set	8
    50                           	global	_CARRY
    51  0018                     _CARRY	set	24
    52                           	global	_GIE
    53  005F                     _GIE	set	95
    54                           	global	_RB0
    55  0030                     _RB0	set	48
    56                           	global	_TRISC
    57  0087                     _TRISC	set	135
    58                           	global	_TRISD
    59  0088                     _TRISD	set	136
    60                           	global	_EEADR
    61  010D                     _EEADR	set	269
    62                           	global	_EEDATA
    63  010C                     _EEDATA	set	268
    64                           	global	_EECON1
    65  018C                     _EECON1	set	396
    66                           	global	_EECON2
    67  018D                     _EECON2	set	397
    68                           	global	_RD
    69  0C60                     _RD	set	3168
    70                           	global	_WR
    71  0C61                     _WR	set	3169
    72                           	global	_WREN
    73  0C62                     _WREN	set	3170
    74                           	file	"shift.as"
    75                           	line	#
    76                           psect cinit,class=CODE,delta=2
    77                           global start_initialization
    78  07D1                     start_initialization:
    79                           
    80                           psect cinit,class=CODE,delta=2
    81                           global end_of_initialization
    82                           
    83                           ;End of C runtime variable initialization code
    84                           
    85  07D1                     end_of_initialization:
    86  07D1  0183               clrf status
    87  07D2  120A  118A  2FD5   ljmp _main	;jump to C main() function
    88                           psect	cstackCOMMON,class=COMMON,space=1
    89                           global __pcstackCOMMON
    90  0070                     __pcstackCOMMON:
    91                           	global	?_main
    92  0070                     ?_main:	; 0 bytes @ 0x0
    93                           	global	??_main
    94  0070                     ??_main:	; 0 bytes @ 0x0
    95  0070                     	ds	1
    96 ;;Data sizes: Strings 0, constant 0, data 0, bss 0, persistent 0 stack 0
    97 ;;Auto spaces:   Size  Autos    Used
    98 ;; COMMON          14      1       1
    99 ;; BANK0           80      0       0
   100 ;; BANK1           80      0       0
   101 ;; BANK3           96      0       0
   102 ;; BANK2           96      0       0
   103                           
   104 ;;
   105 ;; Pointer list with targets:
   106                           
   107                           
   108                           
   109 ;;
   110 ;; Critical Paths under _main in COMMON
   111 ;;
   112 ;;   None.
   113 ;;
   114 ;; Critical Paths under _main in BANK0
   115 ;;
   116 ;;   None.
   117 ;;
   118 ;; Critical Paths under _main in BANK1
   119 ;;
   120 ;;   None.
   121 ;;
   122 ;; Critical Paths under _main in BANK3
   123 ;;
   124 ;;   None.
   125 ;;
   126 ;; Critical Paths under _main in BANK2
   127 ;;
   128 ;;   None.
   129                           
   130 ;;
   131 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   132 ;;
   133                           
   134 ;;
   135 ;;Call Graph Tables:
   136 ;;
   137 ;; ---------------------------------------------------------------------------------
   138 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   139 ;; ---------------------------------------------------------------------------------
   140 ;; (0) _main                                                 1     1      0       0
   141 ;;                                              0 COMMON     1     1      0
   142 ;; ---------------------------------------------------------------------------------
   143 ;; Estimated maximum stack depth 0
   144 ;; ---------------------------------------------------------------------------------
   145                           
   146 ;; Call Graph Graphs:
   147                           
   148 ;; _main (ROOT)
   149 ;;
   150                           
   151 ;; Address spaces:
   152                           
   153 ;;Name               Size   Autos  Total    Cost      Usage
   154 ;;BITCOMMON            E      0       0       0        0.0%
   155 ;;EEDATA             100      0       0       0        0.0%
   156 ;;NULL                 0      0       0       0        0.0%
   157 ;;CODE                 0      0       0       0        0.0%
   158 ;;COMMON               E      1       1       1        7.1%
   159 ;;BITSFR0              0      0       0       1        0.0%
   160 ;;SFR0                 0      0       0       1        0.0%
   161 ;;BITSFR1              0      0       0       2        0.0%
   162 ;;SFR1                 0      0       0       2        0.0%
   163 ;;STACK                0      0       0       2        0.0%
   164 ;;ABS                  0      0       0       3        0.0%
   165 ;;BITBANK0            50      0       0       4        0.0%
   166 ;;BITSFR3              0      0       0       4        0.0%
   167 ;;SFR3                 0      0       0       4        0.0%
   168 ;;BANK0               50      0       0       5        0.0%
   169 ;;BITSFR2              0      0       0       5        0.0%
   170 ;;SFR2                 0      0       0       5        0.0%
   171 ;;BITBANK1            50      0       0       6        0.0%
   172 ;;BANK1               50      0       0       7        0.0%
   173 ;;BITBANK3            60      0       0       8        0.0%
   174 ;;BANK3               60      0       0       9        0.0%
   175 ;;BITBANK2            60      0       0      10        0.0%
   176 ;;BANK2               60      0       0      11        0.0%
   177 ;;DATA                 0      0       0      12        0.0%
   178                           
   179                           	global	_main
   180                           psect	maintext
   181                           
   182 ;; *************** function _main *****************
   183 ;; Defined at:
   184 ;;		line 7 in file "F:\Prolific\PIC\pic_pgm\8    LED SHIFTING\main.c"
   185 ;; Parameters:    Size  Location     Type
   186 ;;		None
   187 ;; Auto vars:     Size  Location     Type
   188 ;;		None
   189 ;; Return value:  Size  Location     Type
   190 ;;		None               void
   191 ;; Registers used:
   192 ;;		wreg, status,2, status,0
   193 ;; Tracked objects:
   194 ;;		On entry : 17F/0
   195 ;;		On exit  : 0/0
   196 ;;		Unchanged: 0/0
   197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   198 ;;      Params:         0       0       0       0       0
   199 ;;      Locals:         0       0       0       0       0
   200 ;;      Temps:          1       0       0       0       0
   201 ;;      Totals:         1       0       0       0       0
   202 ;;Total ram usage:        1 bytes
   203 ;; This function calls:
   204 ;;		Nothing
   205 ;; This function is called by:
   206 ;;		Startup code after reset
   207 ;; This function uses a non-reentrant model
   208 ;;
   209                           psect	maintext
   210                           	file	"F:\Prolific\PIC\pic_pgm\8    LED SHIFTING\main.c"
   211                           	line	7
   212                           	global	__size_of_main
   213  002B                     	__size_of_main	equ	__end_of_main-_main
   214                           	
   215  07D5                     _main:	
   216                           	opt	stack 8
   217                           ; Regs used in _main: [wreg+status,2+status,0]
   218                           	line	8
   219                           	
   220  07D5                     l1772:	
   221                           ;main.c: 8: TRISC=0x08;
   222  07D5  3008               	movlw	(08h)
   223  07D6  1683               	bsf	status, 5	;RP0=1, select bank1
   224  07D7  1303               	bcf	status, 6	;RP1=0, select bank1
   225  07D8  0087               	movwf	(135)^080h	;volatile
   226                           	line	9
   227                           	
   228  07D9                     l1774:	
   229                           ;main.c: 9: PORTB=0x00;
   230  07D9  1283               	bcf	status, 5	;RP0=0, select bank0
   231  07DA  1303               	bcf	status, 6	;RP1=0, select bank0
   232  07DB  0186               	clrf	(6)	;volatile
   233                           	line	10
   234                           	
   235  07DC                     l1776:	
   236                           ;main.c: 10: TRISD=0X00;
   237  07DC  1683               	bsf	status, 5	;RP0=1, select bank1
   238  07DD  1303               	bcf	status, 6	;RP1=0, select bank1
   239  07DE  0188               	clrf	(136)^080h	;volatile
   240                           	line	11
   241                           	
   242  07DF                     l1778:	
   243                           ;main.c: 11: PORTD=0x00;
   244  07DF  1283               	bcf	status, 5	;RP0=0, select bank0
   245  07E0  1303               	bcf	status, 6	;RP1=0, select bank0
   246  07E1  0188               	clrf	(8)	;volatile
   247  07E2  2FE3               	goto	l1780
   248                           	line	13
   249                           ;main.c: 13: while(1)
   250                           	
   251  07E3                     l701:	
   252                           	line	15
   253                           	
   254  07E3                     l1780:	
   255                           ;main.c: 14: {
   256                           ;main.c: 15: if(RB0==1)
   257  07E3  1C06               	btfss	(48/8),(48)&7
   258  07E4  2FE6               	goto	u51
   259  07E5  2FE7               	goto	u50
   260  07E6                     u51:
   261  07E6  2FE3               	goto	l1780
   262  07E7                     u50:
   263  07E7  2FE9               	goto	l703
   264                           	line	17
   265                           	
   266  07E8                     l1782:	
   267                           ;main.c: 16: {
   268                           ;main.c: 17: while(RB0==1);
   269  07E8  2FE9               	goto	l703
   270                           	
   271  07E9                     l704:	
   272                           	
   273  07E9                     l703:	
   274  07E9  1806               	btfsc	(48/8),(48)&7
   275  07EA  2FEC               	goto	u61
   276  07EB  2FED               	goto	u60
   277  07EC                     u61:
   278  07EC  2FE9               	goto	l703
   279  07ED                     u60:
   280  07ED  2FEE               	goto	l1784
   281                           	
   282  07EE                     l705:	
   283                           	line	18
   284                           	
   285  07EE                     l1784:	
   286                           ;main.c: 18: PORTD=PORTD<<1;
   287  07EE  0808               	movf	(8),w	;volatile
   288  07EF  00F0               	movwf	(??_main+0)+0
   289  07F0  0770               	addwf	(??_main+0)+0,w
   290  07F1  0088               	movwf	(8)	;volatile
   291                           	line	19
   292                           	
   293  07F2                     l1786:	
   294                           ;main.c: 19: if(PORTD==0)
   295  07F2  0888               	movf	(8),f
   296  07F3  1D03               	skipz	;volatile
   297  07F4  2FF6               	goto	u71
   298  07F5  2FF7               	goto	u70
   299  07F6                     u71:
   300  07F6  2FE3               	goto	l1780
   301  07F7                     u70:
   302                           	line	21
   303                           	
   304  07F7                     l1788:	
   305                           ;main.c: 20: {
   306                           ;main.c: 21: PORTD=0X01;
   307  07F7  3001               	movlw	(01h)
   308  07F8  0088               	movwf	(8)	;volatile
   309  07F9  2FE3               	goto	l1780
   310                           	line	22
   311                           	
   312  07FA                     l706:	
   313  07FA  2FE3               	goto	l1780
   314                           	line	23
   315                           	
   316  07FB                     l702:	
   317  07FB  2FE3               	goto	l1780
   318                           	line	24
   319                           	
   320  07FC                     l707:	
   321                           	line	13
   322  07FC  2FE3               	goto	l1780
   323                           	
   324  07FD                     l708:	
   325                           	line	25
   326                           	
   327  07FD                     l709:	
   328                           	global	start
   329  07FD  120A  118A  2800   	ljmp	start
   330                           	opt stack 0
   331                           GLOBAL	__end_of_main
   332  0800                     	__end_of_main:
   333 ;; =============== function _main ends ============
   334                           
   335                           	signat	_main,88
   336                           psect	maintext
   337                           	global	btemp
   338  007E                     	btemp set 07Eh
   339                           
   340                           	DABS	1,126,2	;btemp
   341                           	global	wtemp0
   342  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Tue Aug 30 16:00:38 2016

                  _RD 0C60                    u50 07E7                    u51 07E6                    u60 07ED  
                  u61 07EC                    u70 07F7                    u71 07F6                    _WR 0C61  
                 l701 07E3                   l702 07FB                   l703 07E9                   l704 07E9  
                 l705 07EE                   l706 07FA                   l707 07FC                   l708 07FD  
                 l709 07FD                   _GIE 005F                   _RB0 0030                  l1780 07E3  
                l1772 07D5                  l1782 07E8                  l1774 07D9                  l1784 07EE  
                l1776 07DC                  l1786 07F2                  l1778 07DF                  l1788 07F7  
                _WREN 0C62                  _main 07D5                  btemp 007E                  start 0000  
               ?_main 0070                 _EEADR 010D                 _CARRY 0018                 _PORTB 0006  
               _PORTD 0008                 _TRISC 0087                 _TRISD 0088                 status 0003  
               wtemp0 007E          __end_of_main 0800                ??_main 0070                _EEDATA 010C  
              _EECON1 018C                _EECON2 018D        __pcstackCOMMON 0070            __pmaintext 07D5  
end_of_initialization 07D1   start_initialization 07D1         __size_of_main 002B  
