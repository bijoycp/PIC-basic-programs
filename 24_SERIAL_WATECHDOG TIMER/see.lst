

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Sun May 07 15:37:32 2017

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_sci_init
    43                           	FNCALL	_main,_sci_puts
    44                           	FNCALL	_main,_lcd_init
    45                           	FNCALL	_main,_lcd_clear
    46                           	FNCALL	_main,_lcd_puts
    47                           	FNCALL	_main,_sci_putch
    48                           	FNCALL	_main,_sci_getch
    49                           	FNCALL	_main,_lcd_goto
    50                           	FNCALL	_main,_lcd_putch
    51                           	FNCALL	_lcd_goto,_send
    52                           	FNCALL	_lcd_putch,_send
    53                           	FNCALL	_lcd_clear,_send
    54                           	FNCALL	_lcd_puts,_send
    55                           	FNCALL	_lcd_init,_LCD_STROBE
    56                           	FNCALL	_lcd_init,_send
    57                           	FNCALL	_send,_LCD_STROBE
    58                           	FNCALL	_sci_puts,_sci_putch
    59                           	FNROOT	_main
    60                           	global	_mode
    61                           	global	_PORTD
    62                           psect	text166,local,class=CODE,delta=2
    63                           global __ptext166
    64  0000                     __ptext166:
    65  0008                     _PORTD	set	8
    66                           	global	_RCREG
    67  001A                     _RCREG	set	26
    68                           	global	_TXREG
    69  0019                     _TXREG	set	25
    70                           	global	_CARRY
    71  0018                     _CARRY	set	24
    72                           	global	_CREN
    73  00C4                     _CREN	set	196
    74                           	global	_GIE
    75  005F                     _GIE	set	95
    76                           	global	_OERR
    77  00C1                     _OERR	set	193
    78                           	global	_RCIF
    79  0065                     _RCIF	set	101
    80                           	global	_RD2
    81  0042                     _RD2	set	66
    82                           	global	_RD3
    83  0043                     _RD3	set	67
    84                           	global	_RX9
    85  00C6                     _RX9	set	198
    86                           	global	_SPEN
    87  00C7                     _SPEN	set	199
    88                           	global	_TXIF
    89  0064                     _TXIF	set	100
    90                           	global	_SPBRG
    91  0099                     _SPBRG	set	153
    92                           	global	_TRISD
    93  0088                     _TRISD	set	136
    94                           	global	_BRGH
    95  04C2                     _BRGH	set	1218
    96                           	global	_RCIE
    97  0465                     _RCIE	set	1125
    98                           	global	_SYNC
    99  04C4                     _SYNC	set	1220
   100                           	global	_TX9
   101  04C6                     _TX9	set	1222
   102                           	global	_TXEN
   103  04C5                     _TXEN	set	1221
   104                           	global	_TXIE
   105  0464                     _TXIE	set	1124
   106                           	global	_EEADR
   107  010D                     _EEADR	set	269
   108                           	global	_EEDATA
   109  010C                     _EEDATA	set	268
   110                           	global	_EECON1
   111  018C                     _EECON1	set	396
   112                           	global	_EECON2
   113  018D                     _EECON2	set	397
   114                           	global	_RD
   115  0C60                     _RD	set	3168
   116                           	global	_WR
   117  0C61                     _WR	set	3169
   118                           	global	_WREN
   119  0C62                     _WREN	set	3170
   120                           psect	strings,class=STRING,delta=2
   121                           global __pstrings
   122  0003                     __pstrings:
   123                           ;	global	stringdir,stringtab,__stringbase
   124  0003                     stringtab:
   125                           ;	String table - string pointers are 1 byte each
   126  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
   127  0003  3000               movlw high(stringdir)
   128  0004  008A               movwf pclath
   129  0005  0804               movf fsr,w
   130  0006  0A84               incf fsr
   131  0007  0782               	addwf pc
   132  0008                     __stringbase:
   133  0008  3400               	retlw	0
   134                           psect	strings
   135                           	
   136  0009                     STR_2:	
   137  0009  3473               	retlw	115	;'s'
   138  000A  3465               	retlw	101	;'e'
   139  000B  3472               	retlw	114	;'r'
   140  000C  3469               	retlw	105	;'i'
   141  000D  3461               	retlw	97	;'a'
   142  000E  346C               	retlw	108	;'l'
   143  000F  3420               	retlw	32	;' '
   144  0010  3464               	retlw	100	;'d'
   145  0011  3461               	retlw	97	;'a'
   146  0012  3474               	retlw	116	;'t'
   147  0013  3461               	retlw	97	;'a'
   148  0014  3400               	retlw	0
   149                           psect	strings
   150                           	
   151  0015                     STR_1:	
   152  0015  3473               	retlw	115	;'s'
   153  0016  3465               	retlw	101	;'e'
   154  0017  3472               	retlw	114	;'r'
   155  0018  3469               	retlw	105	;'i'
   156  0019  3461               	retlw	97	;'a'
   157  001A  346C               	retlw	108	;'l'
   158  001B  3400               	retlw	0
   159                           psect	strings
   160                           	file	"see.as"
   161                           	line	#
   162                           psect cinit,class=CODE,delta=2
   163                           global start_initialization
   164  0624                     start_initialization:
   165                           
   166                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   167                           global __pbitbssCOMMON
   168  03E0                     __pbitbssCOMMON:
   169  03E0                     _mode:
   170  03E0                            ds      1
   171                           
   172                           ; Clear objects allocated to BITCOMMON
   173                           psect cinit,class=CODE,delta=2
   174  0624  01FC               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   175                           psect cinit,class=CODE,delta=2
   176                           global end_of_initialization
   177                           
   178                           ;End of C runtime variable initialization code
   179                           
   180  0625                     end_of_initialization:
   181  0625  0183               clrf status
   182  0626  120A  118A  2F9F   ljmp _main	;jump to C main() function
   183                           psect	cstackCOMMON,class=COMMON,space=1
   184                           global __pcstackCOMMON
   185  0070                     __pcstackCOMMON:
   186                           	global	?_LCD_STROBE
   187  0070                     ?_LCD_STROBE:	; 0 bytes @ 0x0
   188                           	global	??_LCD_STROBE
   189  0070                     ??_LCD_STROBE:	; 0 bytes @ 0x0
   190                           	global	?_send
   191  0070                     ?_send:	; 0 bytes @ 0x0
   192                           	global	?_lcd_init
   193  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   194                           	global	?_lcd_puts
   195  0070                     ?_lcd_puts:	; 0 bytes @ 0x0
   196                           	global	?_lcd_clear
   197  0070                     ?_lcd_clear:	; 0 bytes @ 0x0
   198                           	global	?_lcd_putch
   199  0070                     ?_lcd_putch:	; 0 bytes @ 0x0
   200                           	global	?_sci_init
   201  0070                     ?_sci_init:	; 0 bytes @ 0x0
   202                           	global	?_sci_putch
   203  0070                     ?_sci_putch:	; 0 bytes @ 0x0
   204                           	global	??_sci_putch
   205  0070                     ??_sci_putch:	; 0 bytes @ 0x0
   206                           	global	?_sci_puts
   207  0070                     ?_sci_puts:	; 0 bytes @ 0x0
   208                           	global	??_sci_getch
   209  0070                     ??_sci_getch:	; 0 bytes @ 0x0
   210                           	global	?_main
   211  0070                     ?_main:	; 0 bytes @ 0x0
   212                           	global	?_sci_getch
   213  0070                     ?_sci_getch:	; 1 bytes @ 0x0
   214                           	global	sci_putch@byte
   215  0070                     sci_putch@byte:	; 1 bytes @ 0x0
   216                           	global	sci_init@bd_rt
   217  0070                     sci_init@bd_rt:	; 2 bytes @ 0x0
   218  0070                     	ds	1
   219                           	global	??_sci_puts
   220  0071                     ??_sci_puts:	; 0 bytes @ 0x1
   221  0071                     	ds	1
   222                           	global	??_send
   223  0072                     ??_send:	; 0 bytes @ 0x2
   224                           	global	??_sci_init
   225  0072                     ??_sci_init:	; 0 bytes @ 0x2
   226  0072                     	ds	1
   227                           	global	sci_puts@aa
   228  0073                     sci_puts@aa:	; 1 bytes @ 0x3
   229  0073                     	ds	1
   230                           	global	send@temp
   231  0074                     send@temp:	; 1 bytes @ 0x4
   232  0074                     	ds	1
   233                           	global	send@x
   234  0075                     send@x:	; 1 bytes @ 0x5
   235  0075                     	ds	1
   236                           	global	??_lcd_init
   237  0076                     ??_lcd_init:	; 0 bytes @ 0x6
   238                           	global	??_lcd_puts
   239  0076                     ??_lcd_puts:	; 0 bytes @ 0x6
   240                           	global	??_lcd_clear
   241  0076                     ??_lcd_clear:	; 0 bytes @ 0x6
   242                           	global	??_lcd_putch
   243  0076                     ??_lcd_putch:	; 0 bytes @ 0x6
   244                           	global	?_lcd_goto
   245  0076                     ?_lcd_goto:	; 0 bytes @ 0x6
   246                           	global	lcd_putch@c
   247  0076                     lcd_putch@c:	; 1 bytes @ 0x6
   248                           	global	lcd_goto@pos
   249  0076                     lcd_goto@pos:	; 1 bytes @ 0x6
   250  0076                     	ds	1
   251                           	global	??_lcd_goto
   252  0077                     ??_lcd_goto:	; 0 bytes @ 0x7
   253                           	global	lcd_puts@s
   254  0077                     lcd_puts@s:	; 1 bytes @ 0x7
   255                           	global	lcd_goto@line
   256  0077                     lcd_goto@line:	; 1 bytes @ 0x7
   257  0077                     	ds	1
   258                           	global	??_main
   259  0078                     ??_main:	; 0 bytes @ 0x8
   260  0078                     	ds	1
   261                           	global	main@x
   262  0079                     main@x:	; 1 bytes @ 0x9
   263  0079                     	ds	1
   264                           	global	main@c
   265  007A                     main@c:	; 2 bytes @ 0xA
   266  007A                     	ds	2
   267 ;;Data sizes: Strings 19, constant 0, data 0, bss 0, persistent 0 stack 0
   268 ;;Auto spaces:   Size  Autos    Used
   269 ;; COMMON          14     12      13
   270 ;; BANK0           80      0       0
   271 ;; BANK1           80      0       0
   272 ;; BANK3           96      0       0
   273 ;; BANK2           96      0       0
   274                           
   275 ;;
   276 ;; Pointer list with targets:
   277                           
   278 ;; sci_puts@aa	PTR const unsigned char  size(1) Largest target is 7
   279 ;;		 -> STR_1(CODE[7]), 
   280 ;;
   281 ;; lcd_puts@s	PTR const unsigned char  size(1) Largest target is 12
   282 ;;		 -> STR_2(CODE[12]), 
   283 ;;
   284                           
   285                           
   286 ;;
   287 ;; Critical Paths under _main in COMMON
   288 ;;
   289 ;;   _main->_lcd_init
   290 ;;   _main->_lcd_puts
   291 ;;   _main->_lcd_goto
   292 ;;   _lcd_goto->_send
   293 ;;   _lcd_putch->_send
   294 ;;   _lcd_clear->_send
   295 ;;   _lcd_puts->_send
   296 ;;   _lcd_init->_send
   297 ;;   _send->_LCD_STROBE
   298 ;;   _sci_puts->_sci_putch
   299 ;;
   300 ;; Critical Paths under _main in BANK0
   301 ;;
   302 ;;   None.
   303 ;;
   304 ;; Critical Paths under _main in BANK1
   305 ;;
   306 ;;   None.
   307 ;;
   308 ;; Critical Paths under _main in BANK3
   309 ;;
   310 ;;   None.
   311 ;;
   312 ;; Critical Paths under _main in BANK2
   313 ;;
   314 ;;   None.
   315                           
   316 ;;
   317 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   318 ;;
   319                           
   320 ;;
   321 ;;Call Graph Tables:
   322 ;;
   323 ;; ---------------------------------------------------------------------------------
   324 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   325 ;; ---------------------------------------------------------------------------------
   326 ;; (0) _main                                                 4     4      0     810
   327 ;;                                              8 COMMON     4     4      0
   328 ;;                           _sci_init
   329 ;;                           _sci_puts
   330 ;;                           _lcd_init
   331 ;;                          _lcd_clear
   332 ;;                           _lcd_puts
   333 ;;                          _sci_putch
   334 ;;                          _sci_getch
   335 ;;                           _lcd_goto
   336 ;;                          _lcd_putch
   337 ;; ---------------------------------------------------------------------------------
   338 ;; (1) _lcd_goto                                             2     1      1     195
   339 ;;                                              6 COMMON     2     1      1
   340 ;;                               _send
   341 ;; ---------------------------------------------------------------------------------
   342 ;; (1) _lcd_putch                                            1     1      0     120
   343 ;;                                              6 COMMON     1     1      0
   344 ;;                               _send
   345 ;; ---------------------------------------------------------------------------------
   346 ;; (1) _lcd_clear                                            0     0      0     105
   347 ;;                               _send
   348 ;; ---------------------------------------------------------------------------------
   349 ;; (1) _lcd_puts                                             2     2      0     135
   350 ;;                                              6 COMMON     2     2      0
   351 ;;                               _send
   352 ;; ---------------------------------------------------------------------------------
   353 ;; (1) _lcd_init                                             2     2      0     105
   354 ;;                                              6 COMMON     2     2      0
   355 ;;                         _LCD_STROBE
   356 ;;                               _send
   357 ;; ---------------------------------------------------------------------------------
   358 ;; (2) _send                                                 4     4      0     105
   359 ;;                                              2 COMMON     4     4      0
   360 ;;                         _LCD_STROBE
   361 ;; ---------------------------------------------------------------------------------
   362 ;; (1) _sci_puts                                             3     3      0      45
   363 ;;                                              1 COMMON     3     3      0
   364 ;;                          _sci_putch
   365 ;; ---------------------------------------------------------------------------------
   366 ;; (3) _LCD_STROBE                                           2     2      0       0
   367 ;;                                              0 COMMON     2     2      0
   368 ;; ---------------------------------------------------------------------------------
   369 ;; (1) _sci_getch                                            0     0      0       0
   370 ;; ---------------------------------------------------------------------------------
   371 ;; (1) _sci_putch                                            1     1      0      15
   372 ;;                                              0 COMMON     1     1      0
   373 ;; ---------------------------------------------------------------------------------
   374 ;; (1) _sci_init                                             2     0      2      15
   375 ;;                                              0 COMMON     2     0      2
   376 ;; ---------------------------------------------------------------------------------
   377 ;; Estimated maximum stack depth 3
   378 ;; ---------------------------------------------------------------------------------
   379                           
   380 ;; Call Graph Graphs:
   381                           
   382 ;; _main (ROOT)
   383 ;;   _sci_init
   384 ;;   _sci_puts
   385 ;;     _sci_putch
   386 ;;   _lcd_init
   387 ;;     _LCD_STROBE
   388 ;;     _send
   389 ;;       _LCD_STROBE
   390 ;;   _lcd_clear
   391 ;;     _send
   392 ;;       _LCD_STROBE
   393 ;;   _lcd_puts
   394 ;;     _send
   395 ;;       _LCD_STROBE
   396 ;;   _sci_putch
   397 ;;   _sci_getch
   398 ;;   _lcd_goto
   399 ;;     _send
   400 ;;       _LCD_STROBE
   401 ;;   _lcd_putch
   402 ;;     _send
   403 ;;       _LCD_STROBE
   404 ;;
   405                           
   406 ;; Address spaces:
   407                           
   408 ;;Name               Size   Autos  Total    Cost      Usage
   409 ;;BITCOMMON            E      0       1       0        7.1%
   410 ;;EEDATA             100      0       0       0        0.0%
   411 ;;NULL                 0      0       0       0        0.0%
   412 ;;CODE                 0      0       0       0        0.0%
   413 ;;COMMON               E      C       D       1       92.9%
   414 ;;BITSFR0              0      0       0       1        0.0%
   415 ;;SFR0                 0      0       0       1        0.0%
   416 ;;BITSFR1              0      0       0       2        0.0%
   417 ;;SFR1                 0      0       0       2        0.0%
   418 ;;STACK                0      0       3       2        0.0%
   419 ;;ABS                  0      0       D       3        0.0%
   420 ;;BITBANK0            50      0       0       4        0.0%
   421 ;;BITSFR3              0      0       0       4        0.0%
   422 ;;SFR3                 0      0       0       4        0.0%
   423 ;;BANK0               50      0       0       5        0.0%
   424 ;;BITSFR2              0      0       0       5        0.0%
   425 ;;SFR2                 0      0       0       5        0.0%
   426 ;;BITBANK1            50      0       0       6        0.0%
   427 ;;BANK1               50      0       0       7        0.0%
   428 ;;BITBANK3            60      0       0       8        0.0%
   429 ;;BANK3               60      0       0       9        0.0%
   430 ;;BITBANK2            60      0       0      10        0.0%
   431 ;;BANK2               60      0       0      11        0.0%
   432 ;;DATA                 0      0      10      12        0.0%
   433                           
   434                           	global	_main
   435                           psect	maintext,global,class=CODE,delta=2
   436                           global __pmaintext
   437  079F                     __pmaintext:
   438                           
   439 ;; *************** function _main *****************
   440 ;; Defined at:
   441 ;;		line 7 in file "E:\EMBEDDED\Prolific\PIC\PIC_PGM_S\24_SERIAL_WATECHDOG TIMER\main.c"
   442 ;; Parameters:    Size  Location     Type
   443 ;;		None
   444 ;; Auto vars:     Size  Location     Type
   445 ;;  x               1    9[COMMON] unsigned char 
   446 ;;  c               2   10[COMMON] int 
   447 ;; Return value:  Size  Location     Type
   448 ;;		None               void
   449 ;; Registers used:
   450 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   451 ;; Tracked objects:
   452 ;;		On entry : 17F/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   456 ;;      Params:         0       0       0       0       0
   457 ;;      Locals:         3       0       0       0       0
   458 ;;      Temps:          1       0       0       0       0
   459 ;;      Totals:         4       0       0       0       0
   460 ;;Total ram usage:        4 bytes
   461 ;; Hardware stack levels required when called:    3
   462 ;; This function calls:
   463 ;;		_sci_init
   464 ;;		_sci_puts
   465 ;;		_lcd_init
   466 ;;		_lcd_clear
   467 ;;		_lcd_puts
   468 ;;		_sci_putch
   469 ;;		_sci_getch
   470 ;;		_lcd_goto
   471 ;;		_lcd_putch
   472 ;; This function is called by:
   473 ;;		Startup code after reset
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           psect	maintext
   477                           	file	"E:\EMBEDDED\Prolific\PIC\PIC_PGM_S\24_SERIAL_WATECHDOG TIMER\main.c"
   478                           	line	7
   479                           	global	__size_of_main
   480  0061                     	__size_of_main	equ	__end_of_main-_main
   481                           	
   482  079F                     _main:	
   483                           	opt	stack 5
   484                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   485                           	line	8
   486                           	
   487  079F                     l4225:	
   488                           ;main.c: 8: sci_init(25);
   489  079F  3019               	movlw	low(019h)
   490  07A0  00F0               	movwf	(?_sci_init)
   491  07A1  3000               	movlw	high(019h)
   492  07A2  00F1               	movwf	((?_sci_init))+1
   493  07A3  120A  118A  2667   	fcall	_sci_init
              120A  118A         
   494                           	line	9
   495                           	
   496  07A8                     l4227:	
   497                           ;main.c: 9: sci_puts("serial");
   498  07A8  300D               	movlw	((STR_1-__stringbase))&0ffh
   499  07A9  120A  118A  26A5   	fcall	_sci_puts
              120A  118A         
   500                           	line	10
   501                           	
   502  07AE                     l4229:	
   503                           ;main.c: 10: lcd_init();
   504  07AE  120A  118A  2755   	fcall	_lcd_init
              120A  118A         
   505                           	line	11
   506                           	
   507  07B3                     l4231:	
   508                           ;main.c: 11: lcd_clear();
   509  07B3  120A  118A  2629   	fcall	_lcd_clear
              120A  118A         
   510                           	line	12
   511                           	
   512  07B8                     l4233:	
   513                           ;main.c: 12: lcd_puts("serial data");
   514  07B8  3001               	movlw	((STR_2-__stringbase))&0ffh
   515  07B9  120A  118A  2683   	fcall	_lcd_puts
              120A  118A         
   516                           	line	14
   517                           	
   518  07BE                     l4235:	
   519                           ;main.c: 14: int c=0;
   520  07BE  01FA               	clrf	(main@c)
   521  07BF  01FB               	clrf	(main@c+1)
   522  07C0  2FC1               	goto	l4237
   523                           	line	16
   524                           ;main.c: 16: while(1)
   525                           	
   526  07C1                     l2164:	
   527                           	line	18
   528                           	
   529  07C1                     l4237:	
   530                           ;main.c: 17: {
   531                           ;main.c: 18: sci_putch(c+'0');
   532  07C1  087A               	movf	(main@c),w
   533  07C2  3E30               	addlw	030h
   534  07C3  120A  118A  263A   	fcall	_sci_putch
              120A  118A         
   535                           	line	19
   536                           	
   537  07C8                     l4239:	
   538                           # 19 "E:\EMBEDDED\Prolific\PIC\PIC_PGM_S\24_SERIAL_WATECHDOG TIMER\main.c"
   539  07C8                     setwdt ;#
   540                           psect	maintext
   541                           	line	20
   542                           	
   543  07C8                     l4241:	
   544                           ;main.c: 20: char x=sci_getch();
   545  07C8  120A  118A  2656   	fcall	_sci_getch
              120A  118A         
   546  07CD  00F8               	movwf	(??_main+0)+0
   547  07CE  0878               	movf	(??_main+0)+0,w
   548  07CF  00F9               	movwf	(main@x)
   549                           	line	21
   550                           	
   551  07D0                     l4243:	
   552                           # 21 "E:\EMBEDDED\Prolific\PIC\PIC_PGM_S\24_SERIAL_WATECHDOG TIMER\main.c"
   553  07D0  0064               clrwdt ;#
   554                           psect	maintext
   555                           	line	22
   556                           	
   557  07D1                     l4245:	
   558                           ;main.c: 22: sci_putch(x);
   559  07D1  0879               	movf	(main@x),w
   560  07D2  120A  118A  263A   	fcall	_sci_putch
              120A  118A         
   561                           	line	23
   562                           	
   563  07D7                     l4247:	
   564                           ;main.c: 23: lcd_goto(2,0);
   565  07D7  01F6               	clrf	(?_lcd_goto)
   566  07D8  3002               	movlw	(02h)
   567  07D9  120A  118A  26CF   	fcall	_lcd_goto
              120A  118A         
   568                           	line	24
   569                           	
   570  07DE                     l4249:	
   571                           ;main.c: 24: lcd_putch(x);
   572  07DE  0879               	movf	(main@x),w
   573  07DF  120A  118A  2631   	fcall	_lcd_putch
              120A  118A         
   574                           	line	25
   575                           	
   576  07E4                     l4251:	
   577                           ;main.c: 25: lcd_putch(c+'0');
   578  07E4  087A               	movf	(main@c),w
   579  07E5  3E30               	addlw	030h
   580  07E6  120A  118A  2631   	fcall	_lcd_putch
              120A  118A         
   581                           	line	26
   582                           	
   583  07EB                     l4253:	
   584                           ;main.c: 26: c++;
   585  07EB  3001               	movlw	low(01h)
   586  07EC  07FA               	addwf	(main@c),f
   587  07ED  1803               	skipnc
   588  07EE  0AFB               	incf	(main@c+1),f
   589  07EF  3000               	movlw	high(01h)
   590  07F0  07FB               	addwf	(main@c+1),f
   591                           	line	27
   592                           	
   593  07F1                     l4255:	
   594                           ;main.c: 27: if(c==9)
   595  07F1  3009               	movlw	09h
   596  07F2  067A               	xorwf	(main@c),w
   597  07F3  047B               	iorwf	(main@c+1),w
   598  07F4  1D03               	skipz
   599  07F5  2FF7               	goto	u2361
   600  07F6  2FF8               	goto	u2360
   601  07F7                     u2361:
   602  07F7  2FC1               	goto	l4237
   603  07F8                     u2360:
   604                           	line	28
   605                           	
   606  07F8                     l4257:	
   607                           ;main.c: 28: c=0;
   608  07F8  01FA               	clrf	(main@c)
   609  07F9  01FB               	clrf	(main@c+1)
   610  07FA  2FC1               	goto	l4237
   611                           	
   612  07FB                     l2165:	
   613  07FB  2FC1               	goto	l4237
   614                           	line	29
   615                           	
   616  07FC                     l2166:	
   617                           	line	16
   618  07FC  2FC1               	goto	l4237
   619                           	
   620  07FD                     l2167:	
   621                           	line	30
   622                           	
   623  07FD                     l2168:	
   624                           	global	start
   625  07FD  120A  118A  2800   	ljmp	start
   626                           	opt stack 0
   627                           GLOBAL	__end_of_main
   628  0800                     	__end_of_main:
   629 ;; =============== function _main ends ============
   630                           
   631                           	signat	_main,88
   632                           	global	_lcd_goto
   633                           psect	text167,local,class=CODE,delta=2
   634                           global __ptext167
   635  06CF                     __ptext167:
   636                           
   637 ;; *************** function _lcd_goto *****************
   638 ;; Defined at:
   639 ;;		line 77 in file "E:\EMBEDDED\Prolific\PIC\PIC_PGM_S\24_SERIAL_WATECHDOG TIMER\lcd.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;  line            1    wreg     unsigned char 
   642 ;;  pos             1    6[COMMON] unsigned char 
   643 ;; Auto vars:     Size  Location     Type
   644 ;;  line            1    7[COMMON] unsigned char 
   645 ;; Return value:  Size  Location     Type
   646 ;;		None               void
   647 ;; Registers used:
   648 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   654 ;;      Params:         1       0       0       0       0
   655 ;;      Locals:         1       0       0       0       0
   656 ;;      Temps:          0       0       0       0       0
   657 ;;      Totals:         2       0       0       0       0
   658 ;;Total ram usage:        2 bytes
   659 ;; Hardware stack levels used:    1
   660 ;; Hardware stack levels required when called:    2
   661 ;; This function calls:
   662 ;;		_send
   663 ;; This function is called by:
   664 ;;		_main
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           psect	text167
   668                           	file	"E:\EMBEDDED\Prolific\PIC\PIC_PGM_S\24_SERIAL_WATECHDOG TIMER\lcd.c"
   669                           	line	77
   670                           	global	__size_of_lcd_goto
   671  003F                     	__size_of_lcd_goto	equ	__end_of_lcd_goto-_lcd_goto
   672                           	
   673  06CF                     _lcd_goto:	
   674                           	opt	stack 5
   675                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   676                           ;lcd_goto@line stored from wreg
   677  06CF  00F7               	movwf	(lcd_goto@line)
   678                           	line	78
   679                           	
   680  06D0                     l4209:	
   681                           ;lcd.c: 78: switch(line)
   682  06D0  2EFF               	goto	l4223
   683                           	line	80
   684                           ;lcd.c: 79: {
   685                           ;lcd.c: 80: case 1:
   686                           	
   687  06D1                     l735:	
   688                           	line	81
   689                           ;lcd.c: 81: mode=0;
   690  06D1  107C               	bcf	(_mode/8),(_mode)&7
   691                           	line	82
   692                           	
   693  06D2                     l4211:	
   694                           ;lcd.c: 82: send(0X80+pos);
   695  06D2  0876               	movf	(lcd_goto@pos),w
   696  06D3  3E80               	addlw	080h
   697  06D4  120A  118A  270E   	fcall	_send
              120A  118A         
   698                           	line	83
   699                           ;lcd.c: 83: break;
   700  06D9  2F0D               	goto	l741
   701                           	line	85
   702                           ;lcd.c: 85: case 2:
   703                           	
   704  06DA                     l737:	
   705                           	line	86
   706                           ;lcd.c: 86: mode=0;
   707  06DA  107C               	bcf	(_mode/8),(_mode)&7
   708                           	line	87
   709                           	
   710  06DB                     l4213:	
   711                           ;lcd.c: 87: send(0XC0+pos);
   712  06DB  0876               	movf	(lcd_goto@pos),w
   713  06DC  3EC0               	addlw	0C0h
   714  06DD  120A  118A  270E   	fcall	_send
              120A  118A         
   715                           	line	88
   716                           ;lcd.c: 88: break;
   717  06E2  2F0D               	goto	l741
   718                           	line	90
   719                           ;lcd.c: 90: case 3:
   720                           	
   721  06E3                     l738:	
   722                           	line	91
   723                           ;lcd.c: 91: mode=0;
   724  06E3  107C               	bcf	(_mode/8),(_mode)&7
   725                           	line	92
   726                           	
   727  06E4                     l4215:	
   728                           ;lcd.c: 92: send(0X94+pos);
   729  06E4  0876               	movf	(lcd_goto@pos),w
   730  06E5  3E94               	addlw	094h
   731  06E6  120A  118A  270E   	fcall	_send
              120A  118A         
   732                           	line	93
   733                           ;lcd.c: 93: break;
   734  06EB  2F0D               	goto	l741
   735                           	line	95
   736                           ;lcd.c: 95: case 4:
   737                           	
   738  06EC                     l739:	
   739                           	line	96
   740                           ;lcd.c: 96: mode=0;
   741  06EC  107C               	bcf	(_mode/8),(_mode)&7
   742                           	line	97
   743                           	
   744  06ED                     l4217:	
   745                           ;lcd.c: 97: send(0XD4+pos);
   746  06ED  0876               	movf	(lcd_goto@pos),w
   747  06EE  3ED4               	addlw	0D4h
   748  06EF  120A  118A  270E   	fcall	_send
              120A  118A         
   749                           	line	98
   750                           ;lcd.c: 98: break;
   751  06F4  2F0D               	goto	l741
   752                           	line	100
   753                           ;lcd.c: 100: default:
   754                           	
   755  06F5                     l740:	
   756                           	line	101
   757                           ;lcd.c: 101: mode=0;
   758  06F5  107C               	bcf	(_mode/8),(_mode)&7
   759                           	line	102
   760                           	
   761  06F6                     l4219:	
   762                           ;lcd.c: 102: send(0XD4+pos);
   763  06F6  0876               	movf	(lcd_goto@pos),w
   764  06F7  3ED4               	addlw	0D4h
   765  06F8  120A  118A  270E   	fcall	_send
              120A  118A         
   766                           	line	103
   767                           ;lcd.c: 103: break;
   768  06FD  2F0D               	goto	l741
   769                           	line	104
   770                           	
   771  06FE                     l4221:	
   772                           ;lcd.c: 104: }
   773  06FE  2F0D               	goto	l741
   774                           	line	78
   775                           	
   776  06FF                     l734:	
   777                           	
   778  06FF                     l4223:	
   779  06FF  0877               	movf	(lcd_goto@line),w
   780                           	; Switch size 1, requested type "space"
   781                           ; Number of cases is 4, Range of values is 1 to 4
   782                           ; switch strategies available:
   783                           ; Name         Instructions Cycles
   784                           ; simple_byte           13     7 (average)
   785                           ; direct_byte           23    11 (fixed)
   786                           ; jumptable            263     9 (fixed)
   787                           ;	Chosen strategy is simple_byte
   788                           
   789                           	opt asmopt_off
   790  0700  3A01               	xorlw	1^0	; case 1
   791  0701  1903               	skipnz
   792  0702  2ED1               	goto	l735
   793  0703  3A03               	xorlw	2^1	; case 2
   794  0704  1903               	skipnz
   795  0705  2EDA               	goto	l737
   796  0706  3A01               	xorlw	3^2	; case 3
   797  0707  1903               	skipnz
   798  0708  2EE3               	goto	l738
   799  0709  3A07               	xorlw	4^3	; case 4
   800  070A  1903               	skipnz
   801  070B  2EEC               	goto	l739
   802  070C  2EF5               	goto	l740
   803                           	opt asmopt_on
   804                           
   805                           	line	104
   806                           	
   807  070D                     l736:	
   808                           	line	105
   809                           	
   810  070D                     l741:	
   811  070D  0008               	return
   812                           	opt stack 0
   813                           GLOBAL	__end_of_lcd_goto
   814  070E                     	__end_of_lcd_goto:
   815 ;; =============== function _lcd_goto ends ============
   816                           
   817                           	signat	_lcd_goto,8312
   818                           	global	_lcd_putch
   819                           psect	text168,local,class=CODE,delta=2
   820                           global __ptext168
   821  0631                     __ptext168:
   822                           
   823 ;; *************** function _lcd_putch *****************
   824 ;; Defined at:
   825 ;;		line 72 in file "E:\EMBEDDED\Prolific\PIC\PIC_PGM_S\24_SERIAL_WATECHDOG TIMER\lcd.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;  c               1    wreg     unsigned char 
   828 ;; Auto vars:     Size  Location     Type
   829 ;;  c               1    6[COMMON] unsigned char 
   830 ;; Return value:  Size  Location     Type
   831 ;;		None               void
   832 ;; Registers used:
   833 ;;		wreg, status,2, status,0, pclath, cstack
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   839 ;;      Params:         0       0       0       0       0
   840 ;;      Locals:         1       0       0       0       0
   841 ;;      Temps:          0       0       0       0       0
   842 ;;      Totals:         1       0       0       0       0
   843 ;;Total ram usage:        1 bytes
   844 ;; Hardware stack levels used:    1
   845 ;; Hardware stack levels required when called:    2
   846 ;; This function calls:
   847 ;;		_send
   848 ;; This function is called by:
   849 ;;		_main
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           psect	text168
   853                           	file	"E:\EMBEDDED\Prolific\PIC\PIC_PGM_S\24_SERIAL_WATECHDOG TIMER\lcd.c"
   854                           	line	72
   855                           	global	__size_of_lcd_putch
   856  0009                     	__size_of_lcd_putch	equ	__end_of_lcd_putch-_lcd_putch
   857                           	
   858  0631                     _lcd_putch:	
   859                           	opt	stack 5
   860                           ; Regs used in _lcd_putch: [wreg+status,2+status,0+pclath+cstack]
   861                           ;lcd_putch@c stored from wreg
   862  0631  00F6               	movwf	(lcd_putch@c)
   863                           	line	73
   864                           	
   865  0632                     l4205:	
   866                           ;lcd.c: 73: mode = 1;
   867  0632  147C               	bsf	(_mode/8),(_mode)&7
   868                           	line	74
   869                           	
   870  0633                     l4207:	
   871                           ;lcd.c: 74: send( c );
   872  0633  0876               	movf	(lcd_putch@c),w
   873  0634  120A  118A  270E   	fcall	_send
              120A  118A         
   874                           	line	75
   875                           	
   876  0639                     l731:	
   877  0639  0008               	return
   878                           	opt stack 0
   879                           GLOBAL	__end_of_lcd_putch
   880  063A                     	__end_of_lcd_putch:
   881 ;; =============== function _lcd_putch ends ============
   882                           
   883                           	signat	_lcd_putch,4216
   884                           	global	_lcd_clear
   885                           psect	text169,local,class=CODE,delta=2
   886                           global __ptext169
   887  0629                     __ptext169:
   888                           
   889 ;; *************** function _lcd_clear *****************
   890 ;; Defined at:
   891 ;;		line 67 in file "E:\EMBEDDED\Prolific\PIC\PIC_PGM_S\24_SERIAL_WATECHDOG TIMER\lcd.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;		None
   894 ;; Auto vars:     Size  Location     Type
   895 ;;		None
   896 ;; Return value:  Size  Location     Type
   897 ;;		None               void
   898 ;; Registers used:
   899 ;;		wreg, status,2, status,0, pclath, cstack
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   905 ;;      Params:         0       0       0       0       0
   906 ;;      Locals:         0       0       0       0       0
   907 ;;      Temps:          0       0       0       0       0
   908 ;;      Totals:         0       0       0       0       0
   909 ;;Total ram usage:        0 bytes
   910 ;; Hardware stack levels used:    1
   911 ;; Hardware stack levels required when called:    2
   912 ;; This function calls:
   913 ;;		_send
   914 ;; This function is called by:
   915 ;;		_main
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           psect	text169
   919                           	file	"E:\EMBEDDED\Prolific\PIC\PIC_PGM_S\24_SERIAL_WATECHDOG TIMER\lcd.c"
   920                           	line	67
   921                           	global	__size_of_lcd_clear
   922  0008                     	__size_of_lcd_clear	equ	__end_of_lcd_clear-_lcd_clear
   923                           	
   924  0629                     _lcd_clear:	
   925                           	opt	stack 5
   926                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
   927                           	line	68
   928                           	
   929  0629                     l4201:	
   930                           ;lcd.c: 68: mode = 0;
   931  0629  107C               	bcf	(_mode/8),(_mode)&7
   932                           	line	69
   933                           	
   934  062A                     l4203:	
   935                           ;lcd.c: 69: send(0x01);
   936  062A  3001               	movlw	(01h)
   937  062B  120A  118A  270E   	fcall	_send
              120A  118A         
   938                           	line	70
   939                           	
   940  0630                     l728:	
   941  0630  0008               	return
   942                           	opt stack 0
   943                           GLOBAL	__end_of_lcd_clear
   944  0631                     	__end_of_lcd_clear:
   945 ;; =============== function _lcd_clear ends ============
   946                           
   947                           	signat	_lcd_clear,88
   948                           	global	_lcd_puts
   949                           psect	text170,local,class=CODE,delta=2
   950                           global __ptext170
   951  0683                     __ptext170:
   952                           
   953 ;; *************** function _lcd_puts *****************
   954 ;; Defined at:
   955 ;;		line 60 in file "E:\EMBEDDED\Prolific\PIC\PIC_PGM_S\24_SERIAL_WATECHDOG TIMER\lcd.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;  s               1    wreg     PTR const unsigned char 
   958 ;;		 -> STR_2(12), 
   959 ;; Auto vars:     Size  Location     Type
   960 ;;  s               1    7[COMMON] PTR const unsigned char 
   961 ;;		 -> STR_2(12), 
   962 ;; Return value:  Size  Location     Type
   963 ;;		None               void
   964 ;; Registers used:
   965 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   971 ;;      Params:         0       0       0       0       0
   972 ;;      Locals:         1       0       0       0       0
   973 ;;      Temps:          1       0       0       0       0
   974 ;;      Totals:         2       0       0       0       0
   975 ;;Total ram usage:        2 bytes
   976 ;; Hardware stack levels used:    1
   977 ;; Hardware stack levels required when called:    2
   978 ;; This function calls:
   979 ;;		_send
   980 ;; This function is called by:
   981 ;;		_main
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           psect	text170
   985                           	file	"E:\EMBEDDED\Prolific\PIC\PIC_PGM_S\24_SERIAL_WATECHDOG TIMER\lcd.c"
   986                           	line	60
   987                           	global	__size_of_lcd_puts
   988  0022                     	__size_of_lcd_puts	equ	__end_of_lcd_puts-_lcd_puts
   989                           	
   990  0683                     _lcd_puts:	
   991                           	opt	stack 5
   992                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   993                           ;lcd_puts@s stored from wreg
   994  0683  00F7               	movwf	(lcd_puts@s)
   995                           	line	61
   996                           	
   997  0684                     l4193:	
   998                           ;lcd.c: 61: mode = 1;
   999  0684  147C               	bsf	(_mode/8),(_mode)&7
  1000                           	line	62
  1001                           ;lcd.c: 62: while(*s)
  1002  0685  2E97               	goto	l4199
  1003                           	
  1004  0686                     l723:	
  1005                           	line	63
  1006                           	
  1007  0686                     l4195:	
  1008                           ;lcd.c: 63: send(*s++);
  1009  0686  0877               	movf	(lcd_puts@s),w
  1010  0687  0084               	movwf	fsr0
  1011  0688  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1012  068D  120A  118A  270E   	fcall	_send
              120A  118A         
  1013                           	
  1014  0692                     l4197:	
  1015  0692  3001               	movlw	(01h)
  1016  0693  00F6               	movwf	(??_lcd_puts+0)+0
  1017  0694  0876               	movf	(??_lcd_puts+0)+0,w
  1018  0695  07F7               	addwf	(lcd_puts@s),f
  1019  0696  2E97               	goto	l4199
  1020                           	
  1021  0697                     l722:	
  1022                           	line	62
  1023                           	
  1024  0697                     l4199:	
  1025  0697  0877               	movf	(lcd_puts@s),w
  1026  0698  0084               	movwf	fsr0
  1027  0699  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1028  069E  3800               	iorlw	0
  1029  069F  1D03               	skipz
  1030  06A0  2EA2               	goto	u2351
  1031  06A1  2EA3               	goto	u2350
  1032  06A2                     u2351:
  1033  06A2  2E86               	goto	l4195
  1034  06A3                     u2350:
  1035  06A3  2EA4               	goto	l725
  1036                           	
  1037  06A4                     l724:	
  1038                           	line	64
  1039                           	
  1040  06A4                     l725:	
  1041  06A4  0008               	return
  1042                           	opt stack 0
  1043                           GLOBAL	__end_of_lcd_puts
  1044  06A5                     	__end_of_lcd_puts:
  1045 ;; =============== function _lcd_puts ends ============
  1046                           
  1047                           	signat	_lcd_puts,4216
  1048                           	global	_lcd_init
  1049                           psect	text171,local,class=CODE,delta=2
  1050                           global __ptext171
  1051  0755                     __ptext171:
  1052                           
  1053 ;; *************** function _lcd_init *****************
  1054 ;; Defined at:
  1055 ;;		line 13 in file "E:\EMBEDDED\Prolific\PIC\PIC_PGM_S\24_SERIAL_WATECHDOG TIMER\lcd.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;		None
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;		None
  1060 ;; Return value:  Size  Location     Type
  1061 ;;		None               void
  1062 ;; Registers used:
  1063 ;;		wreg, status,2, status,0, pclath, cstack
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1069 ;;      Params:         0       0       0       0       0
  1070 ;;      Locals:         0       0       0       0       0
  1071 ;;      Temps:          2       0       0       0       0
  1072 ;;      Totals:         2       0       0       0       0
  1073 ;;Total ram usage:        2 bytes
  1074 ;; Hardware stack levels used:    1
  1075 ;; Hardware stack levels required when called:    2
  1076 ;; This function calls:
  1077 ;;		_LCD_STROBE
  1078 ;;		_send
  1079 ;; This function is called by:
  1080 ;;		_main
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           psect	text171
  1084                           	file	"E:\EMBEDDED\Prolific\PIC\PIC_PGM_S\24_SERIAL_WATECHDOG TIMER\lcd.c"
  1085                           	line	13
  1086                           	global	__size_of_lcd_init
  1087  004A                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  1088                           	
  1089  0755                     _lcd_init:	
  1090                           	opt	stack 5
  1091                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1092                           	line	14
  1093                           	
  1094  0755                     l4179:	
  1095                           ;lcd.c: 14: TRISD=0;
  1096  0755  1683               	bsf	status, 5	;RP0=1, select bank1
  1097  0756  1303               	bcf	status, 6	;RP1=0, select bank1
  1098  0757  0188               	clrf	(136)^080h	;volatile
  1099                           	line	15
  1100                           	
  1101  0758                     l4181:	
  1102                           ;lcd.c: 15: _delay((unsigned long)((100)*(4000000/4000.0)));
  1103                           	opt asmopt_off
  1104  0758  3082               movlw	130
  1105  0759  00F7               movwf	((??_lcd_init+0)+0+1),f
  1106  075A  30DD               	movlw	221
  1107  075B  00F6               movwf	((??_lcd_init+0)+0),f
  1108  075C                     u2377:
  1109  075C  0BF6               	decfsz	((??_lcd_init+0)+0),f
  1110  075D  2F5C               	goto	u2377
  1111  075E  0BF7               	decfsz	((??_lcd_init+0)+0+1),f
  1112  075F  2F5C               	goto	u2377
  1113  0760  2F61               	nop2
  1114                           opt asmopt_on
  1115                           
  1116                           	line	16
  1117                           	
  1118  0761                     l4183:	
  1119                           ;lcd.c: 16: RD2=0;
  1120  0761  1283               	bcf	status, 5	;RP0=0, select bank0
  1121  0762  1303               	bcf	status, 6	;RP1=0, select bank0
  1122  0763  1108               	bcf	(66/8),(66)&7
  1123                           	line	17
  1124                           	
  1125  0764                     l4185:	
  1126                           ;lcd.c: 17: mode=0;
  1127  0764  107C               	bcf	(_mode/8),(_mode)&7
  1128                           	line	18
  1129                           	
  1130  0765                     l4187:	
  1131                           ;lcd.c: 18: RD3=0;
  1132  0765  1188               	bcf	(67/8),(67)&7
  1133                           	line	20
  1134                           ;lcd.c: 20: PORTD=(PORTD&0X0F)|0x30;
  1135  0766  0808               	movf	(8),w
  1136  0767  390F               	andlw	0Fh
  1137  0768  3830               	iorlw	030h
  1138  0769  0088               	movwf	(8)	;volatile
  1139                           	line	21
  1140                           	
  1141  076A                     l4189:	
  1142                           ;lcd.c: 21: LCD_STROBE();
  1143  076A  120A  118A  2646   	fcall	_LCD_STROBE
              120A  118A         
  1144                           	line	22
  1145                           	
  1146  076F                     l4191:	
  1147                           ;lcd.c: 22: PORTD=(PORTD&0X0F)|0x20;
  1148  076F  1283               	bcf	status, 5	;RP0=0, select bank0
  1149  0770  1303               	bcf	status, 6	;RP1=0, select bank0
  1150  0771  0808               	movf	(8),w
  1151  0772  390F               	andlw	0Fh
  1152  0773  3820               	iorlw	020h
  1153  0774  0088               	movwf	(8)	;volatile
  1154                           	line	23
  1155                           ;lcd.c: 23: LCD_STROBE();
  1156  0775  120A  118A  2646   	fcall	_LCD_STROBE
              120A  118A         
  1157                           	line	24
  1158                           ;lcd.c: 24: send(0x28);
  1159  077A  3028               	movlw	(028h)
  1160  077B  120A  118A  270E   	fcall	_send
              120A  118A         
  1161                           	line	25
  1162                           ;lcd.c: 25: send(0x08);
  1163  0780  3008               	movlw	(08h)
  1164  0781  120A  118A  270E   	fcall	_send
              120A  118A         
  1165                           	line	26
  1166                           ;lcd.c: 26: send(0x01);
  1167  0786  3001               	movlw	(01h)
  1168  0787  120A  118A  270E   	fcall	_send
              120A  118A         
  1169                           	line	27
  1170                           ;lcd.c: 27: send(0x06);
  1171  078C  3006               	movlw	(06h)
  1172  078D  120A  118A  270E   	fcall	_send
              120A  118A         
  1173                           	line	28
  1174                           ;lcd.c: 28: send(0x80);
  1175  0792  3080               	movlw	(080h)
  1176  0793  120A  118A  270E   	fcall	_send
              120A  118A         
  1177                           	line	29
  1178                           ;lcd.c: 29: send(0x0c);
  1179  0798  300C               	movlw	(0Ch)
  1180  0799  120A  118A  270E   	fcall	_send
              120A  118A         
  1181                           	line	30
  1182                           	
  1183  079E                     l709:	
  1184  079E  0008               	return
  1185                           	opt stack 0
  1186                           GLOBAL	__end_of_lcd_init
  1187  079F                     	__end_of_lcd_init:
  1188 ;; =============== function _lcd_init ends ============
  1189                           
  1190                           	signat	_lcd_init,88
  1191                           	global	_send
  1192                           psect	text172,local,class=CODE,delta=2
  1193                           global __ptext172
  1194  070E                     __ptext172:
  1195                           
  1196 ;; *************** function _send *****************
  1197 ;; Defined at:
  1198 ;;		line 38 in file "E:\EMBEDDED\Prolific\PIC\PIC_PGM_S\24_SERIAL_WATECHDOG TIMER\lcd.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;  x               1    wreg     unsigned char 
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;  x               1    5[COMMON] unsigned char 
  1203 ;;  temp            1    4[COMMON] unsigned char 
  1204 ;; Return value:  Size  Location     Type
  1205 ;;		None               void
  1206 ;; Registers used:
  1207 ;;		wreg, status,2, status,0, pclath, cstack
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1213 ;;      Params:         0       0       0       0       0
  1214 ;;      Locals:         2       0       0       0       0
  1215 ;;      Temps:          2       0       0       0       0
  1216 ;;      Totals:         4       0       0       0       0
  1217 ;;Total ram usage:        4 bytes
  1218 ;; Hardware stack levels used:    1
  1219 ;; Hardware stack levels required when called:    1
  1220 ;; This function calls:
  1221 ;;		_LCD_STROBE
  1222 ;; This function is called by:
  1223 ;;		_lcd_init
  1224 ;;		_lcd_puts
  1225 ;;		_lcd_clear
  1226 ;;		_lcd_putch
  1227 ;;		_lcd_goto
  1228 ;;		_curser
  1229 ;;		_display_shift
  1230 ;;		_curser_shift_left
  1231 ;;		_curser_shift_right
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           psect	text172
  1235                           	file	"E:\EMBEDDED\Prolific\PIC\PIC_PGM_S\24_SERIAL_WATECHDOG TIMER\lcd.c"
  1236                           	line	38
  1237                           	global	__size_of_send
  1238  0047                     	__size_of_send	equ	__end_of_send-_send
  1239                           	
  1240  070E                     _send:	
  1241                           	opt	stack 5
  1242                           ; Regs used in _send: [wreg+status,2+status,0+pclath+cstack]
  1243                           ;send@x stored from wreg
  1244                           	line	40
  1245  070E  00F5               	movwf	(send@x)
  1246                           	
  1247  070F                     l4153:	
  1248                           ;lcd.c: 39: char temp;
  1249                           ;lcd.c: 40: temp=x;
  1250  070F  0875               	movf	(send@x),w
  1251  0710  00F2               	movwf	(??_send+0)+0
  1252  0711  0872               	movf	(??_send+0)+0,w
  1253  0712  00F4               	movwf	(send@temp)
  1254                           	line	41
  1255                           	
  1256  0713                     l4155:	
  1257                           ;lcd.c: 41: x=x&0XF0;
  1258  0713  0875               	movf	(send@x),w
  1259  0714  39F0               	andlw	0F0h
  1260  0715  00F2               	movwf	(??_send+0)+0
  1261  0716  0872               	movf	(??_send+0)+0,w
  1262  0717  00F5               	movwf	(send@x)
  1263                           	line	42
  1264                           	
  1265  0718                     l4157:	
  1266                           ;lcd.c: 42: PORTD=(PORTD&0X0F)|x;
  1267  0718  1283               	bcf	status, 5	;RP0=0, select bank0
  1268  0719  1303               	bcf	status, 6	;RP1=0, select bank0
  1269  071A  0808               	movf	(8),w
  1270  071B  390F               	andlw	0Fh
  1271  071C  0475               	iorwf	(send@x),w
  1272  071D  0088               	movwf	(8)	;volatile
  1273                           	line	43
  1274                           	
  1275  071E                     l4159:	
  1276                           ;lcd.c: 43: if (mode==0)
  1277  071E  187C               	btfsc	(_mode/8),(_mode)&7
  1278  071F  2F21               	goto	u2321
  1279  0720  2F22               	goto	u2320
  1280  0721                     u2321:
  1281  0721  2F24               	goto	l715
  1282  0722                     u2320:
  1283                           	line	44
  1284                           	
  1285  0722                     l4161:	
  1286                           ;lcd.c: 44: RD2=0;
  1287  0722  1108               	bcf	(66/8),(66)&7
  1288  0723  2F26               	goto	l4163
  1289                           	line	45
  1290                           	
  1291  0724                     l715:	
  1292                           	line	46
  1293                           ;lcd.c: 45: else
  1294                           ;lcd.c: 46: RD2=1;
  1295  0724  1508               	bsf	(66/8),(66)&7
  1296  0725  2F26               	goto	l4163
  1297                           	
  1298  0726                     l716:	
  1299                           	line	47
  1300                           	
  1301  0726                     l4163:	
  1302                           ;lcd.c: 47: LCD_STROBE();
  1303  0726  120A  118A  2646   	fcall	_LCD_STROBE
              120A  118A         
  1304                           	line	48
  1305                           	
  1306  072B                     l4165:	
  1307                           ;lcd.c: 48: x=temp;
  1308  072B  0874               	movf	(send@temp),w
  1309  072C  00F2               	movwf	(??_send+0)+0
  1310  072D  0872               	movf	(??_send+0)+0,w
  1311  072E  00F5               	movwf	(send@x)
  1312                           	line	49
  1313                           	
  1314  072F                     l4167:	
  1315                           ;lcd.c: 49: x=x<<4;
  1316  072F  0875               	movf	(send@x),w
  1317  0730  00F2               	movwf	(??_send+0)+0
  1318  0731  3003               	movlw	(04h)-1
  1319  0732                     u2335:
  1320  0732  1003               	clrc
  1321  0733  0DF2               	rlf	(??_send+0)+0,f
  1322  0734  3EFF               	addlw	-1
  1323  0735  1D03               	skipz
  1324  0736  2F32               	goto	u2335
  1325  0737  1003               	clrc
  1326  0738  0D72               	rlf	(??_send+0)+0,w
  1327  0739  00F3               	movwf	(??_send+1)+0
  1328  073A  0873               	movf	(??_send+1)+0,w
  1329  073B  00F5               	movwf	(send@x)
  1330                           	line	50
  1331                           	
  1332  073C                     l4169:	
  1333                           ;lcd.c: 50: x=x&0XF0;
  1334  073C  0875               	movf	(send@x),w
  1335  073D  39F0               	andlw	0F0h
  1336  073E  00F2               	movwf	(??_send+0)+0
  1337  073F  0872               	movf	(??_send+0)+0,w
  1338  0740  00F5               	movwf	(send@x)
  1339                           	line	51
  1340                           	
  1341  0741                     l4171:	
  1342                           ;lcd.c: 51: PORTD=(PORTD&0X0F)|x;
  1343  0741  1283               	bcf	status, 5	;RP0=0, select bank0
  1344  0742  1303               	bcf	status, 6	;RP1=0, select bank0
  1345  0743  0808               	movf	(8),w
  1346  0744  390F               	andlw	0Fh
  1347  0745  0475               	iorwf	(send@x),w
  1348  0746  0088               	movwf	(8)	;volatile
  1349                           	line	52
  1350                           	
  1351  0747                     l4173:	
  1352                           ;lcd.c: 52: if(mode==0)
  1353  0747  187C               	btfsc	(_mode/8),(_mode)&7
  1354  0748  2F4A               	goto	u2341
  1355  0749  2F4B               	goto	u2340
  1356  074A                     u2341:
  1357  074A  2F4D               	goto	l717
  1358  074B                     u2340:
  1359                           	line	53
  1360                           	
  1361  074B                     l4175:	
  1362                           ;lcd.c: 53: RD2=0;
  1363  074B  1108               	bcf	(66/8),(66)&7
  1364  074C  2F4F               	goto	l4177
  1365                           	line	54
  1366                           	
  1367  074D                     l717:	
  1368                           	line	55
  1369                           ;lcd.c: 54: else
  1370                           ;lcd.c: 55: RD2=1;
  1371  074D  1508               	bsf	(66/8),(66)&7
  1372  074E  2F4F               	goto	l4177
  1373                           	
  1374  074F                     l718:	
  1375                           	line	56
  1376                           	
  1377  074F                     l4177:	
  1378                           ;lcd.c: 56: LCD_STROBE();
  1379  074F  120A  118A  2646   	fcall	_LCD_STROBE
              120A  118A         
  1380                           	line	57
  1381                           	
  1382  0754                     l719:	
  1383  0754  0008               	return
  1384                           	opt stack 0
  1385                           GLOBAL	__end_of_send
  1386  0755                     	__end_of_send:
  1387 ;; =============== function _send ends ============
  1388                           
  1389                           	signat	_send,4216
  1390                           	global	_sci_puts
  1391                           psect	text173,local,class=CODE,delta=2
  1392                           global __ptext173
  1393  06A5                     __ptext173:
  1394                           
  1395 ;; *************** function _sci_puts *****************
  1396 ;; Defined at:
  1397 ;;		line 34 in file "E:\EMBEDDED\Prolific\PIC\PIC_PGM_S\24_SERIAL_WATECHDOG TIMER\sci.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;  aa              1    wreg     PTR const unsigned char 
  1400 ;;		 -> STR_1(7), 
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;  aa              1    3[COMMON] PTR const unsigned char 
  1403 ;;		 -> STR_1(7), 
  1404 ;; Return value:  Size  Location     Type
  1405 ;;		None               void
  1406 ;; Registers used:
  1407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1413 ;;      Params:         0       0       0       0       0
  1414 ;;      Locals:         1       0       0       0       0
  1415 ;;      Temps:          2       0       0       0       0
  1416 ;;      Totals:         3       0       0       0       0
  1417 ;;Total ram usage:        3 bytes
  1418 ;; Hardware stack levels used:    1
  1419 ;; Hardware stack levels required when called:    1
  1420 ;; This function calls:
  1421 ;;		_sci_putch
  1422 ;; This function is called by:
  1423 ;;		_main
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           psect	text173
  1427                           	file	"E:\EMBEDDED\Prolific\PIC\PIC_PGM_S\24_SERIAL_WATECHDOG TIMER\sci.c"
  1428                           	line	34
  1429                           	global	__size_of_sci_puts
  1430  002A                     	__size_of_sci_puts	equ	__end_of_sci_puts-_sci_puts
  1431                           	
  1432  06A5                     _sci_puts:	
  1433                           	opt	stack 6
  1434                           ; Regs used in _sci_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1435                           ;sci_puts@aa stored from wreg
  1436  06A5  00F3               	movwf	(sci_puts@aa)
  1437                           	line	35
  1438                           	
  1439  06A6                     l4143:	
  1440                           ;sci.c: 35: while(*aa)
  1441  06A6  2EC1               	goto	l4151
  1442                           	
  1443  06A7                     l1452:	
  1444                           	line	37
  1445                           	
  1446  06A7                     l4145:	
  1447                           ;sci.c: 36: {
  1448                           ;sci.c: 37: sci_putch(*aa++);
  1449  06A7  0873               	movf	(sci_puts@aa),w
  1450  06A8  0084               	movwf	fsr0
  1451  06A9  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1452  06AE  120A  118A  263A   	fcall	_sci_putch
              120A  118A         
  1453                           	
  1454  06B3                     l4147:	
  1455  06B3  3001               	movlw	(01h)
  1456  06B4  00F1               	movwf	(??_sci_puts+0)+0
  1457  06B5  0871               	movf	(??_sci_puts+0)+0,w
  1458  06B6  07F3               	addwf	(sci_puts@aa),f
  1459                           	line	38
  1460                           	
  1461  06B7                     l4149:	
  1462                           ;sci.c: 38: _delay((unsigned long)((15)*(4000000/4000.0)));
  1463                           	opt asmopt_off
  1464  06B7  3014               movlw	20
  1465  06B8  00F2               movwf	((??_sci_puts+0)+0+1),f
  1466  06B9  3079               	movlw	121
  1467  06BA  00F1               movwf	((??_sci_puts+0)+0),f
  1468  06BB                     u2387:
  1469  06BB  0BF1               	decfsz	((??_sci_puts+0)+0),f
  1470  06BC  2EBB               	goto	u2387
  1471  06BD  0BF2               	decfsz	((??_sci_puts+0)+0+1),f
  1472  06BE  2EBB               	goto	u2387
  1473  06BF  2EC0               	nop2
  1474                           opt asmopt_on
  1475                           
  1476  06C0  2EC1               	goto	l4151
  1477                           	line	39
  1478                           	
  1479  06C1                     l1451:	
  1480                           	line	35
  1481                           	
  1482  06C1                     l4151:	
  1483  06C1  0873               	movf	(sci_puts@aa),w
  1484  06C2  0084               	movwf	fsr0
  1485  06C3  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1486  06C8  3800               	iorlw	0
  1487  06C9  1D03               	skipz
  1488  06CA  2ECC               	goto	u2311
  1489  06CB  2ECD               	goto	u2310
  1490  06CC                     u2311:
  1491  06CC  2EA7               	goto	l4145
  1492  06CD                     u2310:
  1493  06CD  2ECE               	goto	l1454
  1494                           	
  1495  06CE                     l1453:	
  1496                           	line	40
  1497                           	
  1498  06CE                     l1454:	
  1499  06CE  0008               	return
  1500                           	opt stack 0
  1501                           GLOBAL	__end_of_sci_puts
  1502  06CF                     	__end_of_sci_puts:
  1503 ;; =============== function _sci_puts ends ============
  1504                           
  1505                           	signat	_sci_puts,4216
  1506                           	global	_LCD_STROBE
  1507                           psect	text174,local,class=CODE,delta=2
  1508                           global __ptext174
  1509  0646                     __ptext174:
  1510                           
  1511 ;; *************** function _LCD_STROBE *****************
  1512 ;; Defined at:
  1513 ;;		line 32 in file "E:\EMBEDDED\Prolific\PIC\PIC_PGM_S\24_SERIAL_WATECHDOG TIMER\lcd.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;		None
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;		None
  1518 ;; Return value:  Size  Location     Type
  1519 ;;		None               void
  1520 ;; Registers used:
  1521 ;;		wreg
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1527 ;;      Params:         0       0       0       0       0
  1528 ;;      Locals:         0       0       0       0       0
  1529 ;;      Temps:          2       0       0       0       0
  1530 ;;      Totals:         2       0       0       0       0
  1531 ;;Total ram usage:        2 bytes
  1532 ;; Hardware stack levels used:    1
  1533 ;; This function calls:
  1534 ;;		Nothing
  1535 ;; This function is called by:
  1536 ;;		_lcd_init
  1537 ;;		_send
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           psect	text174
  1541                           	file	"E:\EMBEDDED\Prolific\PIC\PIC_PGM_S\24_SERIAL_WATECHDOG TIMER\lcd.c"
  1542                           	line	32
  1543                           	global	__size_of_LCD_STROBE
  1544  0010                     	__size_of_LCD_STROBE	equ	__end_of_LCD_STROBE-_LCD_STROBE
  1545                           	
  1546  0646                     _LCD_STROBE:	
  1547                           	opt	stack 5
  1548                           ; Regs used in _LCD_STROBE: [wreg]
  1549                           	line	33
  1550                           	
  1551  0646                     l4137:	
  1552                           ;lcd.c: 33: RD3=1;
  1553  0646  1283               	bcf	status, 5	;RP0=0, select bank0
  1554  0647  1303               	bcf	status, 6	;RP1=0, select bank0
  1555  0648  1588               	bsf	(67/8),(67)&7
  1556                           	line	34
  1557                           	
  1558  0649                     l4139:	
  1559                           ;lcd.c: 34: _delay((unsigned long)((2)*(4000000/4000.0)));
  1560                           	opt asmopt_off
  1561  0649  3003               movlw	3
  1562  064A  00F1               movwf	((??_LCD_STROBE+0)+0+1),f
  1563  064B  3097               	movlw	151
  1564  064C  00F0               movwf	((??_LCD_STROBE+0)+0),f
  1565  064D                     u2397:
  1566  064D  0BF0               	decfsz	((??_LCD_STROBE+0)+0),f
  1567  064E  2E4D               	goto	u2397
  1568  064F  0BF1               	decfsz	((??_LCD_STROBE+0)+0+1),f
  1569  0650  2E4D               	goto	u2397
  1570  0651  2E52               	nop2
  1571                           opt asmopt_on
  1572                           
  1573                           	line	35
  1574                           	
  1575  0652                     l4141:	
  1576                           ;lcd.c: 35: RD3=0;
  1577  0652  1283               	bcf	status, 5	;RP0=0, select bank0
  1578  0653  1303               	bcf	status, 6	;RP1=0, select bank0
  1579  0654  1188               	bcf	(67/8),(67)&7
  1580                           	line	36
  1581                           	
  1582  0655                     l712:	
  1583  0655  0008               	return
  1584                           	opt stack 0
  1585                           GLOBAL	__end_of_LCD_STROBE
  1586  0656                     	__end_of_LCD_STROBE:
  1587 ;; =============== function _LCD_STROBE ends ============
  1588                           
  1589                           	signat	_LCD_STROBE,88
  1590                           	global	_sci_getch
  1591                           psect	text175,local,class=CODE,delta=2
  1592                           global __ptext175
  1593  0656                     __ptext175:
  1594                           
  1595 ;; *************** function _sci_getch *****************
  1596 ;; Defined at:
  1597 ;;		line 43 in file "E:\EMBEDDED\Prolific\PIC\PIC_PGM_S\24_SERIAL_WATECHDOG TIMER\sci.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;		None
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;		None
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  1    wreg      unsigned char 
  1604 ;; Registers used:
  1605 ;;		wreg
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1611 ;;      Params:         0       0       0       0       0
  1612 ;;      Locals:         0       0       0       0       0
  1613 ;;      Temps:          0       0       0       0       0
  1614 ;;      Totals:         0       0       0       0       0
  1615 ;;Total ram usage:        0 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; This function calls:
  1618 ;;		Nothing
  1619 ;; This function is called by:
  1620 ;;		_main
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           psect	text175
  1624                           	file	"E:\EMBEDDED\Prolific\PIC\PIC_PGM_S\24_SERIAL_WATECHDOG TIMER\sci.c"
  1625                           	line	43
  1626                           	global	__size_of_sci_getch
  1627  0011                     	__size_of_sci_getch	equ	__end_of_sci_getch-_sci_getch
  1628                           	
  1629  0656                     _sci_getch:	
  1630                           	opt	stack 7
  1631                           ; Regs used in _sci_getch: [wreg]
  1632                           	line	44
  1633                           	
  1634  0656                     l3271:	
  1635                           ;sci.c: 44: while(!RCIF)
  1636  0656  2E57               	goto	l1457
  1637                           	
  1638  0657                     l1458:	
  1639                           	line	45
  1640                           ;sci.c: 45: continue;
  1641                           	
  1642  0657                     l1457:	
  1643                           	line	44
  1644  0657  1283               	bcf	status, 5	;RP0=0, select bank0
  1645  0658  1303               	bcf	status, 6	;RP1=0, select bank0
  1646  0659  1E8C               	btfss	(101/8),(101)&7
  1647  065A  2E5C               	goto	u81
  1648  065B  2E5D               	goto	u80
  1649  065C                     u81:
  1650  065C  2E57               	goto	l1457
  1651  065D                     u80:
  1652                           	
  1653  065D                     l1459:	
  1654                           	line	46
  1655                           ;sci.c: 46: if(OERR==1)
  1656  065D  1C98               	btfss	(193/8),(193)&7
  1657  065E  2E60               	goto	u91
  1658  065F  2E61               	goto	u90
  1659  0660                     u91:
  1660  0660  2E64               	goto	l3275
  1661  0661                     u90:
  1662                           	line	48
  1663                           	
  1664  0661                     l3273:	
  1665                           ;sci.c: 47: {
  1666                           ;sci.c: 48: CREN=0;
  1667  0661  1218               	bcf	(196/8),(196)&7
  1668                           	line	49
  1669                           ;sci.c: 49: CREN=1;
  1670  0662  1618               	bsf	(196/8),(196)&7
  1671  0663  2E64               	goto	l3275
  1672                           	line	50
  1673                           	
  1674  0664                     l1460:	
  1675                           	line	51
  1676                           	
  1677  0664                     l3275:	
  1678                           ;sci.c: 50: }
  1679                           ;sci.c: 51: return RCREG;
  1680  0664  081A               	movf	(26),w	;volatile
  1681  0665  2E66               	goto	l1461
  1682                           	
  1683  0666                     l3277:	
  1684                           	line	52
  1685                           	
  1686  0666                     l1461:	
  1687  0666  0008               	return
  1688                           	opt stack 0
  1689                           GLOBAL	__end_of_sci_getch
  1690  0667                     	__end_of_sci_getch:
  1691 ;; =============== function _sci_getch ends ============
  1692                           
  1693                           	signat	_sci_getch,89
  1694                           	global	_sci_putch
  1695                           psect	text176,local,class=CODE,delta=2
  1696                           global __ptext176
  1697  063A                     __ptext176:
  1698                           
  1699 ;; *************** function _sci_putch *****************
  1700 ;; Defined at:
  1701 ;;		line 27 in file "E:\EMBEDDED\Prolific\PIC\PIC_PGM_S\24_SERIAL_WATECHDOG TIMER\sci.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;  byte            1    wreg     unsigned char 
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;  byte            1    0[COMMON] unsigned char 
  1706 ;; Return value:  Size  Location     Type
  1707 ;;		None               void
  1708 ;; Registers used:
  1709 ;;		wreg
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1715 ;;      Params:         0       0       0       0       0
  1716 ;;      Locals:         1       0       0       0       0
  1717 ;;      Temps:          0       0       0       0       0
  1718 ;;      Totals:         1       0       0       0       0
  1719 ;;Total ram usage:        1 bytes
  1720 ;; Hardware stack levels used:    1
  1721 ;; This function calls:
  1722 ;;		Nothing
  1723 ;; This function is called by:
  1724 ;;		_sci_puts
  1725 ;;		_main
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           psect	text176
  1729                           	file	"E:\EMBEDDED\Prolific\PIC\PIC_PGM_S\24_SERIAL_WATECHDOG TIMER\sci.c"
  1730                           	line	27
  1731                           	global	__size_of_sci_putch
  1732  000C                     	__size_of_sci_putch	equ	__end_of_sci_putch-_sci_putch
  1733                           	
  1734  063A                     _sci_putch:	
  1735                           	opt	stack 7
  1736                           ; Regs used in _sci_putch: [wreg]
  1737                           ;sci_putch@byte stored from wreg
  1738  063A  00F0               	movwf	(sci_putch@byte)
  1739                           	line	28
  1740                           	
  1741  063B                     l3267:	
  1742                           ;sci.c: 28: while(!TXIF)
  1743  063B  2E3C               	goto	l1445
  1744                           	
  1745  063C                     l1446:	
  1746                           	line	29
  1747                           ;sci.c: 29: continue;
  1748                           	
  1749  063C                     l1445:	
  1750                           	line	28
  1751  063C  1283               	bcf	status, 5	;RP0=0, select bank0
  1752  063D  1303               	bcf	status, 6	;RP1=0, select bank0
  1753  063E  1E0C               	btfss	(100/8),(100)&7
  1754  063F  2E41               	goto	u71
  1755  0640  2E42               	goto	u70
  1756  0641                     u71:
  1757  0641  2E3C               	goto	l1445
  1758  0642                     u70:
  1759  0642  2E43               	goto	l3269
  1760                           	
  1761  0643                     l1447:	
  1762                           	line	30
  1763                           	
  1764  0643                     l3269:	
  1765                           ;sci.c: 30: TXREG=byte;
  1766  0643  0870               	movf	(sci_putch@byte),w
  1767  0644  0099               	movwf	(25)	;volatile
  1768                           	line	31
  1769                           	
  1770  0645                     l1448:	
  1771  0645  0008               	return
  1772                           	opt stack 0
  1773                           GLOBAL	__end_of_sci_putch
  1774  0646                     	__end_of_sci_putch:
  1775 ;; =============== function _sci_putch ends ============
  1776                           
  1777                           	signat	_sci_putch,4216
  1778                           	global	_sci_init
  1779                           psect	text177,local,class=CODE,delta=2
  1780                           global __ptext177
  1781  0667                     __ptext177:
  1782                           
  1783 ;; *************** function _sci_init *****************
  1784 ;; Defined at:
  1785 ;;		line 11 in file "E:\EMBEDDED\Prolific\PIC\PIC_PGM_S\24_SERIAL_WATECHDOG TIMER\sci.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;  bd_rt           2    0[COMMON] unsigned int 
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;		None
  1790 ;; Return value:  Size  Location     Type
  1791 ;;		None               void
  1792 ;; Registers used:
  1793 ;;		wreg
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1799 ;;      Params:         2       0       0       0       0
  1800 ;;      Locals:         0       0       0       0       0
  1801 ;;      Temps:          0       0       0       0       0
  1802 ;;      Totals:         2       0       0       0       0
  1803 ;;Total ram usage:        2 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; This function calls:
  1806 ;;		Nothing
  1807 ;; This function is called by:
  1808 ;;		_main
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           psect	text177
  1812                           	file	"E:\EMBEDDED\Prolific\PIC\PIC_PGM_S\24_SERIAL_WATECHDOG TIMER\sci.c"
  1813                           	line	11
  1814                           	global	__size_of_sci_init
  1815  001C                     	__size_of_sci_init	equ	__end_of_sci_init-_sci_init
  1816                           	
  1817  0667                     _sci_init:	
  1818                           	opt	stack 7
  1819                           ; Regs used in _sci_init: [wreg]
  1820                           	line	12
  1821                           	
  1822  0667                     l3253:	
  1823                           ;sci.c: 12: TX9=0;
  1824  0667  1683               	bsf	status, 5	;RP0=1, select bank1
  1825  0668  1303               	bcf	status, 6	;RP1=0, select bank1
  1826  0669  1318               	bcf	(1222/8)^080h,(1222)&7
  1827                           	line	13
  1828                           ;sci.c: 13: SYNC=0;
  1829  066A  1218               	bcf	(1220/8)^080h,(1220)&7
  1830                           	line	14
  1831                           ;sci.c: 14: BRGH=1;
  1832  066B  1518               	bsf	(1218/8)^080h,(1218)&7
  1833                           	line	15
  1834                           ;sci.c: 15: SPEN=1;
  1835  066C  1283               	bcf	status, 5	;RP0=0, select bank0
  1836  066D  1303               	bcf	status, 6	;RP1=0, select bank0
  1837  066E  1798               	bsf	(199/8),(199)&7
  1838                           	line	16
  1839                           ;sci.c: 16: RX9=0;
  1840  066F  1318               	bcf	(198/8),(198)&7
  1841                           	line	17
  1842                           ;sci.c: 17: CREN=1;
  1843  0670  1618               	bsf	(196/8),(196)&7
  1844                           	line	18
  1845                           	
  1846  0671                     l3255:	
  1847                           ;sci.c: 18: SPBRG=bd_rt;
  1848  0671  0870               	movf	(sci_init@bd_rt),w
  1849  0672  1683               	bsf	status, 5	;RP0=1, select bank1
  1850  0673  1303               	bcf	status, 6	;RP1=0, select bank1
  1851  0674  0099               	movwf	(153)^080h	;volatile
  1852                           	line	19
  1853                           	
  1854  0675                     l3257:	
  1855                           ;sci.c: 19: RCIF=0;
  1856  0675  1283               	bcf	status, 5	;RP0=0, select bank0
  1857  0676  1303               	bcf	status, 6	;RP1=0, select bank0
  1858  0677  128C               	bcf	(101/8),(101)&7
  1859                           	line	20
  1860                           	
  1861  0678                     l3259:	
  1862                           ;sci.c: 20: TXEN=1;
  1863  0678  1683               	bsf	status, 5	;RP0=1, select bank1
  1864  0679  1303               	bcf	status, 6	;RP1=0, select bank1
  1865  067A  1698               	bsf	(1221/8)^080h,(1221)&7
  1866                           	line	21
  1867                           	
  1868  067B                     l3261:	
  1869                           ;sci.c: 21: TXIF=0;
  1870  067B  1283               	bcf	status, 5	;RP0=0, select bank0
  1871  067C  1303               	bcf	status, 6	;RP1=0, select bank0
  1872  067D  120C               	bcf	(100/8),(100)&7
  1873                           	line	22
  1874                           	
  1875  067E                     l3263:	
  1876                           ;sci.c: 22: TXIE=0;
  1877  067E  1683               	bsf	status, 5	;RP0=1, select bank1
  1878  067F  1303               	bcf	status, 6	;RP1=0, select bank1
  1879  0680  120C               	bcf	(1124/8)^080h,(1124)&7
  1880                           	line	23
  1881                           	
  1882  0681                     l3265:	
  1883                           ;sci.c: 23: RCIE=0;
  1884  0681  128C               	bcf	(1125/8)^080h,(1125)&7
  1885                           	line	24
  1886                           	
  1887  0682                     l1442:	
  1888  0682  0008               	return
  1889                           	opt stack 0
  1890                           GLOBAL	__end_of_sci_init
  1891  0683                     	__end_of_sci_init:
  1892 ;; =============== function _sci_init ends ============
  1893                           
  1894                           	signat	_sci_init,4216
  1895                           psect	text178,local,class=CODE,delta=2
  1896                           global __ptext178
  1897  0000                     __ptext178:
  1898                           	global	btemp
  1899  007E                     	btemp set 07Eh
  1900                           
  1901                           	DABS	1,126,2	;btemp
  1902                           	global	wtemp0
  1903  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Sun May 07 15:37:32 2017

                   pc 0002                    _RD 0C60                    u70 0642                    u71 0641  
                  u80 065D                    u81 065C                    u90 0661                    u91 0660  
                  _WR 0C61                    fsr 0004                   l712 0655                   l722 0697  
                 l715 0724                   l723 0686                   l731 0639                   l716 0726  
                 l724 06A4                   l740 06F5                   l717 074D                   l709 079E  
                 l725 06A4                   l741 070D                   l718 074F                   l734 06FF  
                 l719 0754                   l735 06D1                   l728 0630                   l736 070D  
                 l737 06DA                   l738 06E3                   l739 06EC                   _GIE 005F  
                 _RD2 0042                   _RD3 0043                   _RX9 00C6                   _TX9 04C6  
                 fsr0 0004           lcd_goto@pos 0076                  l1442 0682                  l1451 06C1  
                l1460 0664                  l1452 06A7                  l2164 07C1                  l1445 063C  
                l1461 0666                  l1453 06CE                  l2165 07FB                  l1446 063C  
                l1454 06CE                  l2166 07FC                  l1447 0643                  l2167 07FD  
                l1448 0645                  l2168 07FD                  l1457 0657                  l4201 0629  
                l1458 0657                  l1459 065D                  l4203 062A                  l4211 06D2  
                l3261 067B                  l3253 0667                  l4141 0652                  l4205 0632  
                l4221 06FE                  l4213 06DB                  l3263 067E                  l3255 0671  
                l3271 0656                  l4151 06C1                  l4143 06A6                  l4207 0633  
                l4215 06E4                  l4223 06FF                  l4231 07B3                  l3265 0681  
                l3257 0675                  l3273 0661                  l4137 0646                  l4145 06A7  
                l4161 0722                  l4153 070F                  l4217 06ED                  l4209 06D0  
                l4241 07C8                  l4233 07B8                  l4225 079F                  l3259 0678  
                l3267 063B                  l3275 0664                  l4139 0649                  l4147 06B3  
                l4171 0741                  l4163 0726                  l4155 0713                  l4219 06F6  
                l4251 07E4                  l4243 07D0                  l4235 07BE                  l4227 07A8  
                l3269 0643                  l3277 0666                  l4149 06B7                  l4173 0747  
                l4165 072B                  l4157 0718                  l4181 0758                  l4253 07EB  
                l4245 07D1                  l4237 07C1                  l4229 07AE                  l4175 074B  
                l4167 072F                  l4159 071E                  l4191 076F                  l4183 0761  
                l4255 07F1                  l4247 07D7                  l4239 07C8                  l4177 074F  
                l4169 073C                  l4185 0764                  l4193 0684                  l4257 07F8  
                l4249 07DE                  l4187 0765                  l4179 0755                  l4195 0686  
                l4189 076A                  l4197 0692                  l4199 0697                  STR_1 0015  
                STR_2 0009                  _BRGH 04C2                  _CREN 00C4                  u2310 06CD  
                u2311 06CC                  u2320 0722                  u2321 0721                  u2340 074B  
                u2341 074A                  u2350 06A3                  u2335 0732                  u2351 06A2  
                u2360 07F8                  u2361 07F7                  u2377 075C                  u2387 06BB  
                u2397 064D                  _RCIE 0465                  _RCIF 0065                  _OERR 00C1  
                _SPEN 00C7                  _TXIE 0464                  _WREN 0C62                  _TXEN 04C5  
                _TXIF 0064                  _SYNC 04C4                  _main 079F                  _mode 03E0  
                _send 070E                  btemp 007E          lcd_goto@line 0077                  start 0000  
               ?_main 0070                 _EEADR 010D                 ?_send 0070                 _CARRY 0018  
               _RCREG 001A                 _SPBRG 0099                 _PORTD 0008                 _TRISD 0088  
               _TXREG 0019   __size_of_LCD_STROBE 0010                 main@c 007A                 main@x 0079  
      __pbitbssCOMMON 03E0                 pclath 000A                 send@x 0075                 setwdt 07C8  
               status 0003                 wtemp0 007E          __end_of_main 0800          __end_of_send 0755  
              ??_main 0078                ??_send 0072                _EEDATA 010C                _EECON1 018C  
              _EECON2 018D      __end_of_lcd_init 079F      __end_of_lcd_goto 070E      __end_of_lcd_puts 06A5  
    __end_of_sci_init 0683      __end_of_sci_puts 06CF         sci_init@bd_rt 0070          ??_LCD_STROBE 0070  
      __pcstackCOMMON 0070    __size_of_lcd_clear 0008    __size_of_lcd_putch 0009    __end_of_LCD_STROBE 0656  
       sci_putch@byte 0070            __pmaintext 079F    __size_of_sci_getch 0011    __size_of_sci_putch 000C  
           ?_lcd_init 0070             ?_lcd_goto 0076             ?_lcd_puts 0070             ?_sci_init 0070  
           ?_sci_puts 0070     __end_of_lcd_clear 0631     __end_of_lcd_putch 063A     __end_of_sci_getch 0667  
          ??_lcd_init 0076            ??_lcd_goto 0077     __end_of_sci_putch 0646            ??_lcd_puts 0076  
end_of_initialization 0625            ??_sci_init 0072            ??_sci_puts 0071            lcd_putch@c 0076  
 start_initialization 0624     __size_of_lcd_init 004A     __size_of_lcd_goto 003F     __size_of_lcd_puts 0022  
          sci_puts@aa 0073     __size_of_sci_init 001C     __size_of_sci_puts 002A             __ptext170 0683  
           __ptext171 0755             __ptext172 070E             __ptext173 06A5             __ptext174 0646  
           __ptext166 0000             __ptext175 0656             __ptext167 06CF             __ptext176 063A  
           __ptext168 0631             __ptext177 0667             __ptext169 0629             __ptext178 0000  
           _lcd_clear 0629             __pstrings 0003             _lcd_putch 0631             _sci_getch 0656  
           _sci_putch 063A            ?_lcd_clear 0070            ?_lcd_putch 0070           __stringbase 0008  
           lcd_puts@s 0077            ?_sci_getch 0070            ?_sci_putch 0070              _lcd_init 0755  
            _lcd_goto 06CF              _lcd_puts 0683         __size_of_main 0061         __size_of_send 0047  
            _sci_init 0667              _sci_puts 06A5            _LCD_STROBE 0646           ??_lcd_clear 0076  
         ??_lcd_putch 0076              send@temp 0074           ??_sci_getch 0070           ??_sci_putch 0070  
           stringcode 0003              stringdir 0003              stringtab 0003           ?_LCD_STROBE 0070  
